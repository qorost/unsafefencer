
unsafe fn test_plugin_1 () {
    println!("This is function 1");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2 () {
    println!("This is function 2");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3 () {
    println!("This is function 3");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_4 () {
    println!("This is function 4");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_5 () {
    println!("This is function 5");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_6 () {
    println!("This is function 6");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_7 () {
    println!("This is function 7");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_8 () {
    println!("This is function 8");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_9 () {
    println!("This is function 9");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_10 () {
    println!("This is function 10");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_11 () {
    println!("This is function 11");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_12 () {
    println!("This is function 12");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_13 () {
    println!("This is function 13");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_14 () {
    println!("This is function 14");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_15 () {
    println!("This is function 15");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_16 () {
    println!("This is function 16");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_17 () {
    println!("This is function 17");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_18 () {
    println!("This is function 18");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_19 () {
    println!("This is function 19");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_20 () {
    println!("This is function 20");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_21 () {
    println!("This is function 21");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_22 () {
    println!("This is function 22");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_23 () {
    println!("This is function 23");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_24 () {
    println!("This is function 24");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_25 () {
    println!("This is function 25");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_26 () {
    println!("This is function 26");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_27 () {
    println!("This is function 27");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_28 () {
    println!("This is function 28");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_29 () {
    println!("This is function 29");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_30 () {
    println!("This is function 30");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_31 () {
    println!("This is function 31");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_32 () {
    println!("This is function 32");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_33 () {
    println!("This is function 33");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_34 () {
    println!("This is function 34");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_35 () {
    println!("This is function 35");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_36 () {
    println!("This is function 36");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_37 () {
    println!("This is function 37");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_38 () {
    println!("This is function 38");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_39 () {
    println!("This is function 39");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_40 () {
    println!("This is function 40");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_41 () {
    println!("This is function 41");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_42 () {
    println!("This is function 42");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_43 () {
    println!("This is function 43");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_44 () {
    println!("This is function 44");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_45 () {
    println!("This is function 45");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_46 () {
    println!("This is function 46");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_47 () {
    println!("This is function 47");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_48 () {
    println!("This is function 48");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_49 () {
    println!("This is function 49");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_50 () {
    println!("This is function 50");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_51 () {
    println!("This is function 51");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_52 () {
    println!("This is function 52");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_53 () {
    println!("This is function 53");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_54 () {
    println!("This is function 54");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_55 () {
    println!("This is function 55");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_56 () {
    println!("This is function 56");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_57 () {
    println!("This is function 57");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_58 () {
    println!("This is function 58");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_59 () {
    println!("This is function 59");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_60 () {
    println!("This is function 60");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_61 () {
    println!("This is function 61");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_62 () {
    println!("This is function 62");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_63 () {
    println!("This is function 63");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_64 () {
    println!("This is function 64");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_65 () {
    println!("This is function 65");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_66 () {
    println!("This is function 66");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_67 () {
    println!("This is function 67");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_68 () {
    println!("This is function 68");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_69 () {
    println!("This is function 69");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_70 () {
    println!("This is function 70");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_71 () {
    println!("This is function 71");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_72 () {
    println!("This is function 72");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_73 () {
    println!("This is function 73");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_74 () {
    println!("This is function 74");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_75 () {
    println!("This is function 75");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_76 () {
    println!("This is function 76");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_77 () {
    println!("This is function 77");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_78 () {
    println!("This is function 78");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_79 () {
    println!("This is function 79");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_80 () {
    println!("This is function 80");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_81 () {
    println!("This is function 81");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_82 () {
    println!("This is function 82");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_83 () {
    println!("This is function 83");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_84 () {
    println!("This is function 84");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_85 () {
    println!("This is function 85");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_86 () {
    println!("This is function 86");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_87 () {
    println!("This is function 87");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_88 () {
    println!("This is function 88");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_89 () {
    println!("This is function 89");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_90 () {
    println!("This is function 90");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_91 () {
    println!("This is function 91");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_92 () {
    println!("This is function 92");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_93 () {
    println!("This is function 93");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_94 () {
    println!("This is function 94");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_95 () {
    println!("This is function 95");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_96 () {
    println!("This is function 96");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_97 () {
    println!("This is function 97");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_98 () {
    println!("This is function 98");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_99 () {
    println!("This is function 99");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_100 () {
    println!("This is function 100");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_101 () {
    println!("This is function 101");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_102 () {
    println!("This is function 102");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_103 () {
    println!("This is function 103");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_104 () {
    println!("This is function 104");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_105 () {
    println!("This is function 105");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_106 () {
    println!("This is function 106");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_107 () {
    println!("This is function 107");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_108 () {
    println!("This is function 108");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_109 () {
    println!("This is function 109");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_110 () {
    println!("This is function 110");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_111 () {
    println!("This is function 111");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_112 () {
    println!("This is function 112");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_113 () {
    println!("This is function 113");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_114 () {
    println!("This is function 114");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_115 () {
    println!("This is function 115");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_116 () {
    println!("This is function 116");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_117 () {
    println!("This is function 117");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_118 () {
    println!("This is function 118");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_119 () {
    println!("This is function 119");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_120 () {
    println!("This is function 120");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_121 () {
    println!("This is function 121");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_122 () {
    println!("This is function 122");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_123 () {
    println!("This is function 123");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_124 () {
    println!("This is function 124");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_125 () {
    println!("This is function 125");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_126 () {
    println!("This is function 126");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_127 () {
    println!("This is function 127");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_128 () {
    println!("This is function 128");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_129 () {
    println!("This is function 129");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_130 () {
    println!("This is function 130");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_131 () {
    println!("This is function 131");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_132 () {
    println!("This is function 132");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_133 () {
    println!("This is function 133");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_134 () {
    println!("This is function 134");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_135 () {
    println!("This is function 135");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_136 () {
    println!("This is function 136");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_137 () {
    println!("This is function 137");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_138 () {
    println!("This is function 138");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_139 () {
    println!("This is function 139");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_140 () {
    println!("This is function 140");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_141 () {
    println!("This is function 141");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_142 () {
    println!("This is function 142");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_143 () {
    println!("This is function 143");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_144 () {
    println!("This is function 144");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_145 () {
    println!("This is function 145");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_146 () {
    println!("This is function 146");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_147 () {
    println!("This is function 147");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_148 () {
    println!("This is function 148");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_149 () {
    println!("This is function 149");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_150 () {
    println!("This is function 150");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_151 () {
    println!("This is function 151");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_152 () {
    println!("This is function 152");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_153 () {
    println!("This is function 153");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_154 () {
    println!("This is function 154");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_155 () {
    println!("This is function 155");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_156 () {
    println!("This is function 156");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_157 () {
    println!("This is function 157");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_158 () {
    println!("This is function 158");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_159 () {
    println!("This is function 159");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_160 () {
    println!("This is function 160");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_161 () {
    println!("This is function 161");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_162 () {
    println!("This is function 162");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_163 () {
    println!("This is function 163");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_164 () {
    println!("This is function 164");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_165 () {
    println!("This is function 165");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_166 () {
    println!("This is function 166");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_167 () {
    println!("This is function 167");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_168 () {
    println!("This is function 168");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_169 () {
    println!("This is function 169");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_170 () {
    println!("This is function 170");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_171 () {
    println!("This is function 171");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_172 () {
    println!("This is function 172");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_173 () {
    println!("This is function 173");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_174 () {
    println!("This is function 174");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_175 () {
    println!("This is function 175");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_176 () {
    println!("This is function 176");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_177 () {
    println!("This is function 177");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_178 () {
    println!("This is function 178");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_179 () {
    println!("This is function 179");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_180 () {
    println!("This is function 180");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_181 () {
    println!("This is function 181");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_182 () {
    println!("This is function 182");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_183 () {
    println!("This is function 183");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_184 () {
    println!("This is function 184");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_185 () {
    println!("This is function 185");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_186 () {
    println!("This is function 186");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_187 () {
    println!("This is function 187");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_188 () {
    println!("This is function 188");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_189 () {
    println!("This is function 189");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_190 () {
    println!("This is function 190");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_191 () {
    println!("This is function 191");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_192 () {
    println!("This is function 192");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_193 () {
    println!("This is function 193");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_194 () {
    println!("This is function 194");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_195 () {
    println!("This is function 195");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_196 () {
    println!("This is function 196");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_197 () {
    println!("This is function 197");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_198 () {
    println!("This is function 198");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_199 () {
    println!("This is function 199");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_200 () {
    println!("This is function 200");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_201 () {
    println!("This is function 201");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_202 () {
    println!("This is function 202");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_203 () {
    println!("This is function 203");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_204 () {
    println!("This is function 204");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_205 () {
    println!("This is function 205");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_206 () {
    println!("This is function 206");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_207 () {
    println!("This is function 207");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_208 () {
    println!("This is function 208");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_209 () {
    println!("This is function 209");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_210 () {
    println!("This is function 210");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_211 () {
    println!("This is function 211");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_212 () {
    println!("This is function 212");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_213 () {
    println!("This is function 213");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_214 () {
    println!("This is function 214");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_215 () {
    println!("This is function 215");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_216 () {
    println!("This is function 216");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_217 () {
    println!("This is function 217");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_218 () {
    println!("This is function 218");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_219 () {
    println!("This is function 219");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_220 () {
    println!("This is function 220");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_221 () {
    println!("This is function 221");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_222 () {
    println!("This is function 222");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_223 () {
    println!("This is function 223");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_224 () {
    println!("This is function 224");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_225 () {
    println!("This is function 225");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_226 () {
    println!("This is function 226");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_227 () {
    println!("This is function 227");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_228 () {
    println!("This is function 228");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_229 () {
    println!("This is function 229");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_230 () {
    println!("This is function 230");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_231 () {
    println!("This is function 231");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_232 () {
    println!("This is function 232");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_233 () {
    println!("This is function 233");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_234 () {
    println!("This is function 234");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_235 () {
    println!("This is function 235");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_236 () {
    println!("This is function 236");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_237 () {
    println!("This is function 237");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_238 () {
    println!("This is function 238");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_239 () {
    println!("This is function 239");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_240 () {
    println!("This is function 240");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_241 () {
    println!("This is function 241");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_242 () {
    println!("This is function 242");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_243 () {
    println!("This is function 243");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_244 () {
    println!("This is function 244");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_245 () {
    println!("This is function 245");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_246 () {
    println!("This is function 246");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_247 () {
    println!("This is function 247");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_248 () {
    println!("This is function 248");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_249 () {
    println!("This is function 249");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_250 () {
    println!("This is function 250");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_251 () {
    println!("This is function 251");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_252 () {
    println!("This is function 252");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_253 () {
    println!("This is function 253");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_254 () {
    println!("This is function 254");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_255 () {
    println!("This is function 255");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_256 () {
    println!("This is function 256");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_257 () {
    println!("This is function 257");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_258 () {
    println!("This is function 258");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_259 () {
    println!("This is function 259");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_260 () {
    println!("This is function 260");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_261 () {
    println!("This is function 261");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_262 () {
    println!("This is function 262");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_263 () {
    println!("This is function 263");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_264 () {
    println!("This is function 264");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_265 () {
    println!("This is function 265");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_266 () {
    println!("This is function 266");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_267 () {
    println!("This is function 267");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_268 () {
    println!("This is function 268");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_269 () {
    println!("This is function 269");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_270 () {
    println!("This is function 270");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_271 () {
    println!("This is function 271");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_272 () {
    println!("This is function 272");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_273 () {
    println!("This is function 273");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_274 () {
    println!("This is function 274");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_275 () {
    println!("This is function 275");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_276 () {
    println!("This is function 276");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_277 () {
    println!("This is function 277");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_278 () {
    println!("This is function 278");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_279 () {
    println!("This is function 279");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_280 () {
    println!("This is function 280");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_281 () {
    println!("This is function 281");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_282 () {
    println!("This is function 282");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_283 () {
    println!("This is function 283");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_284 () {
    println!("This is function 284");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_285 () {
    println!("This is function 285");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_286 () {
    println!("This is function 286");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_287 () {
    println!("This is function 287");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_288 () {
    println!("This is function 288");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_289 () {
    println!("This is function 289");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_290 () {
    println!("This is function 290");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_291 () {
    println!("This is function 291");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_292 () {
    println!("This is function 292");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_293 () {
    println!("This is function 293");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_294 () {
    println!("This is function 294");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_295 () {
    println!("This is function 295");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_296 () {
    println!("This is function 296");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_297 () {
    println!("This is function 297");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_298 () {
    println!("This is function 298");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_299 () {
    println!("This is function 299");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_300 () {
    println!("This is function 300");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_301 () {
    println!("This is function 301");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_302 () {
    println!("This is function 302");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_303 () {
    println!("This is function 303");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_304 () {
    println!("This is function 304");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_305 () {
    println!("This is function 305");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_306 () {
    println!("This is function 306");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_307 () {
    println!("This is function 307");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_308 () {
    println!("This is function 308");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_309 () {
    println!("This is function 309");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_310 () {
    println!("This is function 310");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_311 () {
    println!("This is function 311");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_312 () {
    println!("This is function 312");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_313 () {
    println!("This is function 313");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_314 () {
    println!("This is function 314");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_315 () {
    println!("This is function 315");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_316 () {
    println!("This is function 316");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_317 () {
    println!("This is function 317");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_318 () {
    println!("This is function 318");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_319 () {
    println!("This is function 319");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_320 () {
    println!("This is function 320");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_321 () {
    println!("This is function 321");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_322 () {
    println!("This is function 322");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_323 () {
    println!("This is function 323");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_324 () {
    println!("This is function 324");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_325 () {
    println!("This is function 325");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_326 () {
    println!("This is function 326");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_327 () {
    println!("This is function 327");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_328 () {
    println!("This is function 328");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_329 () {
    println!("This is function 329");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_330 () {
    println!("This is function 330");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_331 () {
    println!("This is function 331");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_332 () {
    println!("This is function 332");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_333 () {
    println!("This is function 333");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_334 () {
    println!("This is function 334");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_335 () {
    println!("This is function 335");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_336 () {
    println!("This is function 336");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_337 () {
    println!("This is function 337");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_338 () {
    println!("This is function 338");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_339 () {
    println!("This is function 339");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_340 () {
    println!("This is function 340");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_341 () {
    println!("This is function 341");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_342 () {
    println!("This is function 342");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_343 () {
    println!("This is function 343");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_344 () {
    println!("This is function 344");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_345 () {
    println!("This is function 345");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_346 () {
    println!("This is function 346");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_347 () {
    println!("This is function 347");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_348 () {
    println!("This is function 348");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_349 () {
    println!("This is function 349");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_350 () {
    println!("This is function 350");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_351 () {
    println!("This is function 351");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_352 () {
    println!("This is function 352");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_353 () {
    println!("This is function 353");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_354 () {
    println!("This is function 354");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_355 () {
    println!("This is function 355");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_356 () {
    println!("This is function 356");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_357 () {
    println!("This is function 357");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_358 () {
    println!("This is function 358");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_359 () {
    println!("This is function 359");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_360 () {
    println!("This is function 360");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_361 () {
    println!("This is function 361");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_362 () {
    println!("This is function 362");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_363 () {
    println!("This is function 363");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_364 () {
    println!("This is function 364");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_365 () {
    println!("This is function 365");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_366 () {
    println!("This is function 366");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_367 () {
    println!("This is function 367");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_368 () {
    println!("This is function 368");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_369 () {
    println!("This is function 369");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_370 () {
    println!("This is function 370");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_371 () {
    println!("This is function 371");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_372 () {
    println!("This is function 372");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_373 () {
    println!("This is function 373");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_374 () {
    println!("This is function 374");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_375 () {
    println!("This is function 375");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_376 () {
    println!("This is function 376");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_377 () {
    println!("This is function 377");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_378 () {
    println!("This is function 378");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_379 () {
    println!("This is function 379");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_380 () {
    println!("This is function 380");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_381 () {
    println!("This is function 381");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_382 () {
    println!("This is function 382");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_383 () {
    println!("This is function 383");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_384 () {
    println!("This is function 384");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_385 () {
    println!("This is function 385");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_386 () {
    println!("This is function 386");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_387 () {
    println!("This is function 387");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_388 () {
    println!("This is function 388");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_389 () {
    println!("This is function 389");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_390 () {
    println!("This is function 390");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_391 () {
    println!("This is function 391");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_392 () {
    println!("This is function 392");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_393 () {
    println!("This is function 393");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_394 () {
    println!("This is function 394");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_395 () {
    println!("This is function 395");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_396 () {
    println!("This is function 396");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_397 () {
    println!("This is function 397");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_398 () {
    println!("This is function 398");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_399 () {
    println!("This is function 399");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_400 () {
    println!("This is function 400");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_401 () {
    println!("This is function 401");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_402 () {
    println!("This is function 402");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_403 () {
    println!("This is function 403");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_404 () {
    println!("This is function 404");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_405 () {
    println!("This is function 405");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_406 () {
    println!("This is function 406");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_407 () {
    println!("This is function 407");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_408 () {
    println!("This is function 408");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_409 () {
    println!("This is function 409");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_410 () {
    println!("This is function 410");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_411 () {
    println!("This is function 411");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_412 () {
    println!("This is function 412");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_413 () {
    println!("This is function 413");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_414 () {
    println!("This is function 414");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_415 () {
    println!("This is function 415");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_416 () {
    println!("This is function 416");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_417 () {
    println!("This is function 417");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_418 () {
    println!("This is function 418");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_419 () {
    println!("This is function 419");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_420 () {
    println!("This is function 420");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_421 () {
    println!("This is function 421");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_422 () {
    println!("This is function 422");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_423 () {
    println!("This is function 423");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_424 () {
    println!("This is function 424");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_425 () {
    println!("This is function 425");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_426 () {
    println!("This is function 426");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_427 () {
    println!("This is function 427");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_428 () {
    println!("This is function 428");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_429 () {
    println!("This is function 429");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_430 () {
    println!("This is function 430");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_431 () {
    println!("This is function 431");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_432 () {
    println!("This is function 432");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_433 () {
    println!("This is function 433");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_434 () {
    println!("This is function 434");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_435 () {
    println!("This is function 435");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_436 () {
    println!("This is function 436");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_437 () {
    println!("This is function 437");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_438 () {
    println!("This is function 438");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_439 () {
    println!("This is function 439");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_440 () {
    println!("This is function 440");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_441 () {
    println!("This is function 441");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_442 () {
    println!("This is function 442");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_443 () {
    println!("This is function 443");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_444 () {
    println!("This is function 444");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_445 () {
    println!("This is function 445");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_446 () {
    println!("This is function 446");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_447 () {
    println!("This is function 447");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_448 () {
    println!("This is function 448");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_449 () {
    println!("This is function 449");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_450 () {
    println!("This is function 450");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_451 () {
    println!("This is function 451");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_452 () {
    println!("This is function 452");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_453 () {
    println!("This is function 453");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_454 () {
    println!("This is function 454");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_455 () {
    println!("This is function 455");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_456 () {
    println!("This is function 456");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_457 () {
    println!("This is function 457");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_458 () {
    println!("This is function 458");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_459 () {
    println!("This is function 459");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_460 () {
    println!("This is function 460");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_461 () {
    println!("This is function 461");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_462 () {
    println!("This is function 462");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_463 () {
    println!("This is function 463");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_464 () {
    println!("This is function 464");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_465 () {
    println!("This is function 465");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_466 () {
    println!("This is function 466");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_467 () {
    println!("This is function 467");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_468 () {
    println!("This is function 468");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_469 () {
    println!("This is function 469");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_470 () {
    println!("This is function 470");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_471 () {
    println!("This is function 471");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_472 () {
    println!("This is function 472");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_473 () {
    println!("This is function 473");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_474 () {
    println!("This is function 474");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_475 () {
    println!("This is function 475");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_476 () {
    println!("This is function 476");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_477 () {
    println!("This is function 477");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_478 () {
    println!("This is function 478");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_479 () {
    println!("This is function 479");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_480 () {
    println!("This is function 480");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_481 () {
    println!("This is function 481");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_482 () {
    println!("This is function 482");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_483 () {
    println!("This is function 483");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_484 () {
    println!("This is function 484");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_485 () {
    println!("This is function 485");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_486 () {
    println!("This is function 486");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_487 () {
    println!("This is function 487");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_488 () {
    println!("This is function 488");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_489 () {
    println!("This is function 489");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_490 () {
    println!("This is function 490");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_491 () {
    println!("This is function 491");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_492 () {
    println!("This is function 492");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_493 () {
    println!("This is function 493");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_494 () {
    println!("This is function 494");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_495 () {
    println!("This is function 495");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_496 () {
    println!("This is function 496");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_497 () {
    println!("This is function 497");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_498 () {
    println!("This is function 498");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_499 () {
    println!("This is function 499");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_500 () {
    println!("This is function 500");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_501 () {
    println!("This is function 501");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_502 () {
    println!("This is function 502");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_503 () {
    println!("This is function 503");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_504 () {
    println!("This is function 504");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_505 () {
    println!("This is function 505");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_506 () {
    println!("This is function 506");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_507 () {
    println!("This is function 507");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_508 () {
    println!("This is function 508");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_509 () {
    println!("This is function 509");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_510 () {
    println!("This is function 510");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_511 () {
    println!("This is function 511");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_512 () {
    println!("This is function 512");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_513 () {
    println!("This is function 513");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_514 () {
    println!("This is function 514");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_515 () {
    println!("This is function 515");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_516 () {
    println!("This is function 516");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_517 () {
    println!("This is function 517");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_518 () {
    println!("This is function 518");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_519 () {
    println!("This is function 519");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_520 () {
    println!("This is function 520");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_521 () {
    println!("This is function 521");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_522 () {
    println!("This is function 522");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_523 () {
    println!("This is function 523");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_524 () {
    println!("This is function 524");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_525 () {
    println!("This is function 525");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_526 () {
    println!("This is function 526");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_527 () {
    println!("This is function 527");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_528 () {
    println!("This is function 528");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_529 () {
    println!("This is function 529");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_530 () {
    println!("This is function 530");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_531 () {
    println!("This is function 531");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_532 () {
    println!("This is function 532");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_533 () {
    println!("This is function 533");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_534 () {
    println!("This is function 534");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_535 () {
    println!("This is function 535");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_536 () {
    println!("This is function 536");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_537 () {
    println!("This is function 537");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_538 () {
    println!("This is function 538");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_539 () {
    println!("This is function 539");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_540 () {
    println!("This is function 540");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_541 () {
    println!("This is function 541");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_542 () {
    println!("This is function 542");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_543 () {
    println!("This is function 543");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_544 () {
    println!("This is function 544");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_545 () {
    println!("This is function 545");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_546 () {
    println!("This is function 546");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_547 () {
    println!("This is function 547");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_548 () {
    println!("This is function 548");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_549 () {
    println!("This is function 549");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_550 () {
    println!("This is function 550");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_551 () {
    println!("This is function 551");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_552 () {
    println!("This is function 552");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_553 () {
    println!("This is function 553");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_554 () {
    println!("This is function 554");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_555 () {
    println!("This is function 555");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_556 () {
    println!("This is function 556");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_557 () {
    println!("This is function 557");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_558 () {
    println!("This is function 558");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_559 () {
    println!("This is function 559");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_560 () {
    println!("This is function 560");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_561 () {
    println!("This is function 561");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_562 () {
    println!("This is function 562");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_563 () {
    println!("This is function 563");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_564 () {
    println!("This is function 564");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_565 () {
    println!("This is function 565");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_566 () {
    println!("This is function 566");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_567 () {
    println!("This is function 567");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_568 () {
    println!("This is function 568");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_569 () {
    println!("This is function 569");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_570 () {
    println!("This is function 570");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_571 () {
    println!("This is function 571");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_572 () {
    println!("This is function 572");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_573 () {
    println!("This is function 573");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_574 () {
    println!("This is function 574");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_575 () {
    println!("This is function 575");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_576 () {
    println!("This is function 576");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_577 () {
    println!("This is function 577");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_578 () {
    println!("This is function 578");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_579 () {
    println!("This is function 579");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_580 () {
    println!("This is function 580");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_581 () {
    println!("This is function 581");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_582 () {
    println!("This is function 582");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_583 () {
    println!("This is function 583");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_584 () {
    println!("This is function 584");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_585 () {
    println!("This is function 585");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_586 () {
    println!("This is function 586");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_587 () {
    println!("This is function 587");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_588 () {
    println!("This is function 588");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_589 () {
    println!("This is function 589");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_590 () {
    println!("This is function 590");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_591 () {
    println!("This is function 591");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_592 () {
    println!("This is function 592");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_593 () {
    println!("This is function 593");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_594 () {
    println!("This is function 594");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_595 () {
    println!("This is function 595");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_596 () {
    println!("This is function 596");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_597 () {
    println!("This is function 597");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_598 () {
    println!("This is function 598");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_599 () {
    println!("This is function 599");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_600 () {
    println!("This is function 600");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_601 () {
    println!("This is function 601");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_602 () {
    println!("This is function 602");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_603 () {
    println!("This is function 603");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_604 () {
    println!("This is function 604");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_605 () {
    println!("This is function 605");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_606 () {
    println!("This is function 606");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_607 () {
    println!("This is function 607");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_608 () {
    println!("This is function 608");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_609 () {
    println!("This is function 609");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_610 () {
    println!("This is function 610");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_611 () {
    println!("This is function 611");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_612 () {
    println!("This is function 612");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_613 () {
    println!("This is function 613");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_614 () {
    println!("This is function 614");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_615 () {
    println!("This is function 615");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_616 () {
    println!("This is function 616");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_617 () {
    println!("This is function 617");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_618 () {
    println!("This is function 618");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_619 () {
    println!("This is function 619");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_620 () {
    println!("This is function 620");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_621 () {
    println!("This is function 621");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_622 () {
    println!("This is function 622");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_623 () {
    println!("This is function 623");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_624 () {
    println!("This is function 624");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_625 () {
    println!("This is function 625");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_626 () {
    println!("This is function 626");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_627 () {
    println!("This is function 627");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_628 () {
    println!("This is function 628");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_629 () {
    println!("This is function 629");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_630 () {
    println!("This is function 630");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_631 () {
    println!("This is function 631");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_632 () {
    println!("This is function 632");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_633 () {
    println!("This is function 633");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_634 () {
    println!("This is function 634");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_635 () {
    println!("This is function 635");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_636 () {
    println!("This is function 636");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_637 () {
    println!("This is function 637");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_638 () {
    println!("This is function 638");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_639 () {
    println!("This is function 639");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_640 () {
    println!("This is function 640");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_641 () {
    println!("This is function 641");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_642 () {
    println!("This is function 642");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_643 () {
    println!("This is function 643");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_644 () {
    println!("This is function 644");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_645 () {
    println!("This is function 645");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_646 () {
    println!("This is function 646");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_647 () {
    println!("This is function 647");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_648 () {
    println!("This is function 648");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_649 () {
    println!("This is function 649");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_650 () {
    println!("This is function 650");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_651 () {
    println!("This is function 651");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_652 () {
    println!("This is function 652");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_653 () {
    println!("This is function 653");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_654 () {
    println!("This is function 654");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_655 () {
    println!("This is function 655");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_656 () {
    println!("This is function 656");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_657 () {
    println!("This is function 657");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_658 () {
    println!("This is function 658");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_659 () {
    println!("This is function 659");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_660 () {
    println!("This is function 660");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_661 () {
    println!("This is function 661");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_662 () {
    println!("This is function 662");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_663 () {
    println!("This is function 663");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_664 () {
    println!("This is function 664");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_665 () {
    println!("This is function 665");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_666 () {
    println!("This is function 666");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_667 () {
    println!("This is function 667");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_668 () {
    println!("This is function 668");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_669 () {
    println!("This is function 669");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_670 () {
    println!("This is function 670");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_671 () {
    println!("This is function 671");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_672 () {
    println!("This is function 672");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_673 () {
    println!("This is function 673");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_674 () {
    println!("This is function 674");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_675 () {
    println!("This is function 675");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_676 () {
    println!("This is function 676");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_677 () {
    println!("This is function 677");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_678 () {
    println!("This is function 678");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_679 () {
    println!("This is function 679");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_680 () {
    println!("This is function 680");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_681 () {
    println!("This is function 681");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_682 () {
    println!("This is function 682");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_683 () {
    println!("This is function 683");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_684 () {
    println!("This is function 684");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_685 () {
    println!("This is function 685");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_686 () {
    println!("This is function 686");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_687 () {
    println!("This is function 687");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_688 () {
    println!("This is function 688");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_689 () {
    println!("This is function 689");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_690 () {
    println!("This is function 690");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_691 () {
    println!("This is function 691");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_692 () {
    println!("This is function 692");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_693 () {
    println!("This is function 693");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_694 () {
    println!("This is function 694");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_695 () {
    println!("This is function 695");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_696 () {
    println!("This is function 696");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_697 () {
    println!("This is function 697");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_698 () {
    println!("This is function 698");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_699 () {
    println!("This is function 699");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_700 () {
    println!("This is function 700");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_701 () {
    println!("This is function 701");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_702 () {
    println!("This is function 702");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_703 () {
    println!("This is function 703");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_704 () {
    println!("This is function 704");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_705 () {
    println!("This is function 705");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_706 () {
    println!("This is function 706");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_707 () {
    println!("This is function 707");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_708 () {
    println!("This is function 708");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_709 () {
    println!("This is function 709");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_710 () {
    println!("This is function 710");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_711 () {
    println!("This is function 711");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_712 () {
    println!("This is function 712");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_713 () {
    println!("This is function 713");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_714 () {
    println!("This is function 714");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_715 () {
    println!("This is function 715");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_716 () {
    println!("This is function 716");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_717 () {
    println!("This is function 717");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_718 () {
    println!("This is function 718");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_719 () {
    println!("This is function 719");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_720 () {
    println!("This is function 720");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_721 () {
    println!("This is function 721");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_722 () {
    println!("This is function 722");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_723 () {
    println!("This is function 723");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_724 () {
    println!("This is function 724");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_725 () {
    println!("This is function 725");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_726 () {
    println!("This is function 726");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_727 () {
    println!("This is function 727");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_728 () {
    println!("This is function 728");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_729 () {
    println!("This is function 729");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_730 () {
    println!("This is function 730");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_731 () {
    println!("This is function 731");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_732 () {
    println!("This is function 732");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_733 () {
    println!("This is function 733");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_734 () {
    println!("This is function 734");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_735 () {
    println!("This is function 735");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_736 () {
    println!("This is function 736");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_737 () {
    println!("This is function 737");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_738 () {
    println!("This is function 738");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_739 () {
    println!("This is function 739");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_740 () {
    println!("This is function 740");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_741 () {
    println!("This is function 741");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_742 () {
    println!("This is function 742");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_743 () {
    println!("This is function 743");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_744 () {
    println!("This is function 744");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_745 () {
    println!("This is function 745");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_746 () {
    println!("This is function 746");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_747 () {
    println!("This is function 747");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_748 () {
    println!("This is function 748");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_749 () {
    println!("This is function 749");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_750 () {
    println!("This is function 750");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_751 () {
    println!("This is function 751");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_752 () {
    println!("This is function 752");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_753 () {
    println!("This is function 753");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_754 () {
    println!("This is function 754");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_755 () {
    println!("This is function 755");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_756 () {
    println!("This is function 756");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_757 () {
    println!("This is function 757");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_758 () {
    println!("This is function 758");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_759 () {
    println!("This is function 759");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_760 () {
    println!("This is function 760");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_761 () {
    println!("This is function 761");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_762 () {
    println!("This is function 762");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_763 () {
    println!("This is function 763");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_764 () {
    println!("This is function 764");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_765 () {
    println!("This is function 765");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_766 () {
    println!("This is function 766");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_767 () {
    println!("This is function 767");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_768 () {
    println!("This is function 768");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_769 () {
    println!("This is function 769");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_770 () {
    println!("This is function 770");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_771 () {
    println!("This is function 771");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_772 () {
    println!("This is function 772");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_773 () {
    println!("This is function 773");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_774 () {
    println!("This is function 774");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_775 () {
    println!("This is function 775");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_776 () {
    println!("This is function 776");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_777 () {
    println!("This is function 777");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_778 () {
    println!("This is function 778");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_779 () {
    println!("This is function 779");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_780 () {
    println!("This is function 780");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_781 () {
    println!("This is function 781");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_782 () {
    println!("This is function 782");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_783 () {
    println!("This is function 783");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_784 () {
    println!("This is function 784");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_785 () {
    println!("This is function 785");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_786 () {
    println!("This is function 786");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_787 () {
    println!("This is function 787");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_788 () {
    println!("This is function 788");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_789 () {
    println!("This is function 789");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_790 () {
    println!("This is function 790");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_791 () {
    println!("This is function 791");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_792 () {
    println!("This is function 792");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_793 () {
    println!("This is function 793");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_794 () {
    println!("This is function 794");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_795 () {
    println!("This is function 795");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_796 () {
    println!("This is function 796");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_797 () {
    println!("This is function 797");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_798 () {
    println!("This is function 798");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_799 () {
    println!("This is function 799");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_800 () {
    println!("This is function 800");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_801 () {
    println!("This is function 801");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_802 () {
    println!("This is function 802");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_803 () {
    println!("This is function 803");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_804 () {
    println!("This is function 804");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_805 () {
    println!("This is function 805");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_806 () {
    println!("This is function 806");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_807 () {
    println!("This is function 807");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_808 () {
    println!("This is function 808");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_809 () {
    println!("This is function 809");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_810 () {
    println!("This is function 810");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_811 () {
    println!("This is function 811");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_812 () {
    println!("This is function 812");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_813 () {
    println!("This is function 813");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_814 () {
    println!("This is function 814");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_815 () {
    println!("This is function 815");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_816 () {
    println!("This is function 816");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_817 () {
    println!("This is function 817");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_818 () {
    println!("This is function 818");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_819 () {
    println!("This is function 819");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_820 () {
    println!("This is function 820");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_821 () {
    println!("This is function 821");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_822 () {
    println!("This is function 822");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_823 () {
    println!("This is function 823");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_824 () {
    println!("This is function 824");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_825 () {
    println!("This is function 825");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_826 () {
    println!("This is function 826");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_827 () {
    println!("This is function 827");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_828 () {
    println!("This is function 828");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_829 () {
    println!("This is function 829");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_830 () {
    println!("This is function 830");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_831 () {
    println!("This is function 831");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_832 () {
    println!("This is function 832");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_833 () {
    println!("This is function 833");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_834 () {
    println!("This is function 834");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_835 () {
    println!("This is function 835");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_836 () {
    println!("This is function 836");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_837 () {
    println!("This is function 837");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_838 () {
    println!("This is function 838");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_839 () {
    println!("This is function 839");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_840 () {
    println!("This is function 840");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_841 () {
    println!("This is function 841");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_842 () {
    println!("This is function 842");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_843 () {
    println!("This is function 843");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_844 () {
    println!("This is function 844");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_845 () {
    println!("This is function 845");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_846 () {
    println!("This is function 846");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_847 () {
    println!("This is function 847");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_848 () {
    println!("This is function 848");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_849 () {
    println!("This is function 849");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_850 () {
    println!("This is function 850");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_851 () {
    println!("This is function 851");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_852 () {
    println!("This is function 852");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_853 () {
    println!("This is function 853");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_854 () {
    println!("This is function 854");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_855 () {
    println!("This is function 855");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_856 () {
    println!("This is function 856");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_857 () {
    println!("This is function 857");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_858 () {
    println!("This is function 858");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_859 () {
    println!("This is function 859");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_860 () {
    println!("This is function 860");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_861 () {
    println!("This is function 861");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_862 () {
    println!("This is function 862");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_863 () {
    println!("This is function 863");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_864 () {
    println!("This is function 864");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_865 () {
    println!("This is function 865");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_866 () {
    println!("This is function 866");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_867 () {
    println!("This is function 867");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_868 () {
    println!("This is function 868");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_869 () {
    println!("This is function 869");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_870 () {
    println!("This is function 870");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_871 () {
    println!("This is function 871");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_872 () {
    println!("This is function 872");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_873 () {
    println!("This is function 873");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_874 () {
    println!("This is function 874");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_875 () {
    println!("This is function 875");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_876 () {
    println!("This is function 876");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_877 () {
    println!("This is function 877");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_878 () {
    println!("This is function 878");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_879 () {
    println!("This is function 879");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_880 () {
    println!("This is function 880");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_881 () {
    println!("This is function 881");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_882 () {
    println!("This is function 882");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_883 () {
    println!("This is function 883");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_884 () {
    println!("This is function 884");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_885 () {
    println!("This is function 885");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_886 () {
    println!("This is function 886");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_887 () {
    println!("This is function 887");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_888 () {
    println!("This is function 888");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_889 () {
    println!("This is function 889");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_890 () {
    println!("This is function 890");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_891 () {
    println!("This is function 891");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_892 () {
    println!("This is function 892");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_893 () {
    println!("This is function 893");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_894 () {
    println!("This is function 894");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_895 () {
    println!("This is function 895");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_896 () {
    println!("This is function 896");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_897 () {
    println!("This is function 897");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_898 () {
    println!("This is function 898");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_899 () {
    println!("This is function 899");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_900 () {
    println!("This is function 900");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_901 () {
    println!("This is function 901");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_902 () {
    println!("This is function 902");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_903 () {
    println!("This is function 903");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_904 () {
    println!("This is function 904");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_905 () {
    println!("This is function 905");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_906 () {
    println!("This is function 906");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_907 () {
    println!("This is function 907");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_908 () {
    println!("This is function 908");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_909 () {
    println!("This is function 909");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_910 () {
    println!("This is function 910");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_911 () {
    println!("This is function 911");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_912 () {
    println!("This is function 912");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_913 () {
    println!("This is function 913");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_914 () {
    println!("This is function 914");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_915 () {
    println!("This is function 915");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_916 () {
    println!("This is function 916");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_917 () {
    println!("This is function 917");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_918 () {
    println!("This is function 918");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_919 () {
    println!("This is function 919");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_920 () {
    println!("This is function 920");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_921 () {
    println!("This is function 921");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_922 () {
    println!("This is function 922");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_923 () {
    println!("This is function 923");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_924 () {
    println!("This is function 924");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_925 () {
    println!("This is function 925");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_926 () {
    println!("This is function 926");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_927 () {
    println!("This is function 927");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_928 () {
    println!("This is function 928");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_929 () {
    println!("This is function 929");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_930 () {
    println!("This is function 930");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_931 () {
    println!("This is function 931");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_932 () {
    println!("This is function 932");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_933 () {
    println!("This is function 933");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_934 () {
    println!("This is function 934");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_935 () {
    println!("This is function 935");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_936 () {
    println!("This is function 936");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_937 () {
    println!("This is function 937");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_938 () {
    println!("This is function 938");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_939 () {
    println!("This is function 939");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_940 () {
    println!("This is function 940");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_941 () {
    println!("This is function 941");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_942 () {
    println!("This is function 942");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_943 () {
    println!("This is function 943");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_944 () {
    println!("This is function 944");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_945 () {
    println!("This is function 945");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_946 () {
    println!("This is function 946");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_947 () {
    println!("This is function 947");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_948 () {
    println!("This is function 948");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_949 () {
    println!("This is function 949");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_950 () {
    println!("This is function 950");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_951 () {
    println!("This is function 951");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_952 () {
    println!("This is function 952");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_953 () {
    println!("This is function 953");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_954 () {
    println!("This is function 954");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_955 () {
    println!("This is function 955");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_956 () {
    println!("This is function 956");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_957 () {
    println!("This is function 957");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_958 () {
    println!("This is function 958");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_959 () {
    println!("This is function 959");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_960 () {
    println!("This is function 960");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_961 () {
    println!("This is function 961");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_962 () {
    println!("This is function 962");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_963 () {
    println!("This is function 963");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_964 () {
    println!("This is function 964");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_965 () {
    println!("This is function 965");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_966 () {
    println!("This is function 966");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_967 () {
    println!("This is function 967");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_968 () {
    println!("This is function 968");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_969 () {
    println!("This is function 969");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_970 () {
    println!("This is function 970");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_971 () {
    println!("This is function 971");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_972 () {
    println!("This is function 972");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_973 () {
    println!("This is function 973");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_974 () {
    println!("This is function 974");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_975 () {
    println!("This is function 975");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_976 () {
    println!("This is function 976");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_977 () {
    println!("This is function 977");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_978 () {
    println!("This is function 978");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_979 () {
    println!("This is function 979");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_980 () {
    println!("This is function 980");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_981 () {
    println!("This is function 981");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_982 () {
    println!("This is function 982");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_983 () {
    println!("This is function 983");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_984 () {
    println!("This is function 984");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_985 () {
    println!("This is function 985");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_986 () {
    println!("This is function 986");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_987 () {
    println!("This is function 987");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_988 () {
    println!("This is function 988");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_989 () {
    println!("This is function 989");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_990 () {
    println!("This is function 990");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_991 () {
    println!("This is function 991");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_992 () {
    println!("This is function 992");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_993 () {
    println!("This is function 993");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_994 () {
    println!("This is function 994");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_995 () {
    println!("This is function 995");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_996 () {
    println!("This is function 996");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_997 () {
    println!("This is function 997");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_998 () {
    println!("This is function 998");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_999 () {
    println!("This is function 999");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1000 () {
    println!("This is function 1000");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1001 () {
    println!("This is function 1001");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1002 () {
    println!("This is function 1002");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1003 () {
    println!("This is function 1003");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1004 () {
    println!("This is function 1004");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1005 () {
    println!("This is function 1005");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1006 () {
    println!("This is function 1006");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1007 () {
    println!("This is function 1007");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1008 () {
    println!("This is function 1008");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1009 () {
    println!("This is function 1009");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1010 () {
    println!("This is function 1010");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1011 () {
    println!("This is function 1011");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1012 () {
    println!("This is function 1012");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1013 () {
    println!("This is function 1013");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1014 () {
    println!("This is function 1014");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1015 () {
    println!("This is function 1015");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1016 () {
    println!("This is function 1016");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1017 () {
    println!("This is function 1017");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1018 () {
    println!("This is function 1018");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1019 () {
    println!("This is function 1019");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1020 () {
    println!("This is function 1020");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1021 () {
    println!("This is function 1021");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1022 () {
    println!("This is function 1022");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1023 () {
    println!("This is function 1023");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1024 () {
    println!("This is function 1024");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1025 () {
    println!("This is function 1025");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1026 () {
    println!("This is function 1026");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1027 () {
    println!("This is function 1027");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1028 () {
    println!("This is function 1028");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1029 () {
    println!("This is function 1029");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1030 () {
    println!("This is function 1030");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1031 () {
    println!("This is function 1031");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1032 () {
    println!("This is function 1032");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1033 () {
    println!("This is function 1033");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1034 () {
    println!("This is function 1034");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1035 () {
    println!("This is function 1035");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1036 () {
    println!("This is function 1036");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1037 () {
    println!("This is function 1037");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1038 () {
    println!("This is function 1038");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1039 () {
    println!("This is function 1039");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1040 () {
    println!("This is function 1040");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1041 () {
    println!("This is function 1041");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1042 () {
    println!("This is function 1042");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1043 () {
    println!("This is function 1043");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1044 () {
    println!("This is function 1044");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1045 () {
    println!("This is function 1045");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1046 () {
    println!("This is function 1046");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1047 () {
    println!("This is function 1047");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1048 () {
    println!("This is function 1048");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1049 () {
    println!("This is function 1049");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1050 () {
    println!("This is function 1050");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1051 () {
    println!("This is function 1051");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1052 () {
    println!("This is function 1052");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1053 () {
    println!("This is function 1053");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1054 () {
    println!("This is function 1054");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1055 () {
    println!("This is function 1055");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1056 () {
    println!("This is function 1056");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1057 () {
    println!("This is function 1057");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1058 () {
    println!("This is function 1058");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1059 () {
    println!("This is function 1059");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1060 () {
    println!("This is function 1060");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1061 () {
    println!("This is function 1061");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1062 () {
    println!("This is function 1062");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1063 () {
    println!("This is function 1063");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1064 () {
    println!("This is function 1064");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1065 () {
    println!("This is function 1065");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1066 () {
    println!("This is function 1066");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1067 () {
    println!("This is function 1067");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1068 () {
    println!("This is function 1068");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1069 () {
    println!("This is function 1069");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1070 () {
    println!("This is function 1070");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1071 () {
    println!("This is function 1071");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1072 () {
    println!("This is function 1072");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1073 () {
    println!("This is function 1073");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1074 () {
    println!("This is function 1074");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1075 () {
    println!("This is function 1075");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1076 () {
    println!("This is function 1076");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1077 () {
    println!("This is function 1077");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1078 () {
    println!("This is function 1078");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1079 () {
    println!("This is function 1079");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1080 () {
    println!("This is function 1080");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1081 () {
    println!("This is function 1081");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1082 () {
    println!("This is function 1082");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1083 () {
    println!("This is function 1083");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1084 () {
    println!("This is function 1084");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1085 () {
    println!("This is function 1085");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1086 () {
    println!("This is function 1086");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1087 () {
    println!("This is function 1087");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1088 () {
    println!("This is function 1088");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1089 () {
    println!("This is function 1089");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1090 () {
    println!("This is function 1090");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1091 () {
    println!("This is function 1091");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1092 () {
    println!("This is function 1092");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1093 () {
    println!("This is function 1093");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1094 () {
    println!("This is function 1094");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1095 () {
    println!("This is function 1095");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1096 () {
    println!("This is function 1096");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1097 () {
    println!("This is function 1097");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1098 () {
    println!("This is function 1098");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1099 () {
    println!("This is function 1099");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1100 () {
    println!("This is function 1100");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1101 () {
    println!("This is function 1101");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1102 () {
    println!("This is function 1102");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1103 () {
    println!("This is function 1103");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1104 () {
    println!("This is function 1104");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1105 () {
    println!("This is function 1105");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1106 () {
    println!("This is function 1106");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1107 () {
    println!("This is function 1107");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1108 () {
    println!("This is function 1108");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1109 () {
    println!("This is function 1109");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1110 () {
    println!("This is function 1110");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1111 () {
    println!("This is function 1111");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1112 () {
    println!("This is function 1112");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1113 () {
    println!("This is function 1113");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1114 () {
    println!("This is function 1114");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1115 () {
    println!("This is function 1115");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1116 () {
    println!("This is function 1116");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1117 () {
    println!("This is function 1117");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1118 () {
    println!("This is function 1118");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1119 () {
    println!("This is function 1119");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1120 () {
    println!("This is function 1120");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1121 () {
    println!("This is function 1121");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1122 () {
    println!("This is function 1122");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1123 () {
    println!("This is function 1123");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1124 () {
    println!("This is function 1124");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1125 () {
    println!("This is function 1125");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1126 () {
    println!("This is function 1126");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1127 () {
    println!("This is function 1127");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1128 () {
    println!("This is function 1128");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1129 () {
    println!("This is function 1129");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1130 () {
    println!("This is function 1130");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1131 () {
    println!("This is function 1131");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1132 () {
    println!("This is function 1132");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1133 () {
    println!("This is function 1133");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1134 () {
    println!("This is function 1134");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1135 () {
    println!("This is function 1135");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1136 () {
    println!("This is function 1136");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1137 () {
    println!("This is function 1137");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1138 () {
    println!("This is function 1138");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1139 () {
    println!("This is function 1139");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1140 () {
    println!("This is function 1140");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1141 () {
    println!("This is function 1141");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1142 () {
    println!("This is function 1142");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1143 () {
    println!("This is function 1143");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1144 () {
    println!("This is function 1144");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1145 () {
    println!("This is function 1145");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1146 () {
    println!("This is function 1146");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1147 () {
    println!("This is function 1147");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1148 () {
    println!("This is function 1148");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1149 () {
    println!("This is function 1149");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1150 () {
    println!("This is function 1150");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1151 () {
    println!("This is function 1151");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1152 () {
    println!("This is function 1152");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1153 () {
    println!("This is function 1153");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1154 () {
    println!("This is function 1154");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1155 () {
    println!("This is function 1155");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1156 () {
    println!("This is function 1156");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1157 () {
    println!("This is function 1157");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1158 () {
    println!("This is function 1158");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1159 () {
    println!("This is function 1159");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1160 () {
    println!("This is function 1160");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1161 () {
    println!("This is function 1161");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1162 () {
    println!("This is function 1162");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1163 () {
    println!("This is function 1163");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1164 () {
    println!("This is function 1164");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1165 () {
    println!("This is function 1165");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1166 () {
    println!("This is function 1166");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1167 () {
    println!("This is function 1167");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1168 () {
    println!("This is function 1168");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1169 () {
    println!("This is function 1169");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1170 () {
    println!("This is function 1170");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1171 () {
    println!("This is function 1171");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1172 () {
    println!("This is function 1172");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1173 () {
    println!("This is function 1173");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1174 () {
    println!("This is function 1174");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1175 () {
    println!("This is function 1175");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1176 () {
    println!("This is function 1176");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1177 () {
    println!("This is function 1177");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1178 () {
    println!("This is function 1178");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1179 () {
    println!("This is function 1179");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1180 () {
    println!("This is function 1180");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1181 () {
    println!("This is function 1181");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1182 () {
    println!("This is function 1182");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1183 () {
    println!("This is function 1183");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1184 () {
    println!("This is function 1184");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1185 () {
    println!("This is function 1185");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1186 () {
    println!("This is function 1186");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1187 () {
    println!("This is function 1187");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1188 () {
    println!("This is function 1188");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1189 () {
    println!("This is function 1189");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1190 () {
    println!("This is function 1190");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1191 () {
    println!("This is function 1191");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1192 () {
    println!("This is function 1192");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1193 () {
    println!("This is function 1193");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1194 () {
    println!("This is function 1194");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1195 () {
    println!("This is function 1195");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1196 () {
    println!("This is function 1196");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1197 () {
    println!("This is function 1197");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1198 () {
    println!("This is function 1198");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1199 () {
    println!("This is function 1199");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1200 () {
    println!("This is function 1200");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1201 () {
    println!("This is function 1201");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1202 () {
    println!("This is function 1202");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1203 () {
    println!("This is function 1203");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1204 () {
    println!("This is function 1204");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1205 () {
    println!("This is function 1205");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1206 () {
    println!("This is function 1206");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1207 () {
    println!("This is function 1207");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1208 () {
    println!("This is function 1208");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1209 () {
    println!("This is function 1209");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1210 () {
    println!("This is function 1210");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1211 () {
    println!("This is function 1211");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1212 () {
    println!("This is function 1212");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1213 () {
    println!("This is function 1213");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1214 () {
    println!("This is function 1214");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1215 () {
    println!("This is function 1215");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1216 () {
    println!("This is function 1216");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1217 () {
    println!("This is function 1217");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1218 () {
    println!("This is function 1218");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1219 () {
    println!("This is function 1219");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1220 () {
    println!("This is function 1220");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1221 () {
    println!("This is function 1221");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1222 () {
    println!("This is function 1222");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1223 () {
    println!("This is function 1223");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1224 () {
    println!("This is function 1224");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1225 () {
    println!("This is function 1225");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1226 () {
    println!("This is function 1226");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1227 () {
    println!("This is function 1227");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1228 () {
    println!("This is function 1228");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1229 () {
    println!("This is function 1229");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1230 () {
    println!("This is function 1230");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1231 () {
    println!("This is function 1231");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1232 () {
    println!("This is function 1232");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1233 () {
    println!("This is function 1233");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1234 () {
    println!("This is function 1234");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1235 () {
    println!("This is function 1235");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1236 () {
    println!("This is function 1236");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1237 () {
    println!("This is function 1237");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1238 () {
    println!("This is function 1238");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1239 () {
    println!("This is function 1239");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1240 () {
    println!("This is function 1240");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1241 () {
    println!("This is function 1241");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1242 () {
    println!("This is function 1242");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1243 () {
    println!("This is function 1243");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1244 () {
    println!("This is function 1244");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1245 () {
    println!("This is function 1245");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1246 () {
    println!("This is function 1246");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1247 () {
    println!("This is function 1247");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1248 () {
    println!("This is function 1248");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1249 () {
    println!("This is function 1249");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1250 () {
    println!("This is function 1250");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1251 () {
    println!("This is function 1251");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1252 () {
    println!("This is function 1252");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1253 () {
    println!("This is function 1253");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1254 () {
    println!("This is function 1254");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1255 () {
    println!("This is function 1255");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1256 () {
    println!("This is function 1256");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1257 () {
    println!("This is function 1257");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1258 () {
    println!("This is function 1258");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1259 () {
    println!("This is function 1259");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1260 () {
    println!("This is function 1260");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1261 () {
    println!("This is function 1261");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1262 () {
    println!("This is function 1262");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1263 () {
    println!("This is function 1263");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1264 () {
    println!("This is function 1264");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1265 () {
    println!("This is function 1265");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1266 () {
    println!("This is function 1266");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1267 () {
    println!("This is function 1267");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1268 () {
    println!("This is function 1268");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1269 () {
    println!("This is function 1269");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1270 () {
    println!("This is function 1270");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1271 () {
    println!("This is function 1271");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1272 () {
    println!("This is function 1272");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1273 () {
    println!("This is function 1273");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1274 () {
    println!("This is function 1274");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1275 () {
    println!("This is function 1275");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1276 () {
    println!("This is function 1276");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1277 () {
    println!("This is function 1277");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1278 () {
    println!("This is function 1278");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1279 () {
    println!("This is function 1279");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1280 () {
    println!("This is function 1280");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1281 () {
    println!("This is function 1281");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1282 () {
    println!("This is function 1282");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1283 () {
    println!("This is function 1283");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1284 () {
    println!("This is function 1284");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1285 () {
    println!("This is function 1285");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1286 () {
    println!("This is function 1286");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1287 () {
    println!("This is function 1287");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1288 () {
    println!("This is function 1288");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1289 () {
    println!("This is function 1289");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1290 () {
    println!("This is function 1290");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1291 () {
    println!("This is function 1291");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1292 () {
    println!("This is function 1292");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1293 () {
    println!("This is function 1293");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1294 () {
    println!("This is function 1294");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1295 () {
    println!("This is function 1295");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1296 () {
    println!("This is function 1296");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1297 () {
    println!("This is function 1297");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1298 () {
    println!("This is function 1298");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1299 () {
    println!("This is function 1299");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1300 () {
    println!("This is function 1300");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1301 () {
    println!("This is function 1301");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1302 () {
    println!("This is function 1302");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1303 () {
    println!("This is function 1303");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1304 () {
    println!("This is function 1304");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1305 () {
    println!("This is function 1305");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1306 () {
    println!("This is function 1306");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1307 () {
    println!("This is function 1307");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1308 () {
    println!("This is function 1308");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1309 () {
    println!("This is function 1309");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1310 () {
    println!("This is function 1310");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1311 () {
    println!("This is function 1311");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1312 () {
    println!("This is function 1312");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1313 () {
    println!("This is function 1313");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1314 () {
    println!("This is function 1314");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1315 () {
    println!("This is function 1315");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1316 () {
    println!("This is function 1316");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1317 () {
    println!("This is function 1317");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1318 () {
    println!("This is function 1318");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1319 () {
    println!("This is function 1319");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1320 () {
    println!("This is function 1320");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1321 () {
    println!("This is function 1321");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1322 () {
    println!("This is function 1322");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1323 () {
    println!("This is function 1323");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1324 () {
    println!("This is function 1324");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1325 () {
    println!("This is function 1325");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1326 () {
    println!("This is function 1326");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1327 () {
    println!("This is function 1327");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1328 () {
    println!("This is function 1328");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1329 () {
    println!("This is function 1329");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1330 () {
    println!("This is function 1330");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1331 () {
    println!("This is function 1331");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1332 () {
    println!("This is function 1332");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1333 () {
    println!("This is function 1333");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1334 () {
    println!("This is function 1334");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1335 () {
    println!("This is function 1335");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1336 () {
    println!("This is function 1336");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1337 () {
    println!("This is function 1337");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1338 () {
    println!("This is function 1338");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1339 () {
    println!("This is function 1339");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1340 () {
    println!("This is function 1340");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1341 () {
    println!("This is function 1341");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1342 () {
    println!("This is function 1342");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1343 () {
    println!("This is function 1343");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1344 () {
    println!("This is function 1344");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1345 () {
    println!("This is function 1345");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1346 () {
    println!("This is function 1346");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1347 () {
    println!("This is function 1347");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1348 () {
    println!("This is function 1348");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1349 () {
    println!("This is function 1349");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1350 () {
    println!("This is function 1350");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1351 () {
    println!("This is function 1351");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1352 () {
    println!("This is function 1352");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1353 () {
    println!("This is function 1353");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1354 () {
    println!("This is function 1354");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1355 () {
    println!("This is function 1355");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1356 () {
    println!("This is function 1356");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1357 () {
    println!("This is function 1357");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1358 () {
    println!("This is function 1358");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1359 () {
    println!("This is function 1359");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1360 () {
    println!("This is function 1360");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1361 () {
    println!("This is function 1361");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1362 () {
    println!("This is function 1362");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1363 () {
    println!("This is function 1363");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1364 () {
    println!("This is function 1364");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1365 () {
    println!("This is function 1365");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1366 () {
    println!("This is function 1366");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1367 () {
    println!("This is function 1367");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1368 () {
    println!("This is function 1368");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1369 () {
    println!("This is function 1369");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1370 () {
    println!("This is function 1370");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1371 () {
    println!("This is function 1371");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1372 () {
    println!("This is function 1372");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1373 () {
    println!("This is function 1373");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1374 () {
    println!("This is function 1374");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1375 () {
    println!("This is function 1375");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1376 () {
    println!("This is function 1376");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1377 () {
    println!("This is function 1377");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1378 () {
    println!("This is function 1378");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1379 () {
    println!("This is function 1379");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1380 () {
    println!("This is function 1380");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1381 () {
    println!("This is function 1381");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1382 () {
    println!("This is function 1382");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1383 () {
    println!("This is function 1383");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1384 () {
    println!("This is function 1384");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1385 () {
    println!("This is function 1385");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1386 () {
    println!("This is function 1386");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1387 () {
    println!("This is function 1387");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1388 () {
    println!("This is function 1388");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1389 () {
    println!("This is function 1389");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1390 () {
    println!("This is function 1390");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1391 () {
    println!("This is function 1391");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1392 () {
    println!("This is function 1392");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1393 () {
    println!("This is function 1393");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1394 () {
    println!("This is function 1394");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1395 () {
    println!("This is function 1395");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1396 () {
    println!("This is function 1396");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1397 () {
    println!("This is function 1397");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1398 () {
    println!("This is function 1398");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1399 () {
    println!("This is function 1399");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1400 () {
    println!("This is function 1400");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1401 () {
    println!("This is function 1401");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1402 () {
    println!("This is function 1402");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1403 () {
    println!("This is function 1403");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1404 () {
    println!("This is function 1404");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1405 () {
    println!("This is function 1405");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1406 () {
    println!("This is function 1406");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1407 () {
    println!("This is function 1407");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1408 () {
    println!("This is function 1408");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1409 () {
    println!("This is function 1409");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1410 () {
    println!("This is function 1410");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1411 () {
    println!("This is function 1411");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1412 () {
    println!("This is function 1412");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1413 () {
    println!("This is function 1413");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1414 () {
    println!("This is function 1414");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1415 () {
    println!("This is function 1415");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1416 () {
    println!("This is function 1416");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1417 () {
    println!("This is function 1417");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1418 () {
    println!("This is function 1418");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1419 () {
    println!("This is function 1419");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1420 () {
    println!("This is function 1420");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1421 () {
    println!("This is function 1421");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1422 () {
    println!("This is function 1422");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1423 () {
    println!("This is function 1423");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1424 () {
    println!("This is function 1424");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1425 () {
    println!("This is function 1425");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1426 () {
    println!("This is function 1426");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1427 () {
    println!("This is function 1427");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1428 () {
    println!("This is function 1428");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1429 () {
    println!("This is function 1429");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1430 () {
    println!("This is function 1430");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1431 () {
    println!("This is function 1431");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1432 () {
    println!("This is function 1432");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1433 () {
    println!("This is function 1433");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1434 () {
    println!("This is function 1434");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1435 () {
    println!("This is function 1435");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1436 () {
    println!("This is function 1436");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1437 () {
    println!("This is function 1437");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1438 () {
    println!("This is function 1438");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1439 () {
    println!("This is function 1439");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1440 () {
    println!("This is function 1440");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1441 () {
    println!("This is function 1441");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1442 () {
    println!("This is function 1442");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1443 () {
    println!("This is function 1443");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1444 () {
    println!("This is function 1444");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1445 () {
    println!("This is function 1445");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1446 () {
    println!("This is function 1446");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1447 () {
    println!("This is function 1447");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1448 () {
    println!("This is function 1448");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1449 () {
    println!("This is function 1449");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1450 () {
    println!("This is function 1450");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1451 () {
    println!("This is function 1451");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1452 () {
    println!("This is function 1452");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1453 () {
    println!("This is function 1453");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1454 () {
    println!("This is function 1454");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1455 () {
    println!("This is function 1455");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1456 () {
    println!("This is function 1456");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1457 () {
    println!("This is function 1457");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1458 () {
    println!("This is function 1458");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1459 () {
    println!("This is function 1459");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1460 () {
    println!("This is function 1460");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1461 () {
    println!("This is function 1461");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1462 () {
    println!("This is function 1462");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1463 () {
    println!("This is function 1463");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1464 () {
    println!("This is function 1464");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1465 () {
    println!("This is function 1465");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1466 () {
    println!("This is function 1466");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1467 () {
    println!("This is function 1467");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1468 () {
    println!("This is function 1468");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1469 () {
    println!("This is function 1469");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1470 () {
    println!("This is function 1470");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1471 () {
    println!("This is function 1471");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1472 () {
    println!("This is function 1472");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1473 () {
    println!("This is function 1473");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1474 () {
    println!("This is function 1474");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1475 () {
    println!("This is function 1475");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1476 () {
    println!("This is function 1476");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1477 () {
    println!("This is function 1477");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1478 () {
    println!("This is function 1478");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1479 () {
    println!("This is function 1479");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1480 () {
    println!("This is function 1480");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1481 () {
    println!("This is function 1481");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1482 () {
    println!("This is function 1482");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1483 () {
    println!("This is function 1483");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1484 () {
    println!("This is function 1484");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1485 () {
    println!("This is function 1485");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1486 () {
    println!("This is function 1486");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1487 () {
    println!("This is function 1487");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1488 () {
    println!("This is function 1488");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1489 () {
    println!("This is function 1489");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1490 () {
    println!("This is function 1490");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1491 () {
    println!("This is function 1491");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1492 () {
    println!("This is function 1492");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1493 () {
    println!("This is function 1493");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1494 () {
    println!("This is function 1494");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1495 () {
    println!("This is function 1495");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1496 () {
    println!("This is function 1496");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1497 () {
    println!("This is function 1497");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1498 () {
    println!("This is function 1498");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1499 () {
    println!("This is function 1499");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1500 () {
    println!("This is function 1500");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1501 () {
    println!("This is function 1501");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1502 () {
    println!("This is function 1502");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1503 () {
    println!("This is function 1503");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1504 () {
    println!("This is function 1504");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1505 () {
    println!("This is function 1505");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1506 () {
    println!("This is function 1506");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1507 () {
    println!("This is function 1507");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1508 () {
    println!("This is function 1508");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1509 () {
    println!("This is function 1509");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1510 () {
    println!("This is function 1510");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1511 () {
    println!("This is function 1511");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1512 () {
    println!("This is function 1512");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1513 () {
    println!("This is function 1513");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1514 () {
    println!("This is function 1514");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1515 () {
    println!("This is function 1515");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1516 () {
    println!("This is function 1516");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1517 () {
    println!("This is function 1517");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1518 () {
    println!("This is function 1518");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1519 () {
    println!("This is function 1519");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1520 () {
    println!("This is function 1520");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1521 () {
    println!("This is function 1521");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1522 () {
    println!("This is function 1522");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1523 () {
    println!("This is function 1523");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1524 () {
    println!("This is function 1524");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1525 () {
    println!("This is function 1525");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1526 () {
    println!("This is function 1526");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1527 () {
    println!("This is function 1527");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1528 () {
    println!("This is function 1528");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1529 () {
    println!("This is function 1529");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1530 () {
    println!("This is function 1530");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1531 () {
    println!("This is function 1531");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1532 () {
    println!("This is function 1532");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1533 () {
    println!("This is function 1533");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1534 () {
    println!("This is function 1534");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1535 () {
    println!("This is function 1535");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1536 () {
    println!("This is function 1536");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1537 () {
    println!("This is function 1537");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1538 () {
    println!("This is function 1538");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1539 () {
    println!("This is function 1539");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1540 () {
    println!("This is function 1540");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1541 () {
    println!("This is function 1541");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1542 () {
    println!("This is function 1542");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1543 () {
    println!("This is function 1543");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1544 () {
    println!("This is function 1544");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1545 () {
    println!("This is function 1545");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1546 () {
    println!("This is function 1546");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1547 () {
    println!("This is function 1547");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1548 () {
    println!("This is function 1548");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1549 () {
    println!("This is function 1549");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1550 () {
    println!("This is function 1550");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1551 () {
    println!("This is function 1551");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1552 () {
    println!("This is function 1552");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1553 () {
    println!("This is function 1553");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1554 () {
    println!("This is function 1554");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1555 () {
    println!("This is function 1555");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1556 () {
    println!("This is function 1556");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1557 () {
    println!("This is function 1557");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1558 () {
    println!("This is function 1558");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1559 () {
    println!("This is function 1559");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1560 () {
    println!("This is function 1560");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1561 () {
    println!("This is function 1561");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1562 () {
    println!("This is function 1562");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1563 () {
    println!("This is function 1563");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1564 () {
    println!("This is function 1564");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1565 () {
    println!("This is function 1565");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1566 () {
    println!("This is function 1566");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1567 () {
    println!("This is function 1567");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1568 () {
    println!("This is function 1568");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1569 () {
    println!("This is function 1569");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1570 () {
    println!("This is function 1570");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1571 () {
    println!("This is function 1571");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1572 () {
    println!("This is function 1572");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1573 () {
    println!("This is function 1573");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1574 () {
    println!("This is function 1574");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1575 () {
    println!("This is function 1575");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1576 () {
    println!("This is function 1576");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1577 () {
    println!("This is function 1577");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1578 () {
    println!("This is function 1578");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1579 () {
    println!("This is function 1579");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1580 () {
    println!("This is function 1580");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1581 () {
    println!("This is function 1581");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1582 () {
    println!("This is function 1582");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1583 () {
    println!("This is function 1583");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1584 () {
    println!("This is function 1584");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1585 () {
    println!("This is function 1585");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1586 () {
    println!("This is function 1586");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1587 () {
    println!("This is function 1587");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1588 () {
    println!("This is function 1588");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1589 () {
    println!("This is function 1589");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1590 () {
    println!("This is function 1590");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1591 () {
    println!("This is function 1591");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1592 () {
    println!("This is function 1592");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1593 () {
    println!("This is function 1593");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1594 () {
    println!("This is function 1594");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1595 () {
    println!("This is function 1595");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1596 () {
    println!("This is function 1596");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1597 () {
    println!("This is function 1597");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1598 () {
    println!("This is function 1598");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1599 () {
    println!("This is function 1599");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1600 () {
    println!("This is function 1600");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1601 () {
    println!("This is function 1601");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1602 () {
    println!("This is function 1602");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1603 () {
    println!("This is function 1603");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1604 () {
    println!("This is function 1604");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1605 () {
    println!("This is function 1605");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1606 () {
    println!("This is function 1606");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1607 () {
    println!("This is function 1607");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1608 () {
    println!("This is function 1608");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1609 () {
    println!("This is function 1609");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1610 () {
    println!("This is function 1610");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1611 () {
    println!("This is function 1611");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1612 () {
    println!("This is function 1612");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1613 () {
    println!("This is function 1613");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1614 () {
    println!("This is function 1614");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1615 () {
    println!("This is function 1615");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1616 () {
    println!("This is function 1616");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1617 () {
    println!("This is function 1617");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1618 () {
    println!("This is function 1618");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1619 () {
    println!("This is function 1619");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1620 () {
    println!("This is function 1620");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1621 () {
    println!("This is function 1621");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1622 () {
    println!("This is function 1622");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1623 () {
    println!("This is function 1623");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1624 () {
    println!("This is function 1624");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1625 () {
    println!("This is function 1625");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1626 () {
    println!("This is function 1626");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1627 () {
    println!("This is function 1627");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1628 () {
    println!("This is function 1628");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1629 () {
    println!("This is function 1629");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1630 () {
    println!("This is function 1630");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1631 () {
    println!("This is function 1631");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1632 () {
    println!("This is function 1632");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1633 () {
    println!("This is function 1633");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1634 () {
    println!("This is function 1634");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1635 () {
    println!("This is function 1635");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1636 () {
    println!("This is function 1636");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1637 () {
    println!("This is function 1637");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1638 () {
    println!("This is function 1638");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1639 () {
    println!("This is function 1639");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1640 () {
    println!("This is function 1640");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1641 () {
    println!("This is function 1641");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1642 () {
    println!("This is function 1642");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1643 () {
    println!("This is function 1643");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1644 () {
    println!("This is function 1644");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1645 () {
    println!("This is function 1645");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1646 () {
    println!("This is function 1646");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1647 () {
    println!("This is function 1647");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1648 () {
    println!("This is function 1648");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1649 () {
    println!("This is function 1649");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1650 () {
    println!("This is function 1650");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1651 () {
    println!("This is function 1651");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1652 () {
    println!("This is function 1652");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1653 () {
    println!("This is function 1653");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1654 () {
    println!("This is function 1654");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1655 () {
    println!("This is function 1655");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1656 () {
    println!("This is function 1656");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1657 () {
    println!("This is function 1657");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1658 () {
    println!("This is function 1658");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1659 () {
    println!("This is function 1659");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1660 () {
    println!("This is function 1660");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1661 () {
    println!("This is function 1661");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1662 () {
    println!("This is function 1662");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1663 () {
    println!("This is function 1663");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1664 () {
    println!("This is function 1664");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1665 () {
    println!("This is function 1665");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1666 () {
    println!("This is function 1666");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1667 () {
    println!("This is function 1667");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1668 () {
    println!("This is function 1668");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1669 () {
    println!("This is function 1669");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1670 () {
    println!("This is function 1670");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1671 () {
    println!("This is function 1671");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1672 () {
    println!("This is function 1672");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1673 () {
    println!("This is function 1673");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1674 () {
    println!("This is function 1674");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1675 () {
    println!("This is function 1675");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1676 () {
    println!("This is function 1676");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1677 () {
    println!("This is function 1677");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1678 () {
    println!("This is function 1678");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1679 () {
    println!("This is function 1679");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1680 () {
    println!("This is function 1680");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1681 () {
    println!("This is function 1681");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1682 () {
    println!("This is function 1682");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1683 () {
    println!("This is function 1683");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1684 () {
    println!("This is function 1684");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1685 () {
    println!("This is function 1685");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1686 () {
    println!("This is function 1686");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1687 () {
    println!("This is function 1687");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1688 () {
    println!("This is function 1688");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1689 () {
    println!("This is function 1689");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1690 () {
    println!("This is function 1690");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1691 () {
    println!("This is function 1691");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1692 () {
    println!("This is function 1692");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1693 () {
    println!("This is function 1693");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1694 () {
    println!("This is function 1694");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1695 () {
    println!("This is function 1695");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1696 () {
    println!("This is function 1696");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1697 () {
    println!("This is function 1697");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1698 () {
    println!("This is function 1698");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1699 () {
    println!("This is function 1699");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1700 () {
    println!("This is function 1700");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1701 () {
    println!("This is function 1701");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1702 () {
    println!("This is function 1702");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1703 () {
    println!("This is function 1703");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1704 () {
    println!("This is function 1704");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1705 () {
    println!("This is function 1705");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1706 () {
    println!("This is function 1706");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1707 () {
    println!("This is function 1707");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1708 () {
    println!("This is function 1708");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1709 () {
    println!("This is function 1709");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1710 () {
    println!("This is function 1710");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1711 () {
    println!("This is function 1711");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1712 () {
    println!("This is function 1712");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1713 () {
    println!("This is function 1713");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1714 () {
    println!("This is function 1714");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1715 () {
    println!("This is function 1715");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1716 () {
    println!("This is function 1716");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1717 () {
    println!("This is function 1717");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1718 () {
    println!("This is function 1718");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1719 () {
    println!("This is function 1719");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1720 () {
    println!("This is function 1720");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1721 () {
    println!("This is function 1721");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1722 () {
    println!("This is function 1722");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1723 () {
    println!("This is function 1723");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1724 () {
    println!("This is function 1724");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1725 () {
    println!("This is function 1725");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1726 () {
    println!("This is function 1726");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1727 () {
    println!("This is function 1727");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1728 () {
    println!("This is function 1728");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1729 () {
    println!("This is function 1729");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1730 () {
    println!("This is function 1730");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1731 () {
    println!("This is function 1731");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1732 () {
    println!("This is function 1732");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1733 () {
    println!("This is function 1733");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1734 () {
    println!("This is function 1734");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1735 () {
    println!("This is function 1735");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1736 () {
    println!("This is function 1736");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1737 () {
    println!("This is function 1737");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1738 () {
    println!("This is function 1738");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1739 () {
    println!("This is function 1739");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1740 () {
    println!("This is function 1740");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1741 () {
    println!("This is function 1741");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1742 () {
    println!("This is function 1742");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1743 () {
    println!("This is function 1743");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1744 () {
    println!("This is function 1744");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1745 () {
    println!("This is function 1745");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1746 () {
    println!("This is function 1746");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1747 () {
    println!("This is function 1747");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1748 () {
    println!("This is function 1748");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1749 () {
    println!("This is function 1749");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1750 () {
    println!("This is function 1750");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1751 () {
    println!("This is function 1751");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1752 () {
    println!("This is function 1752");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1753 () {
    println!("This is function 1753");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1754 () {
    println!("This is function 1754");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1755 () {
    println!("This is function 1755");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1756 () {
    println!("This is function 1756");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1757 () {
    println!("This is function 1757");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1758 () {
    println!("This is function 1758");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1759 () {
    println!("This is function 1759");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1760 () {
    println!("This is function 1760");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1761 () {
    println!("This is function 1761");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1762 () {
    println!("This is function 1762");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1763 () {
    println!("This is function 1763");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1764 () {
    println!("This is function 1764");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1765 () {
    println!("This is function 1765");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1766 () {
    println!("This is function 1766");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1767 () {
    println!("This is function 1767");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1768 () {
    println!("This is function 1768");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1769 () {
    println!("This is function 1769");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1770 () {
    println!("This is function 1770");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1771 () {
    println!("This is function 1771");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1772 () {
    println!("This is function 1772");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1773 () {
    println!("This is function 1773");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1774 () {
    println!("This is function 1774");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1775 () {
    println!("This is function 1775");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1776 () {
    println!("This is function 1776");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1777 () {
    println!("This is function 1777");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1778 () {
    println!("This is function 1778");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1779 () {
    println!("This is function 1779");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1780 () {
    println!("This is function 1780");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1781 () {
    println!("This is function 1781");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1782 () {
    println!("This is function 1782");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1783 () {
    println!("This is function 1783");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1784 () {
    println!("This is function 1784");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1785 () {
    println!("This is function 1785");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1786 () {
    println!("This is function 1786");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1787 () {
    println!("This is function 1787");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1788 () {
    println!("This is function 1788");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1789 () {
    println!("This is function 1789");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1790 () {
    println!("This is function 1790");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1791 () {
    println!("This is function 1791");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1792 () {
    println!("This is function 1792");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1793 () {
    println!("This is function 1793");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1794 () {
    println!("This is function 1794");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1795 () {
    println!("This is function 1795");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1796 () {
    println!("This is function 1796");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1797 () {
    println!("This is function 1797");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1798 () {
    println!("This is function 1798");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1799 () {
    println!("This is function 1799");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1800 () {
    println!("This is function 1800");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1801 () {
    println!("This is function 1801");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1802 () {
    println!("This is function 1802");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1803 () {
    println!("This is function 1803");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1804 () {
    println!("This is function 1804");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1805 () {
    println!("This is function 1805");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1806 () {
    println!("This is function 1806");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1807 () {
    println!("This is function 1807");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1808 () {
    println!("This is function 1808");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1809 () {
    println!("This is function 1809");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1810 () {
    println!("This is function 1810");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1811 () {
    println!("This is function 1811");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1812 () {
    println!("This is function 1812");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1813 () {
    println!("This is function 1813");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1814 () {
    println!("This is function 1814");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1815 () {
    println!("This is function 1815");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1816 () {
    println!("This is function 1816");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1817 () {
    println!("This is function 1817");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1818 () {
    println!("This is function 1818");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1819 () {
    println!("This is function 1819");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1820 () {
    println!("This is function 1820");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1821 () {
    println!("This is function 1821");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1822 () {
    println!("This is function 1822");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1823 () {
    println!("This is function 1823");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1824 () {
    println!("This is function 1824");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1825 () {
    println!("This is function 1825");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1826 () {
    println!("This is function 1826");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1827 () {
    println!("This is function 1827");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1828 () {
    println!("This is function 1828");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1829 () {
    println!("This is function 1829");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1830 () {
    println!("This is function 1830");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1831 () {
    println!("This is function 1831");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1832 () {
    println!("This is function 1832");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1833 () {
    println!("This is function 1833");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1834 () {
    println!("This is function 1834");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1835 () {
    println!("This is function 1835");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1836 () {
    println!("This is function 1836");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1837 () {
    println!("This is function 1837");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1838 () {
    println!("This is function 1838");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1839 () {
    println!("This is function 1839");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1840 () {
    println!("This is function 1840");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1841 () {
    println!("This is function 1841");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1842 () {
    println!("This is function 1842");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1843 () {
    println!("This is function 1843");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1844 () {
    println!("This is function 1844");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1845 () {
    println!("This is function 1845");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1846 () {
    println!("This is function 1846");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1847 () {
    println!("This is function 1847");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1848 () {
    println!("This is function 1848");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1849 () {
    println!("This is function 1849");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1850 () {
    println!("This is function 1850");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1851 () {
    println!("This is function 1851");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1852 () {
    println!("This is function 1852");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1853 () {
    println!("This is function 1853");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1854 () {
    println!("This is function 1854");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1855 () {
    println!("This is function 1855");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1856 () {
    println!("This is function 1856");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1857 () {
    println!("This is function 1857");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1858 () {
    println!("This is function 1858");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1859 () {
    println!("This is function 1859");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1860 () {
    println!("This is function 1860");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1861 () {
    println!("This is function 1861");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1862 () {
    println!("This is function 1862");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1863 () {
    println!("This is function 1863");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1864 () {
    println!("This is function 1864");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1865 () {
    println!("This is function 1865");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1866 () {
    println!("This is function 1866");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1867 () {
    println!("This is function 1867");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1868 () {
    println!("This is function 1868");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1869 () {
    println!("This is function 1869");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1870 () {
    println!("This is function 1870");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1871 () {
    println!("This is function 1871");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1872 () {
    println!("This is function 1872");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1873 () {
    println!("This is function 1873");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1874 () {
    println!("This is function 1874");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1875 () {
    println!("This is function 1875");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1876 () {
    println!("This is function 1876");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1877 () {
    println!("This is function 1877");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1878 () {
    println!("This is function 1878");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1879 () {
    println!("This is function 1879");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1880 () {
    println!("This is function 1880");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1881 () {
    println!("This is function 1881");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1882 () {
    println!("This is function 1882");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1883 () {
    println!("This is function 1883");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1884 () {
    println!("This is function 1884");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1885 () {
    println!("This is function 1885");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1886 () {
    println!("This is function 1886");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1887 () {
    println!("This is function 1887");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1888 () {
    println!("This is function 1888");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1889 () {
    println!("This is function 1889");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1890 () {
    println!("This is function 1890");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1891 () {
    println!("This is function 1891");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1892 () {
    println!("This is function 1892");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1893 () {
    println!("This is function 1893");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1894 () {
    println!("This is function 1894");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1895 () {
    println!("This is function 1895");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1896 () {
    println!("This is function 1896");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1897 () {
    println!("This is function 1897");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1898 () {
    println!("This is function 1898");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1899 () {
    println!("This is function 1899");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1900 () {
    println!("This is function 1900");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1901 () {
    println!("This is function 1901");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1902 () {
    println!("This is function 1902");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1903 () {
    println!("This is function 1903");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1904 () {
    println!("This is function 1904");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1905 () {
    println!("This is function 1905");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1906 () {
    println!("This is function 1906");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1907 () {
    println!("This is function 1907");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1908 () {
    println!("This is function 1908");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1909 () {
    println!("This is function 1909");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1910 () {
    println!("This is function 1910");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1911 () {
    println!("This is function 1911");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1912 () {
    println!("This is function 1912");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1913 () {
    println!("This is function 1913");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1914 () {
    println!("This is function 1914");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1915 () {
    println!("This is function 1915");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1916 () {
    println!("This is function 1916");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1917 () {
    println!("This is function 1917");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1918 () {
    println!("This is function 1918");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1919 () {
    println!("This is function 1919");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1920 () {
    println!("This is function 1920");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1921 () {
    println!("This is function 1921");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1922 () {
    println!("This is function 1922");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1923 () {
    println!("This is function 1923");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1924 () {
    println!("This is function 1924");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1925 () {
    println!("This is function 1925");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1926 () {
    println!("This is function 1926");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1927 () {
    println!("This is function 1927");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1928 () {
    println!("This is function 1928");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1929 () {
    println!("This is function 1929");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1930 () {
    println!("This is function 1930");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1931 () {
    println!("This is function 1931");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1932 () {
    println!("This is function 1932");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1933 () {
    println!("This is function 1933");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1934 () {
    println!("This is function 1934");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1935 () {
    println!("This is function 1935");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1936 () {
    println!("This is function 1936");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1937 () {
    println!("This is function 1937");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1938 () {
    println!("This is function 1938");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1939 () {
    println!("This is function 1939");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1940 () {
    println!("This is function 1940");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1941 () {
    println!("This is function 1941");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1942 () {
    println!("This is function 1942");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1943 () {
    println!("This is function 1943");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1944 () {
    println!("This is function 1944");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1945 () {
    println!("This is function 1945");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1946 () {
    println!("This is function 1946");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1947 () {
    println!("This is function 1947");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1948 () {
    println!("This is function 1948");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1949 () {
    println!("This is function 1949");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1950 () {
    println!("This is function 1950");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1951 () {
    println!("This is function 1951");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1952 () {
    println!("This is function 1952");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1953 () {
    println!("This is function 1953");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1954 () {
    println!("This is function 1954");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1955 () {
    println!("This is function 1955");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1956 () {
    println!("This is function 1956");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1957 () {
    println!("This is function 1957");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1958 () {
    println!("This is function 1958");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1959 () {
    println!("This is function 1959");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1960 () {
    println!("This is function 1960");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1961 () {
    println!("This is function 1961");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1962 () {
    println!("This is function 1962");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1963 () {
    println!("This is function 1963");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1964 () {
    println!("This is function 1964");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1965 () {
    println!("This is function 1965");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1966 () {
    println!("This is function 1966");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1967 () {
    println!("This is function 1967");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1968 () {
    println!("This is function 1968");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1969 () {
    println!("This is function 1969");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1970 () {
    println!("This is function 1970");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1971 () {
    println!("This is function 1971");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1972 () {
    println!("This is function 1972");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1973 () {
    println!("This is function 1973");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1974 () {
    println!("This is function 1974");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1975 () {
    println!("This is function 1975");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1976 () {
    println!("This is function 1976");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1977 () {
    println!("This is function 1977");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1978 () {
    println!("This is function 1978");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1979 () {
    println!("This is function 1979");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1980 () {
    println!("This is function 1980");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1981 () {
    println!("This is function 1981");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1982 () {
    println!("This is function 1982");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1983 () {
    println!("This is function 1983");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1984 () {
    println!("This is function 1984");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1985 () {
    println!("This is function 1985");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1986 () {
    println!("This is function 1986");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1987 () {
    println!("This is function 1987");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1988 () {
    println!("This is function 1988");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1989 () {
    println!("This is function 1989");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1990 () {
    println!("This is function 1990");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1991 () {
    println!("This is function 1991");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1992 () {
    println!("This is function 1992");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1993 () {
    println!("This is function 1993");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1994 () {
    println!("This is function 1994");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1995 () {
    println!("This is function 1995");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1996 () {
    println!("This is function 1996");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1997 () {
    println!("This is function 1997");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1998 () {
    println!("This is function 1998");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1999 () {
    println!("This is function 1999");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2000 () {
    println!("This is function 2000");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2001 () {
    println!("This is function 2001");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2002 () {
    println!("This is function 2002");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2003 () {
    println!("This is function 2003");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2004 () {
    println!("This is function 2004");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2005 () {
    println!("This is function 2005");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2006 () {
    println!("This is function 2006");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2007 () {
    println!("This is function 2007");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2008 () {
    println!("This is function 2008");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2009 () {
    println!("This is function 2009");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2010 () {
    println!("This is function 2010");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2011 () {
    println!("This is function 2011");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2012 () {
    println!("This is function 2012");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2013 () {
    println!("This is function 2013");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2014 () {
    println!("This is function 2014");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2015 () {
    println!("This is function 2015");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2016 () {
    println!("This is function 2016");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2017 () {
    println!("This is function 2017");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2018 () {
    println!("This is function 2018");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2019 () {
    println!("This is function 2019");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2020 () {
    println!("This is function 2020");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2021 () {
    println!("This is function 2021");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2022 () {
    println!("This is function 2022");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2023 () {
    println!("This is function 2023");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2024 () {
    println!("This is function 2024");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2025 () {
    println!("This is function 2025");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2026 () {
    println!("This is function 2026");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2027 () {
    println!("This is function 2027");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2028 () {
    println!("This is function 2028");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2029 () {
    println!("This is function 2029");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2030 () {
    println!("This is function 2030");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2031 () {
    println!("This is function 2031");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2032 () {
    println!("This is function 2032");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2033 () {
    println!("This is function 2033");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2034 () {
    println!("This is function 2034");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2035 () {
    println!("This is function 2035");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2036 () {
    println!("This is function 2036");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2037 () {
    println!("This is function 2037");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2038 () {
    println!("This is function 2038");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2039 () {
    println!("This is function 2039");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2040 () {
    println!("This is function 2040");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2041 () {
    println!("This is function 2041");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2042 () {
    println!("This is function 2042");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2043 () {
    println!("This is function 2043");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2044 () {
    println!("This is function 2044");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2045 () {
    println!("This is function 2045");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2046 () {
    println!("This is function 2046");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2047 () {
    println!("This is function 2047");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2048 () {
    println!("This is function 2048");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2049 () {
    println!("This is function 2049");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2050 () {
    println!("This is function 2050");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2051 () {
    println!("This is function 2051");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2052 () {
    println!("This is function 2052");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2053 () {
    println!("This is function 2053");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2054 () {
    println!("This is function 2054");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2055 () {
    println!("This is function 2055");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2056 () {
    println!("This is function 2056");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2057 () {
    println!("This is function 2057");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2058 () {
    println!("This is function 2058");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2059 () {
    println!("This is function 2059");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2060 () {
    println!("This is function 2060");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2061 () {
    println!("This is function 2061");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2062 () {
    println!("This is function 2062");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2063 () {
    println!("This is function 2063");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2064 () {
    println!("This is function 2064");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2065 () {
    println!("This is function 2065");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2066 () {
    println!("This is function 2066");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2067 () {
    println!("This is function 2067");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2068 () {
    println!("This is function 2068");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2069 () {
    println!("This is function 2069");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2070 () {
    println!("This is function 2070");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2071 () {
    println!("This is function 2071");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2072 () {
    println!("This is function 2072");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2073 () {
    println!("This is function 2073");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2074 () {
    println!("This is function 2074");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2075 () {
    println!("This is function 2075");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2076 () {
    println!("This is function 2076");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2077 () {
    println!("This is function 2077");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2078 () {
    println!("This is function 2078");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2079 () {
    println!("This is function 2079");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2080 () {
    println!("This is function 2080");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2081 () {
    println!("This is function 2081");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2082 () {
    println!("This is function 2082");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2083 () {
    println!("This is function 2083");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2084 () {
    println!("This is function 2084");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2085 () {
    println!("This is function 2085");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2086 () {
    println!("This is function 2086");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2087 () {
    println!("This is function 2087");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2088 () {
    println!("This is function 2088");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2089 () {
    println!("This is function 2089");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2090 () {
    println!("This is function 2090");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2091 () {
    println!("This is function 2091");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2092 () {
    println!("This is function 2092");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2093 () {
    println!("This is function 2093");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2094 () {
    println!("This is function 2094");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2095 () {
    println!("This is function 2095");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2096 () {
    println!("This is function 2096");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2097 () {
    println!("This is function 2097");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2098 () {
    println!("This is function 2098");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2099 () {
    println!("This is function 2099");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2100 () {
    println!("This is function 2100");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2101 () {
    println!("This is function 2101");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2102 () {
    println!("This is function 2102");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2103 () {
    println!("This is function 2103");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2104 () {
    println!("This is function 2104");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2105 () {
    println!("This is function 2105");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2106 () {
    println!("This is function 2106");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2107 () {
    println!("This is function 2107");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2108 () {
    println!("This is function 2108");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2109 () {
    println!("This is function 2109");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2110 () {
    println!("This is function 2110");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2111 () {
    println!("This is function 2111");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2112 () {
    println!("This is function 2112");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2113 () {
    println!("This is function 2113");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2114 () {
    println!("This is function 2114");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2115 () {
    println!("This is function 2115");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2116 () {
    println!("This is function 2116");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2117 () {
    println!("This is function 2117");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2118 () {
    println!("This is function 2118");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2119 () {
    println!("This is function 2119");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2120 () {
    println!("This is function 2120");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2121 () {
    println!("This is function 2121");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2122 () {
    println!("This is function 2122");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2123 () {
    println!("This is function 2123");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2124 () {
    println!("This is function 2124");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2125 () {
    println!("This is function 2125");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2126 () {
    println!("This is function 2126");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2127 () {
    println!("This is function 2127");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2128 () {
    println!("This is function 2128");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2129 () {
    println!("This is function 2129");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2130 () {
    println!("This is function 2130");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2131 () {
    println!("This is function 2131");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2132 () {
    println!("This is function 2132");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2133 () {
    println!("This is function 2133");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2134 () {
    println!("This is function 2134");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2135 () {
    println!("This is function 2135");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2136 () {
    println!("This is function 2136");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2137 () {
    println!("This is function 2137");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2138 () {
    println!("This is function 2138");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2139 () {
    println!("This is function 2139");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2140 () {
    println!("This is function 2140");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2141 () {
    println!("This is function 2141");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2142 () {
    println!("This is function 2142");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2143 () {
    println!("This is function 2143");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2144 () {
    println!("This is function 2144");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2145 () {
    println!("This is function 2145");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2146 () {
    println!("This is function 2146");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2147 () {
    println!("This is function 2147");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2148 () {
    println!("This is function 2148");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2149 () {
    println!("This is function 2149");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2150 () {
    println!("This is function 2150");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2151 () {
    println!("This is function 2151");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2152 () {
    println!("This is function 2152");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2153 () {
    println!("This is function 2153");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2154 () {
    println!("This is function 2154");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2155 () {
    println!("This is function 2155");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2156 () {
    println!("This is function 2156");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2157 () {
    println!("This is function 2157");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2158 () {
    println!("This is function 2158");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2159 () {
    println!("This is function 2159");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2160 () {
    println!("This is function 2160");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2161 () {
    println!("This is function 2161");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2162 () {
    println!("This is function 2162");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2163 () {
    println!("This is function 2163");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2164 () {
    println!("This is function 2164");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2165 () {
    println!("This is function 2165");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2166 () {
    println!("This is function 2166");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2167 () {
    println!("This is function 2167");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2168 () {
    println!("This is function 2168");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2169 () {
    println!("This is function 2169");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2170 () {
    println!("This is function 2170");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2171 () {
    println!("This is function 2171");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2172 () {
    println!("This is function 2172");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2173 () {
    println!("This is function 2173");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2174 () {
    println!("This is function 2174");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2175 () {
    println!("This is function 2175");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2176 () {
    println!("This is function 2176");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2177 () {
    println!("This is function 2177");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2178 () {
    println!("This is function 2178");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2179 () {
    println!("This is function 2179");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2180 () {
    println!("This is function 2180");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2181 () {
    println!("This is function 2181");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2182 () {
    println!("This is function 2182");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2183 () {
    println!("This is function 2183");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2184 () {
    println!("This is function 2184");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2185 () {
    println!("This is function 2185");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2186 () {
    println!("This is function 2186");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2187 () {
    println!("This is function 2187");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2188 () {
    println!("This is function 2188");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2189 () {
    println!("This is function 2189");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2190 () {
    println!("This is function 2190");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2191 () {
    println!("This is function 2191");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2192 () {
    println!("This is function 2192");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2193 () {
    println!("This is function 2193");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2194 () {
    println!("This is function 2194");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2195 () {
    println!("This is function 2195");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2196 () {
    println!("This is function 2196");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2197 () {
    println!("This is function 2197");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2198 () {
    println!("This is function 2198");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2199 () {
    println!("This is function 2199");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2200 () {
    println!("This is function 2200");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2201 () {
    println!("This is function 2201");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2202 () {
    println!("This is function 2202");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2203 () {
    println!("This is function 2203");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2204 () {
    println!("This is function 2204");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2205 () {
    println!("This is function 2205");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2206 () {
    println!("This is function 2206");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2207 () {
    println!("This is function 2207");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2208 () {
    println!("This is function 2208");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2209 () {
    println!("This is function 2209");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2210 () {
    println!("This is function 2210");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2211 () {
    println!("This is function 2211");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2212 () {
    println!("This is function 2212");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2213 () {
    println!("This is function 2213");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2214 () {
    println!("This is function 2214");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2215 () {
    println!("This is function 2215");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2216 () {
    println!("This is function 2216");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2217 () {
    println!("This is function 2217");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2218 () {
    println!("This is function 2218");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2219 () {
    println!("This is function 2219");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2220 () {
    println!("This is function 2220");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2221 () {
    println!("This is function 2221");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2222 () {
    println!("This is function 2222");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2223 () {
    println!("This is function 2223");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2224 () {
    println!("This is function 2224");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2225 () {
    println!("This is function 2225");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2226 () {
    println!("This is function 2226");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2227 () {
    println!("This is function 2227");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2228 () {
    println!("This is function 2228");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2229 () {
    println!("This is function 2229");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2230 () {
    println!("This is function 2230");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2231 () {
    println!("This is function 2231");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2232 () {
    println!("This is function 2232");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2233 () {
    println!("This is function 2233");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2234 () {
    println!("This is function 2234");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2235 () {
    println!("This is function 2235");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2236 () {
    println!("This is function 2236");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2237 () {
    println!("This is function 2237");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2238 () {
    println!("This is function 2238");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2239 () {
    println!("This is function 2239");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2240 () {
    println!("This is function 2240");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2241 () {
    println!("This is function 2241");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2242 () {
    println!("This is function 2242");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2243 () {
    println!("This is function 2243");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2244 () {
    println!("This is function 2244");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2245 () {
    println!("This is function 2245");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2246 () {
    println!("This is function 2246");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2247 () {
    println!("This is function 2247");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2248 () {
    println!("This is function 2248");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2249 () {
    println!("This is function 2249");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2250 () {
    println!("This is function 2250");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2251 () {
    println!("This is function 2251");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2252 () {
    println!("This is function 2252");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2253 () {
    println!("This is function 2253");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2254 () {
    println!("This is function 2254");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2255 () {
    println!("This is function 2255");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2256 () {
    println!("This is function 2256");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2257 () {
    println!("This is function 2257");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2258 () {
    println!("This is function 2258");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2259 () {
    println!("This is function 2259");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2260 () {
    println!("This is function 2260");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2261 () {
    println!("This is function 2261");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2262 () {
    println!("This is function 2262");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2263 () {
    println!("This is function 2263");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2264 () {
    println!("This is function 2264");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2265 () {
    println!("This is function 2265");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2266 () {
    println!("This is function 2266");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2267 () {
    println!("This is function 2267");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2268 () {
    println!("This is function 2268");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2269 () {
    println!("This is function 2269");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2270 () {
    println!("This is function 2270");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2271 () {
    println!("This is function 2271");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2272 () {
    println!("This is function 2272");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2273 () {
    println!("This is function 2273");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2274 () {
    println!("This is function 2274");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2275 () {
    println!("This is function 2275");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2276 () {
    println!("This is function 2276");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2277 () {
    println!("This is function 2277");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2278 () {
    println!("This is function 2278");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2279 () {
    println!("This is function 2279");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2280 () {
    println!("This is function 2280");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2281 () {
    println!("This is function 2281");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2282 () {
    println!("This is function 2282");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2283 () {
    println!("This is function 2283");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2284 () {
    println!("This is function 2284");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2285 () {
    println!("This is function 2285");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2286 () {
    println!("This is function 2286");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2287 () {
    println!("This is function 2287");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2288 () {
    println!("This is function 2288");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2289 () {
    println!("This is function 2289");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2290 () {
    println!("This is function 2290");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2291 () {
    println!("This is function 2291");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2292 () {
    println!("This is function 2292");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2293 () {
    println!("This is function 2293");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2294 () {
    println!("This is function 2294");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2295 () {
    println!("This is function 2295");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2296 () {
    println!("This is function 2296");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2297 () {
    println!("This is function 2297");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2298 () {
    println!("This is function 2298");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2299 () {
    println!("This is function 2299");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2300 () {
    println!("This is function 2300");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2301 () {
    println!("This is function 2301");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2302 () {
    println!("This is function 2302");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2303 () {
    println!("This is function 2303");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2304 () {
    println!("This is function 2304");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2305 () {
    println!("This is function 2305");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2306 () {
    println!("This is function 2306");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2307 () {
    println!("This is function 2307");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2308 () {
    println!("This is function 2308");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2309 () {
    println!("This is function 2309");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2310 () {
    println!("This is function 2310");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2311 () {
    println!("This is function 2311");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2312 () {
    println!("This is function 2312");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2313 () {
    println!("This is function 2313");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2314 () {
    println!("This is function 2314");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2315 () {
    println!("This is function 2315");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2316 () {
    println!("This is function 2316");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2317 () {
    println!("This is function 2317");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2318 () {
    println!("This is function 2318");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2319 () {
    println!("This is function 2319");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2320 () {
    println!("This is function 2320");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2321 () {
    println!("This is function 2321");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2322 () {
    println!("This is function 2322");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2323 () {
    println!("This is function 2323");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2324 () {
    println!("This is function 2324");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2325 () {
    println!("This is function 2325");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2326 () {
    println!("This is function 2326");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2327 () {
    println!("This is function 2327");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2328 () {
    println!("This is function 2328");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2329 () {
    println!("This is function 2329");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2330 () {
    println!("This is function 2330");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2331 () {
    println!("This is function 2331");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2332 () {
    println!("This is function 2332");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2333 () {
    println!("This is function 2333");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2334 () {
    println!("This is function 2334");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2335 () {
    println!("This is function 2335");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2336 () {
    println!("This is function 2336");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2337 () {
    println!("This is function 2337");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2338 () {
    println!("This is function 2338");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2339 () {
    println!("This is function 2339");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2340 () {
    println!("This is function 2340");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2341 () {
    println!("This is function 2341");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2342 () {
    println!("This is function 2342");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2343 () {
    println!("This is function 2343");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2344 () {
    println!("This is function 2344");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2345 () {
    println!("This is function 2345");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2346 () {
    println!("This is function 2346");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2347 () {
    println!("This is function 2347");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2348 () {
    println!("This is function 2348");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2349 () {
    println!("This is function 2349");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2350 () {
    println!("This is function 2350");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2351 () {
    println!("This is function 2351");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2352 () {
    println!("This is function 2352");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2353 () {
    println!("This is function 2353");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2354 () {
    println!("This is function 2354");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2355 () {
    println!("This is function 2355");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2356 () {
    println!("This is function 2356");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2357 () {
    println!("This is function 2357");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2358 () {
    println!("This is function 2358");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2359 () {
    println!("This is function 2359");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2360 () {
    println!("This is function 2360");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2361 () {
    println!("This is function 2361");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2362 () {
    println!("This is function 2362");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2363 () {
    println!("This is function 2363");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2364 () {
    println!("This is function 2364");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2365 () {
    println!("This is function 2365");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2366 () {
    println!("This is function 2366");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2367 () {
    println!("This is function 2367");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2368 () {
    println!("This is function 2368");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2369 () {
    println!("This is function 2369");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2370 () {
    println!("This is function 2370");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2371 () {
    println!("This is function 2371");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2372 () {
    println!("This is function 2372");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2373 () {
    println!("This is function 2373");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2374 () {
    println!("This is function 2374");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2375 () {
    println!("This is function 2375");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2376 () {
    println!("This is function 2376");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2377 () {
    println!("This is function 2377");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2378 () {
    println!("This is function 2378");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2379 () {
    println!("This is function 2379");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2380 () {
    println!("This is function 2380");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2381 () {
    println!("This is function 2381");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2382 () {
    println!("This is function 2382");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2383 () {
    println!("This is function 2383");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2384 () {
    println!("This is function 2384");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2385 () {
    println!("This is function 2385");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2386 () {
    println!("This is function 2386");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2387 () {
    println!("This is function 2387");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2388 () {
    println!("This is function 2388");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2389 () {
    println!("This is function 2389");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2390 () {
    println!("This is function 2390");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2391 () {
    println!("This is function 2391");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2392 () {
    println!("This is function 2392");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2393 () {
    println!("This is function 2393");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2394 () {
    println!("This is function 2394");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2395 () {
    println!("This is function 2395");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2396 () {
    println!("This is function 2396");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2397 () {
    println!("This is function 2397");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2398 () {
    println!("This is function 2398");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2399 () {
    println!("This is function 2399");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2400 () {
    println!("This is function 2400");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2401 () {
    println!("This is function 2401");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2402 () {
    println!("This is function 2402");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2403 () {
    println!("This is function 2403");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2404 () {
    println!("This is function 2404");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2405 () {
    println!("This is function 2405");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2406 () {
    println!("This is function 2406");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2407 () {
    println!("This is function 2407");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2408 () {
    println!("This is function 2408");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2409 () {
    println!("This is function 2409");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2410 () {
    println!("This is function 2410");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2411 () {
    println!("This is function 2411");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2412 () {
    println!("This is function 2412");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2413 () {
    println!("This is function 2413");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2414 () {
    println!("This is function 2414");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2415 () {
    println!("This is function 2415");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2416 () {
    println!("This is function 2416");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2417 () {
    println!("This is function 2417");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2418 () {
    println!("This is function 2418");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2419 () {
    println!("This is function 2419");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2420 () {
    println!("This is function 2420");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2421 () {
    println!("This is function 2421");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2422 () {
    println!("This is function 2422");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2423 () {
    println!("This is function 2423");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2424 () {
    println!("This is function 2424");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2425 () {
    println!("This is function 2425");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2426 () {
    println!("This is function 2426");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2427 () {
    println!("This is function 2427");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2428 () {
    println!("This is function 2428");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2429 () {
    println!("This is function 2429");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2430 () {
    println!("This is function 2430");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2431 () {
    println!("This is function 2431");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2432 () {
    println!("This is function 2432");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2433 () {
    println!("This is function 2433");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2434 () {
    println!("This is function 2434");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2435 () {
    println!("This is function 2435");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2436 () {
    println!("This is function 2436");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2437 () {
    println!("This is function 2437");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2438 () {
    println!("This is function 2438");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2439 () {
    println!("This is function 2439");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2440 () {
    println!("This is function 2440");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2441 () {
    println!("This is function 2441");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2442 () {
    println!("This is function 2442");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2443 () {
    println!("This is function 2443");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2444 () {
    println!("This is function 2444");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2445 () {
    println!("This is function 2445");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2446 () {
    println!("This is function 2446");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2447 () {
    println!("This is function 2447");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2448 () {
    println!("This is function 2448");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2449 () {
    println!("This is function 2449");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2450 () {
    println!("This is function 2450");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2451 () {
    println!("This is function 2451");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2452 () {
    println!("This is function 2452");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2453 () {
    println!("This is function 2453");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2454 () {
    println!("This is function 2454");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2455 () {
    println!("This is function 2455");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2456 () {
    println!("This is function 2456");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2457 () {
    println!("This is function 2457");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2458 () {
    println!("This is function 2458");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2459 () {
    println!("This is function 2459");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2460 () {
    println!("This is function 2460");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2461 () {
    println!("This is function 2461");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2462 () {
    println!("This is function 2462");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2463 () {
    println!("This is function 2463");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2464 () {
    println!("This is function 2464");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2465 () {
    println!("This is function 2465");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2466 () {
    println!("This is function 2466");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2467 () {
    println!("This is function 2467");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2468 () {
    println!("This is function 2468");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2469 () {
    println!("This is function 2469");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2470 () {
    println!("This is function 2470");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2471 () {
    println!("This is function 2471");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2472 () {
    println!("This is function 2472");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2473 () {
    println!("This is function 2473");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2474 () {
    println!("This is function 2474");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2475 () {
    println!("This is function 2475");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2476 () {
    println!("This is function 2476");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2477 () {
    println!("This is function 2477");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2478 () {
    println!("This is function 2478");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2479 () {
    println!("This is function 2479");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2480 () {
    println!("This is function 2480");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2481 () {
    println!("This is function 2481");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2482 () {
    println!("This is function 2482");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2483 () {
    println!("This is function 2483");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2484 () {
    println!("This is function 2484");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2485 () {
    println!("This is function 2485");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2486 () {
    println!("This is function 2486");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2487 () {
    println!("This is function 2487");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2488 () {
    println!("This is function 2488");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2489 () {
    println!("This is function 2489");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2490 () {
    println!("This is function 2490");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2491 () {
    println!("This is function 2491");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2492 () {
    println!("This is function 2492");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2493 () {
    println!("This is function 2493");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2494 () {
    println!("This is function 2494");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2495 () {
    println!("This is function 2495");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2496 () {
    println!("This is function 2496");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2497 () {
    println!("This is function 2497");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2498 () {
    println!("This is function 2498");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2499 () {
    println!("This is function 2499");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2500 () {
    println!("This is function 2500");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2501 () {
    println!("This is function 2501");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2502 () {
    println!("This is function 2502");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2503 () {
    println!("This is function 2503");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2504 () {
    println!("This is function 2504");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2505 () {
    println!("This is function 2505");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2506 () {
    println!("This is function 2506");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2507 () {
    println!("This is function 2507");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2508 () {
    println!("This is function 2508");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2509 () {
    println!("This is function 2509");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2510 () {
    println!("This is function 2510");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2511 () {
    println!("This is function 2511");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2512 () {
    println!("This is function 2512");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2513 () {
    println!("This is function 2513");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2514 () {
    println!("This is function 2514");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2515 () {
    println!("This is function 2515");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2516 () {
    println!("This is function 2516");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2517 () {
    println!("This is function 2517");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2518 () {
    println!("This is function 2518");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2519 () {
    println!("This is function 2519");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2520 () {
    println!("This is function 2520");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2521 () {
    println!("This is function 2521");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2522 () {
    println!("This is function 2522");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2523 () {
    println!("This is function 2523");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2524 () {
    println!("This is function 2524");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2525 () {
    println!("This is function 2525");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2526 () {
    println!("This is function 2526");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2527 () {
    println!("This is function 2527");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2528 () {
    println!("This is function 2528");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2529 () {
    println!("This is function 2529");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2530 () {
    println!("This is function 2530");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2531 () {
    println!("This is function 2531");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2532 () {
    println!("This is function 2532");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2533 () {
    println!("This is function 2533");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2534 () {
    println!("This is function 2534");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2535 () {
    println!("This is function 2535");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2536 () {
    println!("This is function 2536");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2537 () {
    println!("This is function 2537");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2538 () {
    println!("This is function 2538");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2539 () {
    println!("This is function 2539");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2540 () {
    println!("This is function 2540");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2541 () {
    println!("This is function 2541");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2542 () {
    println!("This is function 2542");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2543 () {
    println!("This is function 2543");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2544 () {
    println!("This is function 2544");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2545 () {
    println!("This is function 2545");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2546 () {
    println!("This is function 2546");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2547 () {
    println!("This is function 2547");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2548 () {
    println!("This is function 2548");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2549 () {
    println!("This is function 2549");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2550 () {
    println!("This is function 2550");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2551 () {
    println!("This is function 2551");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2552 () {
    println!("This is function 2552");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2553 () {
    println!("This is function 2553");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2554 () {
    println!("This is function 2554");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2555 () {
    println!("This is function 2555");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2556 () {
    println!("This is function 2556");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2557 () {
    println!("This is function 2557");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2558 () {
    println!("This is function 2558");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2559 () {
    println!("This is function 2559");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2560 () {
    println!("This is function 2560");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2561 () {
    println!("This is function 2561");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2562 () {
    println!("This is function 2562");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2563 () {
    println!("This is function 2563");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2564 () {
    println!("This is function 2564");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2565 () {
    println!("This is function 2565");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2566 () {
    println!("This is function 2566");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2567 () {
    println!("This is function 2567");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2568 () {
    println!("This is function 2568");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2569 () {
    println!("This is function 2569");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2570 () {
    println!("This is function 2570");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2571 () {
    println!("This is function 2571");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2572 () {
    println!("This is function 2572");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2573 () {
    println!("This is function 2573");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2574 () {
    println!("This is function 2574");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2575 () {
    println!("This is function 2575");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2576 () {
    println!("This is function 2576");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2577 () {
    println!("This is function 2577");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2578 () {
    println!("This is function 2578");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2579 () {
    println!("This is function 2579");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2580 () {
    println!("This is function 2580");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2581 () {
    println!("This is function 2581");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2582 () {
    println!("This is function 2582");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2583 () {
    println!("This is function 2583");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2584 () {
    println!("This is function 2584");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2585 () {
    println!("This is function 2585");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2586 () {
    println!("This is function 2586");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2587 () {
    println!("This is function 2587");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2588 () {
    println!("This is function 2588");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2589 () {
    println!("This is function 2589");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2590 () {
    println!("This is function 2590");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2591 () {
    println!("This is function 2591");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2592 () {
    println!("This is function 2592");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2593 () {
    println!("This is function 2593");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2594 () {
    println!("This is function 2594");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2595 () {
    println!("This is function 2595");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2596 () {
    println!("This is function 2596");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2597 () {
    println!("This is function 2597");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2598 () {
    println!("This is function 2598");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2599 () {
    println!("This is function 2599");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2600 () {
    println!("This is function 2600");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2601 () {
    println!("This is function 2601");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2602 () {
    println!("This is function 2602");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2603 () {
    println!("This is function 2603");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2604 () {
    println!("This is function 2604");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2605 () {
    println!("This is function 2605");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2606 () {
    println!("This is function 2606");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2607 () {
    println!("This is function 2607");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2608 () {
    println!("This is function 2608");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2609 () {
    println!("This is function 2609");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2610 () {
    println!("This is function 2610");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2611 () {
    println!("This is function 2611");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2612 () {
    println!("This is function 2612");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2613 () {
    println!("This is function 2613");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2614 () {
    println!("This is function 2614");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2615 () {
    println!("This is function 2615");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2616 () {
    println!("This is function 2616");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2617 () {
    println!("This is function 2617");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2618 () {
    println!("This is function 2618");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2619 () {
    println!("This is function 2619");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2620 () {
    println!("This is function 2620");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2621 () {
    println!("This is function 2621");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2622 () {
    println!("This is function 2622");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2623 () {
    println!("This is function 2623");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2624 () {
    println!("This is function 2624");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2625 () {
    println!("This is function 2625");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2626 () {
    println!("This is function 2626");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2627 () {
    println!("This is function 2627");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2628 () {
    println!("This is function 2628");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2629 () {
    println!("This is function 2629");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2630 () {
    println!("This is function 2630");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2631 () {
    println!("This is function 2631");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2632 () {
    println!("This is function 2632");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2633 () {
    println!("This is function 2633");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2634 () {
    println!("This is function 2634");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2635 () {
    println!("This is function 2635");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2636 () {
    println!("This is function 2636");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2637 () {
    println!("This is function 2637");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2638 () {
    println!("This is function 2638");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2639 () {
    println!("This is function 2639");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2640 () {
    println!("This is function 2640");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2641 () {
    println!("This is function 2641");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2642 () {
    println!("This is function 2642");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2643 () {
    println!("This is function 2643");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2644 () {
    println!("This is function 2644");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2645 () {
    println!("This is function 2645");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2646 () {
    println!("This is function 2646");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2647 () {
    println!("This is function 2647");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2648 () {
    println!("This is function 2648");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2649 () {
    println!("This is function 2649");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2650 () {
    println!("This is function 2650");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2651 () {
    println!("This is function 2651");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2652 () {
    println!("This is function 2652");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2653 () {
    println!("This is function 2653");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2654 () {
    println!("This is function 2654");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2655 () {
    println!("This is function 2655");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2656 () {
    println!("This is function 2656");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2657 () {
    println!("This is function 2657");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2658 () {
    println!("This is function 2658");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2659 () {
    println!("This is function 2659");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2660 () {
    println!("This is function 2660");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2661 () {
    println!("This is function 2661");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2662 () {
    println!("This is function 2662");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2663 () {
    println!("This is function 2663");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2664 () {
    println!("This is function 2664");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2665 () {
    println!("This is function 2665");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2666 () {
    println!("This is function 2666");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2667 () {
    println!("This is function 2667");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2668 () {
    println!("This is function 2668");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2669 () {
    println!("This is function 2669");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2670 () {
    println!("This is function 2670");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2671 () {
    println!("This is function 2671");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2672 () {
    println!("This is function 2672");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2673 () {
    println!("This is function 2673");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2674 () {
    println!("This is function 2674");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2675 () {
    println!("This is function 2675");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2676 () {
    println!("This is function 2676");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2677 () {
    println!("This is function 2677");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2678 () {
    println!("This is function 2678");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2679 () {
    println!("This is function 2679");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2680 () {
    println!("This is function 2680");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2681 () {
    println!("This is function 2681");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2682 () {
    println!("This is function 2682");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2683 () {
    println!("This is function 2683");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2684 () {
    println!("This is function 2684");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2685 () {
    println!("This is function 2685");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2686 () {
    println!("This is function 2686");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2687 () {
    println!("This is function 2687");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2688 () {
    println!("This is function 2688");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2689 () {
    println!("This is function 2689");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2690 () {
    println!("This is function 2690");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2691 () {
    println!("This is function 2691");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2692 () {
    println!("This is function 2692");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2693 () {
    println!("This is function 2693");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2694 () {
    println!("This is function 2694");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2695 () {
    println!("This is function 2695");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2696 () {
    println!("This is function 2696");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2697 () {
    println!("This is function 2697");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2698 () {
    println!("This is function 2698");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2699 () {
    println!("This is function 2699");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2700 () {
    println!("This is function 2700");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2701 () {
    println!("This is function 2701");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2702 () {
    println!("This is function 2702");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2703 () {
    println!("This is function 2703");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2704 () {
    println!("This is function 2704");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2705 () {
    println!("This is function 2705");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2706 () {
    println!("This is function 2706");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2707 () {
    println!("This is function 2707");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2708 () {
    println!("This is function 2708");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2709 () {
    println!("This is function 2709");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2710 () {
    println!("This is function 2710");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2711 () {
    println!("This is function 2711");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2712 () {
    println!("This is function 2712");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2713 () {
    println!("This is function 2713");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2714 () {
    println!("This is function 2714");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2715 () {
    println!("This is function 2715");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2716 () {
    println!("This is function 2716");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2717 () {
    println!("This is function 2717");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2718 () {
    println!("This is function 2718");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2719 () {
    println!("This is function 2719");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2720 () {
    println!("This is function 2720");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2721 () {
    println!("This is function 2721");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2722 () {
    println!("This is function 2722");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2723 () {
    println!("This is function 2723");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2724 () {
    println!("This is function 2724");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2725 () {
    println!("This is function 2725");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2726 () {
    println!("This is function 2726");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2727 () {
    println!("This is function 2727");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2728 () {
    println!("This is function 2728");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2729 () {
    println!("This is function 2729");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2730 () {
    println!("This is function 2730");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2731 () {
    println!("This is function 2731");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2732 () {
    println!("This is function 2732");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2733 () {
    println!("This is function 2733");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2734 () {
    println!("This is function 2734");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2735 () {
    println!("This is function 2735");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2736 () {
    println!("This is function 2736");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2737 () {
    println!("This is function 2737");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2738 () {
    println!("This is function 2738");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2739 () {
    println!("This is function 2739");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2740 () {
    println!("This is function 2740");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2741 () {
    println!("This is function 2741");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2742 () {
    println!("This is function 2742");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2743 () {
    println!("This is function 2743");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2744 () {
    println!("This is function 2744");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2745 () {
    println!("This is function 2745");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2746 () {
    println!("This is function 2746");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2747 () {
    println!("This is function 2747");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2748 () {
    println!("This is function 2748");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2749 () {
    println!("This is function 2749");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2750 () {
    println!("This is function 2750");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2751 () {
    println!("This is function 2751");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2752 () {
    println!("This is function 2752");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2753 () {
    println!("This is function 2753");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2754 () {
    println!("This is function 2754");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2755 () {
    println!("This is function 2755");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2756 () {
    println!("This is function 2756");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2757 () {
    println!("This is function 2757");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2758 () {
    println!("This is function 2758");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2759 () {
    println!("This is function 2759");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2760 () {
    println!("This is function 2760");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2761 () {
    println!("This is function 2761");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2762 () {
    println!("This is function 2762");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2763 () {
    println!("This is function 2763");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2764 () {
    println!("This is function 2764");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2765 () {
    println!("This is function 2765");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2766 () {
    println!("This is function 2766");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2767 () {
    println!("This is function 2767");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2768 () {
    println!("This is function 2768");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2769 () {
    println!("This is function 2769");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2770 () {
    println!("This is function 2770");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2771 () {
    println!("This is function 2771");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2772 () {
    println!("This is function 2772");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2773 () {
    println!("This is function 2773");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2774 () {
    println!("This is function 2774");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2775 () {
    println!("This is function 2775");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2776 () {
    println!("This is function 2776");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2777 () {
    println!("This is function 2777");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2778 () {
    println!("This is function 2778");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2779 () {
    println!("This is function 2779");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2780 () {
    println!("This is function 2780");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2781 () {
    println!("This is function 2781");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2782 () {
    println!("This is function 2782");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2783 () {
    println!("This is function 2783");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2784 () {
    println!("This is function 2784");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2785 () {
    println!("This is function 2785");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2786 () {
    println!("This is function 2786");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2787 () {
    println!("This is function 2787");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2788 () {
    println!("This is function 2788");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2789 () {
    println!("This is function 2789");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2790 () {
    println!("This is function 2790");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2791 () {
    println!("This is function 2791");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2792 () {
    println!("This is function 2792");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2793 () {
    println!("This is function 2793");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2794 () {
    println!("This is function 2794");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2795 () {
    println!("This is function 2795");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2796 () {
    println!("This is function 2796");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2797 () {
    println!("This is function 2797");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2798 () {
    println!("This is function 2798");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2799 () {
    println!("This is function 2799");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2800 () {
    println!("This is function 2800");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2801 () {
    println!("This is function 2801");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2802 () {
    println!("This is function 2802");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2803 () {
    println!("This is function 2803");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2804 () {
    println!("This is function 2804");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2805 () {
    println!("This is function 2805");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2806 () {
    println!("This is function 2806");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2807 () {
    println!("This is function 2807");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2808 () {
    println!("This is function 2808");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2809 () {
    println!("This is function 2809");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2810 () {
    println!("This is function 2810");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2811 () {
    println!("This is function 2811");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2812 () {
    println!("This is function 2812");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2813 () {
    println!("This is function 2813");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2814 () {
    println!("This is function 2814");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2815 () {
    println!("This is function 2815");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2816 () {
    println!("This is function 2816");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2817 () {
    println!("This is function 2817");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2818 () {
    println!("This is function 2818");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2819 () {
    println!("This is function 2819");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2820 () {
    println!("This is function 2820");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2821 () {
    println!("This is function 2821");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2822 () {
    println!("This is function 2822");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2823 () {
    println!("This is function 2823");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2824 () {
    println!("This is function 2824");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2825 () {
    println!("This is function 2825");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2826 () {
    println!("This is function 2826");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2827 () {
    println!("This is function 2827");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2828 () {
    println!("This is function 2828");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2829 () {
    println!("This is function 2829");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2830 () {
    println!("This is function 2830");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2831 () {
    println!("This is function 2831");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2832 () {
    println!("This is function 2832");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2833 () {
    println!("This is function 2833");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2834 () {
    println!("This is function 2834");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2835 () {
    println!("This is function 2835");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2836 () {
    println!("This is function 2836");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2837 () {
    println!("This is function 2837");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2838 () {
    println!("This is function 2838");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2839 () {
    println!("This is function 2839");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2840 () {
    println!("This is function 2840");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2841 () {
    println!("This is function 2841");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2842 () {
    println!("This is function 2842");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2843 () {
    println!("This is function 2843");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2844 () {
    println!("This is function 2844");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2845 () {
    println!("This is function 2845");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2846 () {
    println!("This is function 2846");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2847 () {
    println!("This is function 2847");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2848 () {
    println!("This is function 2848");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2849 () {
    println!("This is function 2849");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2850 () {
    println!("This is function 2850");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2851 () {
    println!("This is function 2851");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2852 () {
    println!("This is function 2852");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2853 () {
    println!("This is function 2853");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2854 () {
    println!("This is function 2854");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2855 () {
    println!("This is function 2855");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2856 () {
    println!("This is function 2856");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2857 () {
    println!("This is function 2857");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2858 () {
    println!("This is function 2858");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2859 () {
    println!("This is function 2859");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2860 () {
    println!("This is function 2860");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2861 () {
    println!("This is function 2861");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2862 () {
    println!("This is function 2862");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2863 () {
    println!("This is function 2863");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2864 () {
    println!("This is function 2864");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2865 () {
    println!("This is function 2865");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2866 () {
    println!("This is function 2866");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2867 () {
    println!("This is function 2867");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2868 () {
    println!("This is function 2868");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2869 () {
    println!("This is function 2869");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2870 () {
    println!("This is function 2870");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2871 () {
    println!("This is function 2871");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2872 () {
    println!("This is function 2872");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2873 () {
    println!("This is function 2873");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2874 () {
    println!("This is function 2874");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2875 () {
    println!("This is function 2875");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2876 () {
    println!("This is function 2876");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2877 () {
    println!("This is function 2877");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2878 () {
    println!("This is function 2878");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2879 () {
    println!("This is function 2879");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2880 () {
    println!("This is function 2880");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2881 () {
    println!("This is function 2881");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2882 () {
    println!("This is function 2882");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2883 () {
    println!("This is function 2883");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2884 () {
    println!("This is function 2884");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2885 () {
    println!("This is function 2885");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2886 () {
    println!("This is function 2886");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2887 () {
    println!("This is function 2887");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2888 () {
    println!("This is function 2888");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2889 () {
    println!("This is function 2889");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2890 () {
    println!("This is function 2890");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2891 () {
    println!("This is function 2891");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2892 () {
    println!("This is function 2892");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2893 () {
    println!("This is function 2893");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2894 () {
    println!("This is function 2894");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2895 () {
    println!("This is function 2895");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2896 () {
    println!("This is function 2896");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2897 () {
    println!("This is function 2897");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2898 () {
    println!("This is function 2898");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2899 () {
    println!("This is function 2899");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2900 () {
    println!("This is function 2900");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2901 () {
    println!("This is function 2901");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2902 () {
    println!("This is function 2902");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2903 () {
    println!("This is function 2903");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2904 () {
    println!("This is function 2904");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2905 () {
    println!("This is function 2905");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2906 () {
    println!("This is function 2906");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2907 () {
    println!("This is function 2907");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2908 () {
    println!("This is function 2908");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2909 () {
    println!("This is function 2909");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2910 () {
    println!("This is function 2910");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2911 () {
    println!("This is function 2911");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2912 () {
    println!("This is function 2912");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2913 () {
    println!("This is function 2913");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2914 () {
    println!("This is function 2914");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2915 () {
    println!("This is function 2915");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2916 () {
    println!("This is function 2916");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2917 () {
    println!("This is function 2917");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2918 () {
    println!("This is function 2918");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2919 () {
    println!("This is function 2919");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2920 () {
    println!("This is function 2920");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2921 () {
    println!("This is function 2921");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2922 () {
    println!("This is function 2922");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2923 () {
    println!("This is function 2923");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2924 () {
    println!("This is function 2924");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2925 () {
    println!("This is function 2925");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2926 () {
    println!("This is function 2926");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2927 () {
    println!("This is function 2927");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2928 () {
    println!("This is function 2928");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2929 () {
    println!("This is function 2929");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2930 () {
    println!("This is function 2930");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2931 () {
    println!("This is function 2931");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2932 () {
    println!("This is function 2932");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2933 () {
    println!("This is function 2933");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2934 () {
    println!("This is function 2934");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2935 () {
    println!("This is function 2935");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2936 () {
    println!("This is function 2936");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2937 () {
    println!("This is function 2937");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2938 () {
    println!("This is function 2938");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2939 () {
    println!("This is function 2939");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2940 () {
    println!("This is function 2940");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2941 () {
    println!("This is function 2941");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2942 () {
    println!("This is function 2942");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2943 () {
    println!("This is function 2943");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2944 () {
    println!("This is function 2944");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2945 () {
    println!("This is function 2945");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2946 () {
    println!("This is function 2946");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2947 () {
    println!("This is function 2947");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2948 () {
    println!("This is function 2948");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2949 () {
    println!("This is function 2949");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2950 () {
    println!("This is function 2950");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2951 () {
    println!("This is function 2951");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2952 () {
    println!("This is function 2952");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2953 () {
    println!("This is function 2953");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2954 () {
    println!("This is function 2954");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2955 () {
    println!("This is function 2955");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2956 () {
    println!("This is function 2956");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2957 () {
    println!("This is function 2957");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2958 () {
    println!("This is function 2958");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2959 () {
    println!("This is function 2959");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2960 () {
    println!("This is function 2960");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2961 () {
    println!("This is function 2961");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2962 () {
    println!("This is function 2962");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2963 () {
    println!("This is function 2963");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2964 () {
    println!("This is function 2964");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2965 () {
    println!("This is function 2965");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2966 () {
    println!("This is function 2966");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2967 () {
    println!("This is function 2967");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2968 () {
    println!("This is function 2968");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2969 () {
    println!("This is function 2969");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2970 () {
    println!("This is function 2970");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2971 () {
    println!("This is function 2971");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2972 () {
    println!("This is function 2972");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2973 () {
    println!("This is function 2973");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2974 () {
    println!("This is function 2974");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2975 () {
    println!("This is function 2975");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2976 () {
    println!("This is function 2976");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2977 () {
    println!("This is function 2977");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2978 () {
    println!("This is function 2978");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2979 () {
    println!("This is function 2979");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2980 () {
    println!("This is function 2980");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2981 () {
    println!("This is function 2981");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2982 () {
    println!("This is function 2982");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2983 () {
    println!("This is function 2983");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2984 () {
    println!("This is function 2984");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2985 () {
    println!("This is function 2985");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2986 () {
    println!("This is function 2986");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2987 () {
    println!("This is function 2987");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2988 () {
    println!("This is function 2988");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2989 () {
    println!("This is function 2989");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2990 () {
    println!("This is function 2990");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2991 () {
    println!("This is function 2991");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2992 () {
    println!("This is function 2992");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2993 () {
    println!("This is function 2993");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2994 () {
    println!("This is function 2994");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2995 () {
    println!("This is function 2995");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2996 () {
    println!("This is function 2996");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2997 () {
    println!("This is function 2997");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2998 () {
    println!("This is function 2998");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2999 () {
    println!("This is function 2999");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3000 () {
    println!("This is function 3000");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3001 () {
    println!("This is function 3001");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3002 () {
    println!("This is function 3002");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3003 () {
    println!("This is function 3003");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3004 () {
    println!("This is function 3004");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3005 () {
    println!("This is function 3005");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3006 () {
    println!("This is function 3006");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3007 () {
    println!("This is function 3007");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3008 () {
    println!("This is function 3008");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3009 () {
    println!("This is function 3009");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3010 () {
    println!("This is function 3010");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3011 () {
    println!("This is function 3011");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3012 () {
    println!("This is function 3012");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3013 () {
    println!("This is function 3013");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3014 () {
    println!("This is function 3014");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3015 () {
    println!("This is function 3015");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3016 () {
    println!("This is function 3016");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3017 () {
    println!("This is function 3017");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3018 () {
    println!("This is function 3018");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3019 () {
    println!("This is function 3019");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3020 () {
    println!("This is function 3020");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3021 () {
    println!("This is function 3021");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3022 () {
    println!("This is function 3022");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3023 () {
    println!("This is function 3023");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3024 () {
    println!("This is function 3024");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3025 () {
    println!("This is function 3025");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3026 () {
    println!("This is function 3026");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3027 () {
    println!("This is function 3027");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3028 () {
    println!("This is function 3028");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3029 () {
    println!("This is function 3029");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3030 () {
    println!("This is function 3030");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3031 () {
    println!("This is function 3031");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3032 () {
    println!("This is function 3032");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3033 () {
    println!("This is function 3033");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3034 () {
    println!("This is function 3034");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3035 () {
    println!("This is function 3035");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3036 () {
    println!("This is function 3036");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3037 () {
    println!("This is function 3037");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3038 () {
    println!("This is function 3038");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3039 () {
    println!("This is function 3039");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3040 () {
    println!("This is function 3040");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3041 () {
    println!("This is function 3041");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3042 () {
    println!("This is function 3042");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3043 () {
    println!("This is function 3043");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3044 () {
    println!("This is function 3044");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3045 () {
    println!("This is function 3045");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3046 () {
    println!("This is function 3046");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3047 () {
    println!("This is function 3047");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3048 () {
    println!("This is function 3048");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3049 () {
    println!("This is function 3049");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3050 () {
    println!("This is function 3050");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3051 () {
    println!("This is function 3051");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3052 () {
    println!("This is function 3052");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3053 () {
    println!("This is function 3053");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3054 () {
    println!("This is function 3054");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3055 () {
    println!("This is function 3055");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3056 () {
    println!("This is function 3056");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3057 () {
    println!("This is function 3057");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3058 () {
    println!("This is function 3058");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3059 () {
    println!("This is function 3059");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3060 () {
    println!("This is function 3060");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3061 () {
    println!("This is function 3061");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3062 () {
    println!("This is function 3062");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3063 () {
    println!("This is function 3063");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3064 () {
    println!("This is function 3064");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3065 () {
    println!("This is function 3065");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3066 () {
    println!("This is function 3066");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3067 () {
    println!("This is function 3067");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3068 () {
    println!("This is function 3068");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3069 () {
    println!("This is function 3069");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3070 () {
    println!("This is function 3070");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3071 () {
    println!("This is function 3071");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3072 () {
    println!("This is function 3072");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3073 () {
    println!("This is function 3073");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3074 () {
    println!("This is function 3074");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3075 () {
    println!("This is function 3075");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3076 () {
    println!("This is function 3076");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3077 () {
    println!("This is function 3077");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3078 () {
    println!("This is function 3078");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3079 () {
    println!("This is function 3079");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3080 () {
    println!("This is function 3080");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3081 () {
    println!("This is function 3081");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3082 () {
    println!("This is function 3082");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3083 () {
    println!("This is function 3083");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3084 () {
    println!("This is function 3084");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3085 () {
    println!("This is function 3085");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3086 () {
    println!("This is function 3086");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3087 () {
    println!("This is function 3087");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3088 () {
    println!("This is function 3088");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3089 () {
    println!("This is function 3089");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3090 () {
    println!("This is function 3090");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3091 () {
    println!("This is function 3091");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3092 () {
    println!("This is function 3092");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3093 () {
    println!("This is function 3093");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3094 () {
    println!("This is function 3094");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3095 () {
    println!("This is function 3095");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3096 () {
    println!("This is function 3096");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3097 () {
    println!("This is function 3097");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3098 () {
    println!("This is function 3098");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3099 () {
    println!("This is function 3099");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3100 () {
    println!("This is function 3100");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3101 () {
    println!("This is function 3101");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3102 () {
    println!("This is function 3102");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3103 () {
    println!("This is function 3103");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3104 () {
    println!("This is function 3104");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3105 () {
    println!("This is function 3105");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3106 () {
    println!("This is function 3106");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3107 () {
    println!("This is function 3107");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3108 () {
    println!("This is function 3108");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3109 () {
    println!("This is function 3109");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3110 () {
    println!("This is function 3110");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3111 () {
    println!("This is function 3111");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3112 () {
    println!("This is function 3112");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3113 () {
    println!("This is function 3113");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3114 () {
    println!("This is function 3114");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3115 () {
    println!("This is function 3115");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3116 () {
    println!("This is function 3116");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3117 () {
    println!("This is function 3117");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3118 () {
    println!("This is function 3118");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3119 () {
    println!("This is function 3119");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3120 () {
    println!("This is function 3120");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3121 () {
    println!("This is function 3121");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3122 () {
    println!("This is function 3122");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3123 () {
    println!("This is function 3123");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3124 () {
    println!("This is function 3124");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3125 () {
    println!("This is function 3125");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3126 () {
    println!("This is function 3126");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3127 () {
    println!("This is function 3127");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3128 () {
    println!("This is function 3128");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3129 () {
    println!("This is function 3129");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3130 () {
    println!("This is function 3130");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3131 () {
    println!("This is function 3131");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3132 () {
    println!("This is function 3132");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3133 () {
    println!("This is function 3133");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3134 () {
    println!("This is function 3134");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3135 () {
    println!("This is function 3135");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3136 () {
    println!("This is function 3136");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3137 () {
    println!("This is function 3137");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3138 () {
    println!("This is function 3138");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3139 () {
    println!("This is function 3139");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3140 () {
    println!("This is function 3140");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3141 () {
    println!("This is function 3141");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3142 () {
    println!("This is function 3142");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3143 () {
    println!("This is function 3143");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3144 () {
    println!("This is function 3144");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3145 () {
    println!("This is function 3145");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3146 () {
    println!("This is function 3146");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3147 () {
    println!("This is function 3147");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3148 () {
    println!("This is function 3148");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3149 () {
    println!("This is function 3149");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3150 () {
    println!("This is function 3150");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3151 () {
    println!("This is function 3151");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3152 () {
    println!("This is function 3152");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3153 () {
    println!("This is function 3153");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3154 () {
    println!("This is function 3154");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3155 () {
    println!("This is function 3155");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3156 () {
    println!("This is function 3156");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3157 () {
    println!("This is function 3157");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3158 () {
    println!("This is function 3158");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3159 () {
    println!("This is function 3159");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3160 () {
    println!("This is function 3160");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3161 () {
    println!("This is function 3161");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3162 () {
    println!("This is function 3162");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3163 () {
    println!("This is function 3163");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3164 () {
    println!("This is function 3164");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3165 () {
    println!("This is function 3165");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3166 () {
    println!("This is function 3166");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3167 () {
    println!("This is function 3167");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3168 () {
    println!("This is function 3168");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3169 () {
    println!("This is function 3169");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3170 () {
    println!("This is function 3170");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3171 () {
    println!("This is function 3171");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3172 () {
    println!("This is function 3172");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3173 () {
    println!("This is function 3173");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3174 () {
    println!("This is function 3174");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3175 () {
    println!("This is function 3175");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3176 () {
    println!("This is function 3176");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3177 () {
    println!("This is function 3177");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3178 () {
    println!("This is function 3178");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3179 () {
    println!("This is function 3179");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3180 () {
    println!("This is function 3180");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3181 () {
    println!("This is function 3181");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3182 () {
    println!("This is function 3182");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3183 () {
    println!("This is function 3183");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3184 () {
    println!("This is function 3184");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3185 () {
    println!("This is function 3185");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3186 () {
    println!("This is function 3186");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3187 () {
    println!("This is function 3187");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3188 () {
    println!("This is function 3188");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3189 () {
    println!("This is function 3189");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3190 () {
    println!("This is function 3190");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3191 () {
    println!("This is function 3191");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3192 () {
    println!("This is function 3192");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3193 () {
    println!("This is function 3193");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3194 () {
    println!("This is function 3194");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3195 () {
    println!("This is function 3195");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3196 () {
    println!("This is function 3196");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3197 () {
    println!("This is function 3197");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3198 () {
    println!("This is function 3198");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3199 () {
    println!("This is function 3199");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3200 () {
    println!("This is function 3200");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3201 () {
    println!("This is function 3201");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3202 () {
    println!("This is function 3202");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3203 () {
    println!("This is function 3203");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3204 () {
    println!("This is function 3204");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3205 () {
    println!("This is function 3205");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3206 () {
    println!("This is function 3206");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3207 () {
    println!("This is function 3207");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3208 () {
    println!("This is function 3208");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3209 () {
    println!("This is function 3209");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3210 () {
    println!("This is function 3210");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3211 () {
    println!("This is function 3211");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3212 () {
    println!("This is function 3212");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3213 () {
    println!("This is function 3213");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3214 () {
    println!("This is function 3214");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3215 () {
    println!("This is function 3215");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3216 () {
    println!("This is function 3216");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3217 () {
    println!("This is function 3217");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3218 () {
    println!("This is function 3218");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3219 () {
    println!("This is function 3219");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3220 () {
    println!("This is function 3220");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3221 () {
    println!("This is function 3221");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3222 () {
    println!("This is function 3222");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3223 () {
    println!("This is function 3223");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3224 () {
    println!("This is function 3224");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3225 () {
    println!("This is function 3225");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3226 () {
    println!("This is function 3226");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3227 () {
    println!("This is function 3227");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3228 () {
    println!("This is function 3228");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3229 () {
    println!("This is function 3229");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3230 () {
    println!("This is function 3230");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3231 () {
    println!("This is function 3231");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3232 () {
    println!("This is function 3232");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3233 () {
    println!("This is function 3233");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3234 () {
    println!("This is function 3234");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3235 () {
    println!("This is function 3235");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3236 () {
    println!("This is function 3236");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3237 () {
    println!("This is function 3237");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3238 () {
    println!("This is function 3238");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3239 () {
    println!("This is function 3239");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3240 () {
    println!("This is function 3240");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3241 () {
    println!("This is function 3241");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3242 () {
    println!("This is function 3242");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3243 () {
    println!("This is function 3243");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3244 () {
    println!("This is function 3244");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3245 () {
    println!("This is function 3245");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3246 () {
    println!("This is function 3246");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3247 () {
    println!("This is function 3247");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3248 () {
    println!("This is function 3248");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3249 () {
    println!("This is function 3249");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3250 () {
    println!("This is function 3250");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3251 () {
    println!("This is function 3251");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3252 () {
    println!("This is function 3252");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3253 () {
    println!("This is function 3253");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3254 () {
    println!("This is function 3254");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3255 () {
    println!("This is function 3255");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3256 () {
    println!("This is function 3256");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3257 () {
    println!("This is function 3257");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3258 () {
    println!("This is function 3258");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3259 () {
    println!("This is function 3259");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3260 () {
    println!("This is function 3260");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3261 () {
    println!("This is function 3261");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3262 () {
    println!("This is function 3262");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3263 () {
    println!("This is function 3263");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3264 () {
    println!("This is function 3264");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3265 () {
    println!("This is function 3265");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3266 () {
    println!("This is function 3266");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3267 () {
    println!("This is function 3267");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3268 () {
    println!("This is function 3268");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3269 () {
    println!("This is function 3269");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3270 () {
    println!("This is function 3270");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3271 () {
    println!("This is function 3271");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3272 () {
    println!("This is function 3272");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3273 () {
    println!("This is function 3273");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3274 () {
    println!("This is function 3274");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3275 () {
    println!("This is function 3275");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3276 () {
    println!("This is function 3276");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3277 () {
    println!("This is function 3277");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3278 () {
    println!("This is function 3278");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3279 () {
    println!("This is function 3279");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3280 () {
    println!("This is function 3280");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3281 () {
    println!("This is function 3281");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3282 () {
    println!("This is function 3282");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3283 () {
    println!("This is function 3283");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3284 () {
    println!("This is function 3284");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3285 () {
    println!("This is function 3285");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3286 () {
    println!("This is function 3286");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3287 () {
    println!("This is function 3287");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3288 () {
    println!("This is function 3288");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3289 () {
    println!("This is function 3289");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3290 () {
    println!("This is function 3290");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3291 () {
    println!("This is function 3291");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3292 () {
    println!("This is function 3292");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3293 () {
    println!("This is function 3293");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3294 () {
    println!("This is function 3294");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3295 () {
    println!("This is function 3295");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3296 () {
    println!("This is function 3296");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3297 () {
    println!("This is function 3297");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3298 () {
    println!("This is function 3298");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3299 () {
    println!("This is function 3299");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3300 () {
    println!("This is function 3300");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3301 () {
    println!("This is function 3301");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3302 () {
    println!("This is function 3302");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3303 () {
    println!("This is function 3303");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3304 () {
    println!("This is function 3304");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3305 () {
    println!("This is function 3305");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3306 () {
    println!("This is function 3306");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3307 () {
    println!("This is function 3307");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3308 () {
    println!("This is function 3308");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3309 () {
    println!("This is function 3309");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3310 () {
    println!("This is function 3310");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3311 () {
    println!("This is function 3311");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3312 () {
    println!("This is function 3312");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3313 () {
    println!("This is function 3313");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3314 () {
    println!("This is function 3314");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3315 () {
    println!("This is function 3315");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3316 () {
    println!("This is function 3316");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3317 () {
    println!("This is function 3317");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3318 () {
    println!("This is function 3318");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3319 () {
    println!("This is function 3319");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3320 () {
    println!("This is function 3320");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3321 () {
    println!("This is function 3321");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3322 () {
    println!("This is function 3322");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3323 () {
    println!("This is function 3323");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3324 () {
    println!("This is function 3324");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3325 () {
    println!("This is function 3325");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3326 () {
    println!("This is function 3326");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3327 () {
    println!("This is function 3327");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3328 () {
    println!("This is function 3328");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3329 () {
    println!("This is function 3329");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3330 () {
    println!("This is function 3330");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3331 () {
    println!("This is function 3331");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3332 () {
    println!("This is function 3332");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3333 () {
    println!("This is function 3333");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3334 () {
    println!("This is function 3334");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3335 () {
    println!("This is function 3335");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3336 () {
    println!("This is function 3336");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3337 () {
    println!("This is function 3337");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3338 () {
    println!("This is function 3338");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3339 () {
    println!("This is function 3339");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3340 () {
    println!("This is function 3340");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3341 () {
    println!("This is function 3341");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3342 () {
    println!("This is function 3342");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3343 () {
    println!("This is function 3343");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3344 () {
    println!("This is function 3344");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3345 () {
    println!("This is function 3345");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3346 () {
    println!("This is function 3346");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3347 () {
    println!("This is function 3347");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3348 () {
    println!("This is function 3348");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3349 () {
    println!("This is function 3349");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3350 () {
    println!("This is function 3350");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3351 () {
    println!("This is function 3351");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3352 () {
    println!("This is function 3352");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3353 () {
    println!("This is function 3353");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3354 () {
    println!("This is function 3354");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3355 () {
    println!("This is function 3355");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3356 () {
    println!("This is function 3356");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3357 () {
    println!("This is function 3357");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3358 () {
    println!("This is function 3358");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3359 () {
    println!("This is function 3359");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3360 () {
    println!("This is function 3360");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3361 () {
    println!("This is function 3361");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3362 () {
    println!("This is function 3362");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3363 () {
    println!("This is function 3363");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3364 () {
    println!("This is function 3364");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3365 () {
    println!("This is function 3365");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3366 () {
    println!("This is function 3366");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3367 () {
    println!("This is function 3367");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3368 () {
    println!("This is function 3368");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3369 () {
    println!("This is function 3369");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3370 () {
    println!("This is function 3370");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3371 () {
    println!("This is function 3371");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3372 () {
    println!("This is function 3372");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3373 () {
    println!("This is function 3373");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3374 () {
    println!("This is function 3374");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3375 () {
    println!("This is function 3375");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3376 () {
    println!("This is function 3376");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3377 () {
    println!("This is function 3377");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3378 () {
    println!("This is function 3378");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3379 () {
    println!("This is function 3379");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3380 () {
    println!("This is function 3380");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3381 () {
    println!("This is function 3381");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3382 () {
    println!("This is function 3382");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3383 () {
    println!("This is function 3383");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3384 () {
    println!("This is function 3384");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3385 () {
    println!("This is function 3385");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3386 () {
    println!("This is function 3386");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3387 () {
    println!("This is function 3387");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3388 () {
    println!("This is function 3388");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3389 () {
    println!("This is function 3389");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3390 () {
    println!("This is function 3390");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3391 () {
    println!("This is function 3391");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3392 () {
    println!("This is function 3392");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3393 () {
    println!("This is function 3393");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3394 () {
    println!("This is function 3394");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3395 () {
    println!("This is function 3395");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3396 () {
    println!("This is function 3396");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3397 () {
    println!("This is function 3397");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3398 () {
    println!("This is function 3398");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3399 () {
    println!("This is function 3399");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3400 () {
    println!("This is function 3400");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3401 () {
    println!("This is function 3401");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3402 () {
    println!("This is function 3402");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3403 () {
    println!("This is function 3403");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3404 () {
    println!("This is function 3404");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3405 () {
    println!("This is function 3405");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3406 () {
    println!("This is function 3406");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3407 () {
    println!("This is function 3407");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3408 () {
    println!("This is function 3408");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3409 () {
    println!("This is function 3409");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3410 () {
    println!("This is function 3410");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3411 () {
    println!("This is function 3411");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3412 () {
    println!("This is function 3412");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3413 () {
    println!("This is function 3413");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3414 () {
    println!("This is function 3414");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3415 () {
    println!("This is function 3415");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3416 () {
    println!("This is function 3416");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3417 () {
    println!("This is function 3417");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3418 () {
    println!("This is function 3418");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3419 () {
    println!("This is function 3419");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3420 () {
    println!("This is function 3420");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3421 () {
    println!("This is function 3421");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3422 () {
    println!("This is function 3422");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3423 () {
    println!("This is function 3423");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3424 () {
    println!("This is function 3424");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3425 () {
    println!("This is function 3425");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3426 () {
    println!("This is function 3426");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3427 () {
    println!("This is function 3427");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3428 () {
    println!("This is function 3428");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3429 () {
    println!("This is function 3429");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3430 () {
    println!("This is function 3430");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3431 () {
    println!("This is function 3431");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3432 () {
    println!("This is function 3432");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3433 () {
    println!("This is function 3433");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3434 () {
    println!("This is function 3434");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3435 () {
    println!("This is function 3435");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3436 () {
    println!("This is function 3436");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3437 () {
    println!("This is function 3437");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3438 () {
    println!("This is function 3438");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3439 () {
    println!("This is function 3439");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3440 () {
    println!("This is function 3440");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3441 () {
    println!("This is function 3441");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3442 () {
    println!("This is function 3442");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3443 () {
    println!("This is function 3443");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3444 () {
    println!("This is function 3444");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3445 () {
    println!("This is function 3445");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3446 () {
    println!("This is function 3446");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3447 () {
    println!("This is function 3447");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3448 () {
    println!("This is function 3448");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3449 () {
    println!("This is function 3449");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3450 () {
    println!("This is function 3450");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3451 () {
    println!("This is function 3451");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3452 () {
    println!("This is function 3452");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3453 () {
    println!("This is function 3453");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3454 () {
    println!("This is function 3454");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3455 () {
    println!("This is function 3455");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3456 () {
    println!("This is function 3456");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3457 () {
    println!("This is function 3457");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3458 () {
    println!("This is function 3458");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3459 () {
    println!("This is function 3459");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3460 () {
    println!("This is function 3460");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3461 () {
    println!("This is function 3461");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3462 () {
    println!("This is function 3462");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3463 () {
    println!("This is function 3463");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3464 () {
    println!("This is function 3464");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3465 () {
    println!("This is function 3465");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3466 () {
    println!("This is function 3466");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3467 () {
    println!("This is function 3467");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3468 () {
    println!("This is function 3468");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3469 () {
    println!("This is function 3469");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3470 () {
    println!("This is function 3470");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3471 () {
    println!("This is function 3471");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3472 () {
    println!("This is function 3472");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3473 () {
    println!("This is function 3473");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3474 () {
    println!("This is function 3474");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3475 () {
    println!("This is function 3475");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3476 () {
    println!("This is function 3476");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3477 () {
    println!("This is function 3477");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3478 () {
    println!("This is function 3478");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3479 () {
    println!("This is function 3479");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3480 () {
    println!("This is function 3480");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3481 () {
    println!("This is function 3481");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3482 () {
    println!("This is function 3482");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3483 () {
    println!("This is function 3483");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3484 () {
    println!("This is function 3484");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3485 () {
    println!("This is function 3485");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3486 () {
    println!("This is function 3486");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3487 () {
    println!("This is function 3487");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3488 () {
    println!("This is function 3488");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3489 () {
    println!("This is function 3489");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3490 () {
    println!("This is function 3490");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3491 () {
    println!("This is function 3491");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3492 () {
    println!("This is function 3492");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3493 () {
    println!("This is function 3493");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3494 () {
    println!("This is function 3494");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3495 () {
    println!("This is function 3495");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3496 () {
    println!("This is function 3496");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3497 () {
    println!("This is function 3497");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3498 () {
    println!("This is function 3498");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3499 () {
    println!("This is function 3499");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3500 () {
    println!("This is function 3500");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3501 () {
    println!("This is function 3501");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3502 () {
    println!("This is function 3502");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3503 () {
    println!("This is function 3503");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3504 () {
    println!("This is function 3504");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3505 () {
    println!("This is function 3505");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3506 () {
    println!("This is function 3506");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3507 () {
    println!("This is function 3507");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3508 () {
    println!("This is function 3508");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3509 () {
    println!("This is function 3509");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3510 () {
    println!("This is function 3510");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3511 () {
    println!("This is function 3511");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3512 () {
    println!("This is function 3512");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3513 () {
    println!("This is function 3513");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3514 () {
    println!("This is function 3514");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3515 () {
    println!("This is function 3515");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3516 () {
    println!("This is function 3516");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3517 () {
    println!("This is function 3517");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3518 () {
    println!("This is function 3518");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3519 () {
    println!("This is function 3519");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3520 () {
    println!("This is function 3520");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3521 () {
    println!("This is function 3521");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3522 () {
    println!("This is function 3522");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3523 () {
    println!("This is function 3523");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3524 () {
    println!("This is function 3524");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3525 () {
    println!("This is function 3525");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3526 () {
    println!("This is function 3526");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3527 () {
    println!("This is function 3527");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3528 () {
    println!("This is function 3528");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3529 () {
    println!("This is function 3529");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3530 () {
    println!("This is function 3530");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3531 () {
    println!("This is function 3531");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3532 () {
    println!("This is function 3532");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3533 () {
    println!("This is function 3533");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3534 () {
    println!("This is function 3534");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3535 () {
    println!("This is function 3535");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3536 () {
    println!("This is function 3536");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3537 () {
    println!("This is function 3537");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3538 () {
    println!("This is function 3538");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3539 () {
    println!("This is function 3539");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3540 () {
    println!("This is function 3540");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3541 () {
    println!("This is function 3541");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3542 () {
    println!("This is function 3542");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3543 () {
    println!("This is function 3543");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3544 () {
    println!("This is function 3544");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3545 () {
    println!("This is function 3545");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3546 () {
    println!("This is function 3546");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3547 () {
    println!("This is function 3547");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3548 () {
    println!("This is function 3548");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3549 () {
    println!("This is function 3549");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3550 () {
    println!("This is function 3550");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3551 () {
    println!("This is function 3551");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3552 () {
    println!("This is function 3552");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3553 () {
    println!("This is function 3553");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3554 () {
    println!("This is function 3554");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3555 () {
    println!("This is function 3555");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3556 () {
    println!("This is function 3556");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3557 () {
    println!("This is function 3557");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3558 () {
    println!("This is function 3558");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3559 () {
    println!("This is function 3559");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3560 () {
    println!("This is function 3560");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3561 () {
    println!("This is function 3561");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3562 () {
    println!("This is function 3562");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3563 () {
    println!("This is function 3563");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3564 () {
    println!("This is function 3564");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3565 () {
    println!("This is function 3565");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3566 () {
    println!("This is function 3566");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3567 () {
    println!("This is function 3567");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3568 () {
    println!("This is function 3568");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3569 () {
    println!("This is function 3569");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3570 () {
    println!("This is function 3570");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3571 () {
    println!("This is function 3571");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3572 () {
    println!("This is function 3572");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3573 () {
    println!("This is function 3573");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3574 () {
    println!("This is function 3574");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3575 () {
    println!("This is function 3575");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3576 () {
    println!("This is function 3576");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3577 () {
    println!("This is function 3577");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3578 () {
    println!("This is function 3578");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3579 () {
    println!("This is function 3579");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3580 () {
    println!("This is function 3580");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3581 () {
    println!("This is function 3581");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3582 () {
    println!("This is function 3582");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3583 () {
    println!("This is function 3583");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3584 () {
    println!("This is function 3584");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3585 () {
    println!("This is function 3585");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3586 () {
    println!("This is function 3586");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3587 () {
    println!("This is function 3587");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3588 () {
    println!("This is function 3588");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3589 () {
    println!("This is function 3589");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3590 () {
    println!("This is function 3590");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3591 () {
    println!("This is function 3591");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3592 () {
    println!("This is function 3592");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3593 () {
    println!("This is function 3593");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3594 () {
    println!("This is function 3594");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3595 () {
    println!("This is function 3595");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3596 () {
    println!("This is function 3596");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3597 () {
    println!("This is function 3597");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3598 () {
    println!("This is function 3598");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3599 () {
    println!("This is function 3599");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3600 () {
    println!("This is function 3600");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3601 () {
    println!("This is function 3601");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3602 () {
    println!("This is function 3602");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3603 () {
    println!("This is function 3603");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3604 () {
    println!("This is function 3604");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3605 () {
    println!("This is function 3605");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3606 () {
    println!("This is function 3606");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3607 () {
    println!("This is function 3607");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3608 () {
    println!("This is function 3608");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3609 () {
    println!("This is function 3609");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3610 () {
    println!("This is function 3610");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3611 () {
    println!("This is function 3611");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3612 () {
    println!("This is function 3612");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3613 () {
    println!("This is function 3613");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3614 () {
    println!("This is function 3614");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3615 () {
    println!("This is function 3615");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3616 () {
    println!("This is function 3616");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3617 () {
    println!("This is function 3617");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3618 () {
    println!("This is function 3618");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3619 () {
    println!("This is function 3619");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3620 () {
    println!("This is function 3620");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3621 () {
    println!("This is function 3621");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3622 () {
    println!("This is function 3622");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3623 () {
    println!("This is function 3623");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3624 () {
    println!("This is function 3624");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3625 () {
    println!("This is function 3625");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3626 () {
    println!("This is function 3626");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3627 () {
    println!("This is function 3627");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3628 () {
    println!("This is function 3628");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3629 () {
    println!("This is function 3629");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3630 () {
    println!("This is function 3630");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3631 () {
    println!("This is function 3631");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3632 () {
    println!("This is function 3632");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3633 () {
    println!("This is function 3633");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3634 () {
    println!("This is function 3634");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3635 () {
    println!("This is function 3635");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3636 () {
    println!("This is function 3636");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3637 () {
    println!("This is function 3637");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3638 () {
    println!("This is function 3638");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3639 () {
    println!("This is function 3639");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3640 () {
    println!("This is function 3640");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3641 () {
    println!("This is function 3641");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3642 () {
    println!("This is function 3642");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3643 () {
    println!("This is function 3643");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3644 () {
    println!("This is function 3644");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3645 () {
    println!("This is function 3645");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3646 () {
    println!("This is function 3646");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3647 () {
    println!("This is function 3647");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3648 () {
    println!("This is function 3648");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3649 () {
    println!("This is function 3649");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3650 () {
    println!("This is function 3650");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3651 () {
    println!("This is function 3651");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3652 () {
    println!("This is function 3652");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3653 () {
    println!("This is function 3653");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3654 () {
    println!("This is function 3654");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3655 () {
    println!("This is function 3655");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3656 () {
    println!("This is function 3656");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3657 () {
    println!("This is function 3657");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3658 () {
    println!("This is function 3658");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3659 () {
    println!("This is function 3659");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3660 () {
    println!("This is function 3660");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3661 () {
    println!("This is function 3661");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3662 () {
    println!("This is function 3662");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3663 () {
    println!("This is function 3663");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3664 () {
    println!("This is function 3664");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3665 () {
    println!("This is function 3665");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3666 () {
    println!("This is function 3666");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3667 () {
    println!("This is function 3667");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3668 () {
    println!("This is function 3668");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3669 () {
    println!("This is function 3669");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3670 () {
    println!("This is function 3670");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3671 () {
    println!("This is function 3671");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3672 () {
    println!("This is function 3672");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3673 () {
    println!("This is function 3673");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3674 () {
    println!("This is function 3674");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3675 () {
    println!("This is function 3675");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3676 () {
    println!("This is function 3676");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3677 () {
    println!("This is function 3677");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3678 () {
    println!("This is function 3678");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3679 () {
    println!("This is function 3679");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3680 () {
    println!("This is function 3680");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3681 () {
    println!("This is function 3681");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3682 () {
    println!("This is function 3682");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3683 () {
    println!("This is function 3683");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3684 () {
    println!("This is function 3684");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3685 () {
    println!("This is function 3685");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3686 () {
    println!("This is function 3686");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3687 () {
    println!("This is function 3687");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3688 () {
    println!("This is function 3688");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3689 () {
    println!("This is function 3689");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3690 () {
    println!("This is function 3690");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3691 () {
    println!("This is function 3691");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3692 () {
    println!("This is function 3692");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3693 () {
    println!("This is function 3693");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3694 () {
    println!("This is function 3694");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3695 () {
    println!("This is function 3695");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3696 () {
    println!("This is function 3696");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3697 () {
    println!("This is function 3697");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3698 () {
    println!("This is function 3698");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3699 () {
    println!("This is function 3699");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3700 () {
    println!("This is function 3700");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3701 () {
    println!("This is function 3701");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3702 () {
    println!("This is function 3702");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3703 () {
    println!("This is function 3703");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3704 () {
    println!("This is function 3704");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3705 () {
    println!("This is function 3705");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3706 () {
    println!("This is function 3706");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3707 () {
    println!("This is function 3707");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3708 () {
    println!("This is function 3708");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3709 () {
    println!("This is function 3709");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3710 () {
    println!("This is function 3710");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3711 () {
    println!("This is function 3711");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3712 () {
    println!("This is function 3712");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3713 () {
    println!("This is function 3713");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3714 () {
    println!("This is function 3714");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3715 () {
    println!("This is function 3715");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3716 () {
    println!("This is function 3716");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3717 () {
    println!("This is function 3717");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3718 () {
    println!("This is function 3718");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3719 () {
    println!("This is function 3719");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3720 () {
    println!("This is function 3720");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3721 () {
    println!("This is function 3721");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3722 () {
    println!("This is function 3722");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3723 () {
    println!("This is function 3723");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3724 () {
    println!("This is function 3724");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3725 () {
    println!("This is function 3725");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3726 () {
    println!("This is function 3726");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3727 () {
    println!("This is function 3727");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3728 () {
    println!("This is function 3728");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3729 () {
    println!("This is function 3729");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3730 () {
    println!("This is function 3730");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3731 () {
    println!("This is function 3731");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3732 () {
    println!("This is function 3732");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3733 () {
    println!("This is function 3733");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3734 () {
    println!("This is function 3734");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3735 () {
    println!("This is function 3735");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3736 () {
    println!("This is function 3736");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3737 () {
    println!("This is function 3737");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3738 () {
    println!("This is function 3738");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3739 () {
    println!("This is function 3739");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3740 () {
    println!("This is function 3740");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3741 () {
    println!("This is function 3741");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3742 () {
    println!("This is function 3742");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3743 () {
    println!("This is function 3743");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3744 () {
    println!("This is function 3744");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3745 () {
    println!("This is function 3745");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3746 () {
    println!("This is function 3746");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3747 () {
    println!("This is function 3747");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3748 () {
    println!("This is function 3748");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3749 () {
    println!("This is function 3749");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3750 () {
    println!("This is function 3750");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3751 () {
    println!("This is function 3751");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3752 () {
    println!("This is function 3752");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3753 () {
    println!("This is function 3753");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3754 () {
    println!("This is function 3754");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3755 () {
    println!("This is function 3755");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3756 () {
    println!("This is function 3756");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3757 () {
    println!("This is function 3757");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3758 () {
    println!("This is function 3758");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3759 () {
    println!("This is function 3759");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3760 () {
    println!("This is function 3760");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3761 () {
    println!("This is function 3761");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3762 () {
    println!("This is function 3762");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3763 () {
    println!("This is function 3763");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3764 () {
    println!("This is function 3764");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3765 () {
    println!("This is function 3765");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3766 () {
    println!("This is function 3766");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3767 () {
    println!("This is function 3767");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3768 () {
    println!("This is function 3768");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3769 () {
    println!("This is function 3769");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3770 () {
    println!("This is function 3770");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3771 () {
    println!("This is function 3771");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3772 () {
    println!("This is function 3772");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3773 () {
    println!("This is function 3773");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3774 () {
    println!("This is function 3774");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3775 () {
    println!("This is function 3775");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3776 () {
    println!("This is function 3776");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3777 () {
    println!("This is function 3777");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3778 () {
    println!("This is function 3778");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3779 () {
    println!("This is function 3779");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3780 () {
    println!("This is function 3780");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3781 () {
    println!("This is function 3781");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3782 () {
    println!("This is function 3782");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3783 () {
    println!("This is function 3783");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3784 () {
    println!("This is function 3784");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3785 () {
    println!("This is function 3785");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3786 () {
    println!("This is function 3786");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3787 () {
    println!("This is function 3787");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3788 () {
    println!("This is function 3788");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3789 () {
    println!("This is function 3789");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3790 () {
    println!("This is function 3790");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3791 () {
    println!("This is function 3791");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3792 () {
    println!("This is function 3792");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3793 () {
    println!("This is function 3793");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3794 () {
    println!("This is function 3794");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3795 () {
    println!("This is function 3795");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3796 () {
    println!("This is function 3796");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3797 () {
    println!("This is function 3797");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3798 () {
    println!("This is function 3798");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3799 () {
    println!("This is function 3799");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3800 () {
    println!("This is function 3800");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3801 () {
    println!("This is function 3801");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3802 () {
    println!("This is function 3802");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3803 () {
    println!("This is function 3803");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3804 () {
    println!("This is function 3804");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3805 () {
    println!("This is function 3805");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3806 () {
    println!("This is function 3806");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3807 () {
    println!("This is function 3807");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3808 () {
    println!("This is function 3808");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3809 () {
    println!("This is function 3809");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3810 () {
    println!("This is function 3810");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3811 () {
    println!("This is function 3811");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3812 () {
    println!("This is function 3812");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3813 () {
    println!("This is function 3813");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3814 () {
    println!("This is function 3814");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3815 () {
    println!("This is function 3815");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3816 () {
    println!("This is function 3816");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3817 () {
    println!("This is function 3817");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3818 () {
    println!("This is function 3818");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3819 () {
    println!("This is function 3819");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3820 () {
    println!("This is function 3820");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3821 () {
    println!("This is function 3821");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3822 () {
    println!("This is function 3822");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3823 () {
    println!("This is function 3823");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3824 () {
    println!("This is function 3824");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3825 () {
    println!("This is function 3825");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3826 () {
    println!("This is function 3826");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3827 () {
    println!("This is function 3827");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3828 () {
    println!("This is function 3828");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3829 () {
    println!("This is function 3829");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3830 () {
    println!("This is function 3830");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3831 () {
    println!("This is function 3831");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3832 () {
    println!("This is function 3832");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3833 () {
    println!("This is function 3833");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3834 () {
    println!("This is function 3834");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3835 () {
    println!("This is function 3835");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3836 () {
    println!("This is function 3836");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3837 () {
    println!("This is function 3837");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3838 () {
    println!("This is function 3838");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3839 () {
    println!("This is function 3839");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3840 () {
    println!("This is function 3840");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3841 () {
    println!("This is function 3841");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3842 () {
    println!("This is function 3842");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3843 () {
    println!("This is function 3843");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3844 () {
    println!("This is function 3844");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3845 () {
    println!("This is function 3845");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3846 () {
    println!("This is function 3846");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3847 () {
    println!("This is function 3847");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3848 () {
    println!("This is function 3848");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3849 () {
    println!("This is function 3849");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3850 () {
    println!("This is function 3850");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3851 () {
    println!("This is function 3851");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3852 () {
    println!("This is function 3852");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3853 () {
    println!("This is function 3853");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3854 () {
    println!("This is function 3854");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3855 () {
    println!("This is function 3855");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3856 () {
    println!("This is function 3856");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3857 () {
    println!("This is function 3857");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3858 () {
    println!("This is function 3858");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3859 () {
    println!("This is function 3859");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3860 () {
    println!("This is function 3860");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3861 () {
    println!("This is function 3861");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3862 () {
    println!("This is function 3862");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3863 () {
    println!("This is function 3863");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3864 () {
    println!("This is function 3864");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3865 () {
    println!("This is function 3865");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3866 () {
    println!("This is function 3866");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3867 () {
    println!("This is function 3867");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3868 () {
    println!("This is function 3868");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3869 () {
    println!("This is function 3869");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3870 () {
    println!("This is function 3870");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3871 () {
    println!("This is function 3871");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3872 () {
    println!("This is function 3872");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3873 () {
    println!("This is function 3873");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3874 () {
    println!("This is function 3874");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3875 () {
    println!("This is function 3875");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3876 () {
    println!("This is function 3876");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3877 () {
    println!("This is function 3877");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3878 () {
    println!("This is function 3878");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3879 () {
    println!("This is function 3879");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3880 () {
    println!("This is function 3880");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3881 () {
    println!("This is function 3881");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3882 () {
    println!("This is function 3882");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3883 () {
    println!("This is function 3883");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3884 () {
    println!("This is function 3884");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3885 () {
    println!("This is function 3885");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3886 () {
    println!("This is function 3886");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3887 () {
    println!("This is function 3887");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3888 () {
    println!("This is function 3888");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3889 () {
    println!("This is function 3889");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3890 () {
    println!("This is function 3890");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3891 () {
    println!("This is function 3891");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3892 () {
    println!("This is function 3892");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3893 () {
    println!("This is function 3893");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3894 () {
    println!("This is function 3894");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3895 () {
    println!("This is function 3895");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3896 () {
    println!("This is function 3896");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3897 () {
    println!("This is function 3897");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3898 () {
    println!("This is function 3898");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3899 () {
    println!("This is function 3899");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3900 () {
    println!("This is function 3900");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3901 () {
    println!("This is function 3901");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3902 () {
    println!("This is function 3902");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3903 () {
    println!("This is function 3903");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3904 () {
    println!("This is function 3904");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3905 () {
    println!("This is function 3905");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3906 () {
    println!("This is function 3906");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3907 () {
    println!("This is function 3907");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3908 () {
    println!("This is function 3908");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3909 () {
    println!("This is function 3909");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3910 () {
    println!("This is function 3910");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3911 () {
    println!("This is function 3911");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3912 () {
    println!("This is function 3912");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3913 () {
    println!("This is function 3913");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3914 () {
    println!("This is function 3914");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3915 () {
    println!("This is function 3915");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3916 () {
    println!("This is function 3916");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3917 () {
    println!("This is function 3917");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3918 () {
    println!("This is function 3918");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3919 () {
    println!("This is function 3919");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3920 () {
    println!("This is function 3920");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3921 () {
    println!("This is function 3921");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3922 () {
    println!("This is function 3922");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3923 () {
    println!("This is function 3923");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3924 () {
    println!("This is function 3924");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3925 () {
    println!("This is function 3925");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3926 () {
    println!("This is function 3926");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3927 () {
    println!("This is function 3927");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3928 () {
    println!("This is function 3928");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3929 () {
    println!("This is function 3929");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3930 () {
    println!("This is function 3930");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3931 () {
    println!("This is function 3931");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3932 () {
    println!("This is function 3932");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3933 () {
    println!("This is function 3933");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3934 () {
    println!("This is function 3934");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3935 () {
    println!("This is function 3935");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3936 () {
    println!("This is function 3936");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3937 () {
    println!("This is function 3937");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3938 () {
    println!("This is function 3938");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3939 () {
    println!("This is function 3939");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3940 () {
    println!("This is function 3940");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3941 () {
    println!("This is function 3941");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3942 () {
    println!("This is function 3942");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3943 () {
    println!("This is function 3943");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3944 () {
    println!("This is function 3944");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3945 () {
    println!("This is function 3945");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3946 () {
    println!("This is function 3946");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3947 () {
    println!("This is function 3947");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3948 () {
    println!("This is function 3948");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3949 () {
    println!("This is function 3949");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3950 () {
    println!("This is function 3950");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3951 () {
    println!("This is function 3951");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3952 () {
    println!("This is function 3952");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3953 () {
    println!("This is function 3953");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3954 () {
    println!("This is function 3954");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3955 () {
    println!("This is function 3955");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3956 () {
    println!("This is function 3956");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3957 () {
    println!("This is function 3957");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3958 () {
    println!("This is function 3958");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3959 () {
    println!("This is function 3959");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3960 () {
    println!("This is function 3960");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3961 () {
    println!("This is function 3961");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3962 () {
    println!("This is function 3962");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3963 () {
    println!("This is function 3963");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3964 () {
    println!("This is function 3964");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3965 () {
    println!("This is function 3965");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3966 () {
    println!("This is function 3966");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3967 () {
    println!("This is function 3967");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3968 () {
    println!("This is function 3968");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3969 () {
    println!("This is function 3969");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3970 () {
    println!("This is function 3970");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3971 () {
    println!("This is function 3971");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3972 () {
    println!("This is function 3972");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3973 () {
    println!("This is function 3973");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3974 () {
    println!("This is function 3974");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3975 () {
    println!("This is function 3975");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3976 () {
    println!("This is function 3976");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3977 () {
    println!("This is function 3977");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3978 () {
    println!("This is function 3978");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3979 () {
    println!("This is function 3979");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3980 () {
    println!("This is function 3980");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3981 () {
    println!("This is function 3981");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3982 () {
    println!("This is function 3982");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3983 () {
    println!("This is function 3983");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3984 () {
    println!("This is function 3984");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3985 () {
    println!("This is function 3985");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3986 () {
    println!("This is function 3986");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3987 () {
    println!("This is function 3987");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3988 () {
    println!("This is function 3988");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3989 () {
    println!("This is function 3989");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3990 () {
    println!("This is function 3990");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3991 () {
    println!("This is function 3991");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3992 () {
    println!("This is function 3992");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3993 () {
    println!("This is function 3993");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3994 () {
    println!("This is function 3994");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3995 () {
    println!("This is function 3995");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3996 () {
    println!("This is function 3996");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3997 () {
    println!("This is function 3997");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3998 () {
    println!("This is function 3998");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3999 () {
    println!("This is function 3999");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_4000 () {
    println!("This is function 4000");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}
fn main() {
	unsafe {
		test_plugin_1();
		test_plugin_2();
		test_plugin_3();
		test_plugin_4();
		test_plugin_5();
		test_plugin_6();
		test_plugin_7();
		test_plugin_8();
		test_plugin_9();
		test_plugin_10();
		test_plugin_11();
		test_plugin_12();
		test_plugin_13();
		test_plugin_14();
		test_plugin_15();
		test_plugin_16();
		test_plugin_17();
		test_plugin_18();
		test_plugin_19();
		test_plugin_20();
		test_plugin_21();
		test_plugin_22();
		test_plugin_23();
		test_plugin_24();
		test_plugin_25();
		test_plugin_26();
		test_plugin_27();
		test_plugin_28();
		test_plugin_29();
		test_plugin_30();
		test_plugin_31();
		test_plugin_32();
		test_plugin_33();
		test_plugin_34();
		test_plugin_35();
		test_plugin_36();
		test_plugin_37();
		test_plugin_38();
		test_plugin_39();
		test_plugin_40();
		test_plugin_41();
		test_plugin_42();
		test_plugin_43();
		test_plugin_44();
		test_plugin_45();
		test_plugin_46();
		test_plugin_47();
		test_plugin_48();
		test_plugin_49();
		test_plugin_50();
		test_plugin_51();
		test_plugin_52();
		test_plugin_53();
		test_plugin_54();
		test_plugin_55();
		test_plugin_56();
		test_plugin_57();
		test_plugin_58();
		test_plugin_59();
		test_plugin_60();
		test_plugin_61();
		test_plugin_62();
		test_plugin_63();
		test_plugin_64();
		test_plugin_65();
		test_plugin_66();
		test_plugin_67();
		test_plugin_68();
		test_plugin_69();
		test_plugin_70();
		test_plugin_71();
		test_plugin_72();
		test_plugin_73();
		test_plugin_74();
		test_plugin_75();
		test_plugin_76();
		test_plugin_77();
		test_plugin_78();
		test_plugin_79();
		test_plugin_80();
		test_plugin_81();
		test_plugin_82();
		test_plugin_83();
		test_plugin_84();
		test_plugin_85();
		test_plugin_86();
		test_plugin_87();
		test_plugin_88();
		test_plugin_89();
		test_plugin_90();
		test_plugin_91();
		test_plugin_92();
		test_plugin_93();
		test_plugin_94();
		test_plugin_95();
		test_plugin_96();
		test_plugin_97();
		test_plugin_98();
		test_plugin_99();
		test_plugin_100();
		test_plugin_101();
		test_plugin_102();
		test_plugin_103();
		test_plugin_104();
		test_plugin_105();
		test_plugin_106();
		test_plugin_107();
		test_plugin_108();
		test_plugin_109();
		test_plugin_110();
		test_plugin_111();
		test_plugin_112();
		test_plugin_113();
		test_plugin_114();
		test_plugin_115();
		test_plugin_116();
		test_plugin_117();
		test_plugin_118();
		test_plugin_119();
		test_plugin_120();
		test_plugin_121();
		test_plugin_122();
		test_plugin_123();
		test_plugin_124();
		test_plugin_125();
		test_plugin_126();
		test_plugin_127();
		test_plugin_128();
		test_plugin_129();
		test_plugin_130();
		test_plugin_131();
		test_plugin_132();
		test_plugin_133();
		test_plugin_134();
		test_plugin_135();
		test_plugin_136();
		test_plugin_137();
		test_plugin_138();
		test_plugin_139();
		test_plugin_140();
		test_plugin_141();
		test_plugin_142();
		test_plugin_143();
		test_plugin_144();
		test_plugin_145();
		test_plugin_146();
		test_plugin_147();
		test_plugin_148();
		test_plugin_149();
		test_plugin_150();
		test_plugin_151();
		test_plugin_152();
		test_plugin_153();
		test_plugin_154();
		test_plugin_155();
		test_plugin_156();
		test_plugin_157();
		test_plugin_158();
		test_plugin_159();
		test_plugin_160();
		test_plugin_161();
		test_plugin_162();
		test_plugin_163();
		test_plugin_164();
		test_plugin_165();
		test_plugin_166();
		test_plugin_167();
		test_plugin_168();
		test_plugin_169();
		test_plugin_170();
		test_plugin_171();
		test_plugin_172();
		test_plugin_173();
		test_plugin_174();
		test_plugin_175();
		test_plugin_176();
		test_plugin_177();
		test_plugin_178();
		test_plugin_179();
		test_plugin_180();
		test_plugin_181();
		test_plugin_182();
		test_plugin_183();
		test_plugin_184();
		test_plugin_185();
		test_plugin_186();
		test_plugin_187();
		test_plugin_188();
		test_plugin_189();
		test_plugin_190();
		test_plugin_191();
		test_plugin_192();
		test_plugin_193();
		test_plugin_194();
		test_plugin_195();
		test_plugin_196();
		test_plugin_197();
		test_plugin_198();
		test_plugin_199();
		test_plugin_200();
		test_plugin_201();
		test_plugin_202();
		test_plugin_203();
		test_plugin_204();
		test_plugin_205();
		test_plugin_206();
		test_plugin_207();
		test_plugin_208();
		test_plugin_209();
		test_plugin_210();
		test_plugin_211();
		test_plugin_212();
		test_plugin_213();
		test_plugin_214();
		test_plugin_215();
		test_plugin_216();
		test_plugin_217();
		test_plugin_218();
		test_plugin_219();
		test_plugin_220();
		test_plugin_221();
		test_plugin_222();
		test_plugin_223();
		test_plugin_224();
		test_plugin_225();
		test_plugin_226();
		test_plugin_227();
		test_plugin_228();
		test_plugin_229();
		test_plugin_230();
		test_plugin_231();
		test_plugin_232();
		test_plugin_233();
		test_plugin_234();
		test_plugin_235();
		test_plugin_236();
		test_plugin_237();
		test_plugin_238();
		test_plugin_239();
		test_plugin_240();
		test_plugin_241();
		test_plugin_242();
		test_plugin_243();
		test_plugin_244();
		test_plugin_245();
		test_plugin_246();
		test_plugin_247();
		test_plugin_248();
		test_plugin_249();
		test_plugin_250();
		test_plugin_251();
		test_plugin_252();
		test_plugin_253();
		test_plugin_254();
		test_plugin_255();
		test_plugin_256();
		test_plugin_257();
		test_plugin_258();
		test_plugin_259();
		test_plugin_260();
		test_plugin_261();
		test_plugin_262();
		test_plugin_263();
		test_plugin_264();
		test_plugin_265();
		test_plugin_266();
		test_plugin_267();
		test_plugin_268();
		test_plugin_269();
		test_plugin_270();
		test_plugin_271();
		test_plugin_272();
		test_plugin_273();
		test_plugin_274();
		test_plugin_275();
		test_plugin_276();
		test_plugin_277();
		test_plugin_278();
		test_plugin_279();
		test_plugin_280();
		test_plugin_281();
		test_plugin_282();
		test_plugin_283();
		test_plugin_284();
		test_plugin_285();
		test_plugin_286();
		test_plugin_287();
		test_plugin_288();
		test_plugin_289();
		test_plugin_290();
		test_plugin_291();
		test_plugin_292();
		test_plugin_293();
		test_plugin_294();
		test_plugin_295();
		test_plugin_296();
		test_plugin_297();
		test_plugin_298();
		test_plugin_299();
		test_plugin_300();
		test_plugin_301();
		test_plugin_302();
		test_plugin_303();
		test_plugin_304();
		test_plugin_305();
		test_plugin_306();
		test_plugin_307();
		test_plugin_308();
		test_plugin_309();
		test_plugin_310();
		test_plugin_311();
		test_plugin_312();
		test_plugin_313();
		test_plugin_314();
		test_plugin_315();
		test_plugin_316();
		test_plugin_317();
		test_plugin_318();
		test_plugin_319();
		test_plugin_320();
		test_plugin_321();
		test_plugin_322();
		test_plugin_323();
		test_plugin_324();
		test_plugin_325();
		test_plugin_326();
		test_plugin_327();
		test_plugin_328();
		test_plugin_329();
		test_plugin_330();
		test_plugin_331();
		test_plugin_332();
		test_plugin_333();
		test_plugin_334();
		test_plugin_335();
		test_plugin_336();
		test_plugin_337();
		test_plugin_338();
		test_plugin_339();
		test_plugin_340();
		test_plugin_341();
		test_plugin_342();
		test_plugin_343();
		test_plugin_344();
		test_plugin_345();
		test_plugin_346();
		test_plugin_347();
		test_plugin_348();
		test_plugin_349();
		test_plugin_350();
		test_plugin_351();
		test_plugin_352();
		test_plugin_353();
		test_plugin_354();
		test_plugin_355();
		test_plugin_356();
		test_plugin_357();
		test_plugin_358();
		test_plugin_359();
		test_plugin_360();
		test_plugin_361();
		test_plugin_362();
		test_plugin_363();
		test_plugin_364();
		test_plugin_365();
		test_plugin_366();
		test_plugin_367();
		test_plugin_368();
		test_plugin_369();
		test_plugin_370();
		test_plugin_371();
		test_plugin_372();
		test_plugin_373();
		test_plugin_374();
		test_plugin_375();
		test_plugin_376();
		test_plugin_377();
		test_plugin_378();
		test_plugin_379();
		test_plugin_380();
		test_plugin_381();
		test_plugin_382();
		test_plugin_383();
		test_plugin_384();
		test_plugin_385();
		test_plugin_386();
		test_plugin_387();
		test_plugin_388();
		test_plugin_389();
		test_plugin_390();
		test_plugin_391();
		test_plugin_392();
		test_plugin_393();
		test_plugin_394();
		test_plugin_395();
		test_plugin_396();
		test_plugin_397();
		test_plugin_398();
		test_plugin_399();
		test_plugin_400();
		test_plugin_401();
		test_plugin_402();
		test_plugin_403();
		test_plugin_404();
		test_plugin_405();
		test_plugin_406();
		test_plugin_407();
		test_plugin_408();
		test_plugin_409();
		test_plugin_410();
		test_plugin_411();
		test_plugin_412();
		test_plugin_413();
		test_plugin_414();
		test_plugin_415();
		test_plugin_416();
		test_plugin_417();
		test_plugin_418();
		test_plugin_419();
		test_plugin_420();
		test_plugin_421();
		test_plugin_422();
		test_plugin_423();
		test_plugin_424();
		test_plugin_425();
		test_plugin_426();
		test_plugin_427();
		test_plugin_428();
		test_plugin_429();
		test_plugin_430();
		test_plugin_431();
		test_plugin_432();
		test_plugin_433();
		test_plugin_434();
		test_plugin_435();
		test_plugin_436();
		test_plugin_437();
		test_plugin_438();
		test_plugin_439();
		test_plugin_440();
		test_plugin_441();
		test_plugin_442();
		test_plugin_443();
		test_plugin_444();
		test_plugin_445();
		test_plugin_446();
		test_plugin_447();
		test_plugin_448();
		test_plugin_449();
		test_plugin_450();
		test_plugin_451();
		test_plugin_452();
		test_plugin_453();
		test_plugin_454();
		test_plugin_455();
		test_plugin_456();
		test_plugin_457();
		test_plugin_458();
		test_plugin_459();
		test_plugin_460();
		test_plugin_461();
		test_plugin_462();
		test_plugin_463();
		test_plugin_464();
		test_plugin_465();
		test_plugin_466();
		test_plugin_467();
		test_plugin_468();
		test_plugin_469();
		test_plugin_470();
		test_plugin_471();
		test_plugin_472();
		test_plugin_473();
		test_plugin_474();
		test_plugin_475();
		test_plugin_476();
		test_plugin_477();
		test_plugin_478();
		test_plugin_479();
		test_plugin_480();
		test_plugin_481();
		test_plugin_482();
		test_plugin_483();
		test_plugin_484();
		test_plugin_485();
		test_plugin_486();
		test_plugin_487();
		test_plugin_488();
		test_plugin_489();
		test_plugin_490();
		test_plugin_491();
		test_plugin_492();
		test_plugin_493();
		test_plugin_494();
		test_plugin_495();
		test_plugin_496();
		test_plugin_497();
		test_plugin_498();
		test_plugin_499();
		test_plugin_500();
		test_plugin_501();
		test_plugin_502();
		test_plugin_503();
		test_plugin_504();
		test_plugin_505();
		test_plugin_506();
		test_plugin_507();
		test_plugin_508();
		test_plugin_509();
		test_plugin_510();
		test_plugin_511();
		test_plugin_512();
		test_plugin_513();
		test_plugin_514();
		test_plugin_515();
		test_plugin_516();
		test_plugin_517();
		test_plugin_518();
		test_plugin_519();
		test_plugin_520();
		test_plugin_521();
		test_plugin_522();
		test_plugin_523();
		test_plugin_524();
		test_plugin_525();
		test_plugin_526();
		test_plugin_527();
		test_plugin_528();
		test_plugin_529();
		test_plugin_530();
		test_plugin_531();
		test_plugin_532();
		test_plugin_533();
		test_plugin_534();
		test_plugin_535();
		test_plugin_536();
		test_plugin_537();
		test_plugin_538();
		test_plugin_539();
		test_plugin_540();
		test_plugin_541();
		test_plugin_542();
		test_plugin_543();
		test_plugin_544();
		test_plugin_545();
		test_plugin_546();
		test_plugin_547();
		test_plugin_548();
		test_plugin_549();
		test_plugin_550();
		test_plugin_551();
		test_plugin_552();
		test_plugin_553();
		test_plugin_554();
		test_plugin_555();
		test_plugin_556();
		test_plugin_557();
		test_plugin_558();
		test_plugin_559();
		test_plugin_560();
		test_plugin_561();
		test_plugin_562();
		test_plugin_563();
		test_plugin_564();
		test_plugin_565();
		test_plugin_566();
		test_plugin_567();
		test_plugin_568();
		test_plugin_569();
		test_plugin_570();
		test_plugin_571();
		test_plugin_572();
		test_plugin_573();
		test_plugin_574();
		test_plugin_575();
		test_plugin_576();
		test_plugin_577();
		test_plugin_578();
		test_plugin_579();
		test_plugin_580();
		test_plugin_581();
		test_plugin_582();
		test_plugin_583();
		test_plugin_584();
		test_plugin_585();
		test_plugin_586();
		test_plugin_587();
		test_plugin_588();
		test_plugin_589();
		test_plugin_590();
		test_plugin_591();
		test_plugin_592();
		test_plugin_593();
		test_plugin_594();
		test_plugin_595();
		test_plugin_596();
		test_plugin_597();
		test_plugin_598();
		test_plugin_599();
		test_plugin_600();
		test_plugin_601();
		test_plugin_602();
		test_plugin_603();
		test_plugin_604();
		test_plugin_605();
		test_plugin_606();
		test_plugin_607();
		test_plugin_608();
		test_plugin_609();
		test_plugin_610();
		test_plugin_611();
		test_plugin_612();
		test_plugin_613();
		test_plugin_614();
		test_plugin_615();
		test_plugin_616();
		test_plugin_617();
		test_plugin_618();
		test_plugin_619();
		test_plugin_620();
		test_plugin_621();
		test_plugin_622();
		test_plugin_623();
		test_plugin_624();
		test_plugin_625();
		test_plugin_626();
		test_plugin_627();
		test_plugin_628();
		test_plugin_629();
		test_plugin_630();
		test_plugin_631();
		test_plugin_632();
		test_plugin_633();
		test_plugin_634();
		test_plugin_635();
		test_plugin_636();
		test_plugin_637();
		test_plugin_638();
		test_plugin_639();
		test_plugin_640();
		test_plugin_641();
		test_plugin_642();
		test_plugin_643();
		test_plugin_644();
		test_plugin_645();
		test_plugin_646();
		test_plugin_647();
		test_plugin_648();
		test_plugin_649();
		test_plugin_650();
		test_plugin_651();
		test_plugin_652();
		test_plugin_653();
		test_plugin_654();
		test_plugin_655();
		test_plugin_656();
		test_plugin_657();
		test_plugin_658();
		test_plugin_659();
		test_plugin_660();
		test_plugin_661();
		test_plugin_662();
		test_plugin_663();
		test_plugin_664();
		test_plugin_665();
		test_plugin_666();
		test_plugin_667();
		test_plugin_668();
		test_plugin_669();
		test_plugin_670();
		test_plugin_671();
		test_plugin_672();
		test_plugin_673();
		test_plugin_674();
		test_plugin_675();
		test_plugin_676();
		test_plugin_677();
		test_plugin_678();
		test_plugin_679();
		test_plugin_680();
		test_plugin_681();
		test_plugin_682();
		test_plugin_683();
		test_plugin_684();
		test_plugin_685();
		test_plugin_686();
		test_plugin_687();
		test_plugin_688();
		test_plugin_689();
		test_plugin_690();
		test_plugin_691();
		test_plugin_692();
		test_plugin_693();
		test_plugin_694();
		test_plugin_695();
		test_plugin_696();
		test_plugin_697();
		test_plugin_698();
		test_plugin_699();
		test_plugin_700();
		test_plugin_701();
		test_plugin_702();
		test_plugin_703();
		test_plugin_704();
		test_plugin_705();
		test_plugin_706();
		test_plugin_707();
		test_plugin_708();
		test_plugin_709();
		test_plugin_710();
		test_plugin_711();
		test_plugin_712();
		test_plugin_713();
		test_plugin_714();
		test_plugin_715();
		test_plugin_716();
		test_plugin_717();
		test_plugin_718();
		test_plugin_719();
		test_plugin_720();
		test_plugin_721();
		test_plugin_722();
		test_plugin_723();
		test_plugin_724();
		test_plugin_725();
		test_plugin_726();
		test_plugin_727();
		test_plugin_728();
		test_plugin_729();
		test_plugin_730();
		test_plugin_731();
		test_plugin_732();
		test_plugin_733();
		test_plugin_734();
		test_plugin_735();
		test_plugin_736();
		test_plugin_737();
		test_plugin_738();
		test_plugin_739();
		test_plugin_740();
		test_plugin_741();
		test_plugin_742();
		test_plugin_743();
		test_plugin_744();
		test_plugin_745();
		test_plugin_746();
		test_plugin_747();
		test_plugin_748();
		test_plugin_749();
		test_plugin_750();
		test_plugin_751();
		test_plugin_752();
		test_plugin_753();
		test_plugin_754();
		test_plugin_755();
		test_plugin_756();
		test_plugin_757();
		test_plugin_758();
		test_plugin_759();
		test_plugin_760();
		test_plugin_761();
		test_plugin_762();
		test_plugin_763();
		test_plugin_764();
		test_plugin_765();
		test_plugin_766();
		test_plugin_767();
		test_plugin_768();
		test_plugin_769();
		test_plugin_770();
		test_plugin_771();
		test_plugin_772();
		test_plugin_773();
		test_plugin_774();
		test_plugin_775();
		test_plugin_776();
		test_plugin_777();
		test_plugin_778();
		test_plugin_779();
		test_plugin_780();
		test_plugin_781();
		test_plugin_782();
		test_plugin_783();
		test_plugin_784();
		test_plugin_785();
		test_plugin_786();
		test_plugin_787();
		test_plugin_788();
		test_plugin_789();
		test_plugin_790();
		test_plugin_791();
		test_plugin_792();
		test_plugin_793();
		test_plugin_794();
		test_plugin_795();
		test_plugin_796();
		test_plugin_797();
		test_plugin_798();
		test_plugin_799();
		test_plugin_800();
		test_plugin_801();
		test_plugin_802();
		test_plugin_803();
		test_plugin_804();
		test_plugin_805();
		test_plugin_806();
		test_plugin_807();
		test_plugin_808();
		test_plugin_809();
		test_plugin_810();
		test_plugin_811();
		test_plugin_812();
		test_plugin_813();
		test_plugin_814();
		test_plugin_815();
		test_plugin_816();
		test_plugin_817();
		test_plugin_818();
		test_plugin_819();
		test_plugin_820();
		test_plugin_821();
		test_plugin_822();
		test_plugin_823();
		test_plugin_824();
		test_plugin_825();
		test_plugin_826();
		test_plugin_827();
		test_plugin_828();
		test_plugin_829();
		test_plugin_830();
		test_plugin_831();
		test_plugin_832();
		test_plugin_833();
		test_plugin_834();
		test_plugin_835();
		test_plugin_836();
		test_plugin_837();
		test_plugin_838();
		test_plugin_839();
		test_plugin_840();
		test_plugin_841();
		test_plugin_842();
		test_plugin_843();
		test_plugin_844();
		test_plugin_845();
		test_plugin_846();
		test_plugin_847();
		test_plugin_848();
		test_plugin_849();
		test_plugin_850();
		test_plugin_851();
		test_plugin_852();
		test_plugin_853();
		test_plugin_854();
		test_plugin_855();
		test_plugin_856();
		test_plugin_857();
		test_plugin_858();
		test_plugin_859();
		test_plugin_860();
		test_plugin_861();
		test_plugin_862();
		test_plugin_863();
		test_plugin_864();
		test_plugin_865();
		test_plugin_866();
		test_plugin_867();
		test_plugin_868();
		test_plugin_869();
		test_plugin_870();
		test_plugin_871();
		test_plugin_872();
		test_plugin_873();
		test_plugin_874();
		test_plugin_875();
		test_plugin_876();
		test_plugin_877();
		test_plugin_878();
		test_plugin_879();
		test_plugin_880();
		test_plugin_881();
		test_plugin_882();
		test_plugin_883();
		test_plugin_884();
		test_plugin_885();
		test_plugin_886();
		test_plugin_887();
		test_plugin_888();
		test_plugin_889();
		test_plugin_890();
		test_plugin_891();
		test_plugin_892();
		test_plugin_893();
		test_plugin_894();
		test_plugin_895();
		test_plugin_896();
		test_plugin_897();
		test_plugin_898();
		test_plugin_899();
		test_plugin_900();
		test_plugin_901();
		test_plugin_902();
		test_plugin_903();
		test_plugin_904();
		test_plugin_905();
		test_plugin_906();
		test_plugin_907();
		test_plugin_908();
		test_plugin_909();
		test_plugin_910();
		test_plugin_911();
		test_plugin_912();
		test_plugin_913();
		test_plugin_914();
		test_plugin_915();
		test_plugin_916();
		test_plugin_917();
		test_plugin_918();
		test_plugin_919();
		test_plugin_920();
		test_plugin_921();
		test_plugin_922();
		test_plugin_923();
		test_plugin_924();
		test_plugin_925();
		test_plugin_926();
		test_plugin_927();
		test_plugin_928();
		test_plugin_929();
		test_plugin_930();
		test_plugin_931();
		test_plugin_932();
		test_plugin_933();
		test_plugin_934();
		test_plugin_935();
		test_plugin_936();
		test_plugin_937();
		test_plugin_938();
		test_plugin_939();
		test_plugin_940();
		test_plugin_941();
		test_plugin_942();
		test_plugin_943();
		test_plugin_944();
		test_plugin_945();
		test_plugin_946();
		test_plugin_947();
		test_plugin_948();
		test_plugin_949();
		test_plugin_950();
		test_plugin_951();
		test_plugin_952();
		test_plugin_953();
		test_plugin_954();
		test_plugin_955();
		test_plugin_956();
		test_plugin_957();
		test_plugin_958();
		test_plugin_959();
		test_plugin_960();
		test_plugin_961();
		test_plugin_962();
		test_plugin_963();
		test_plugin_964();
		test_plugin_965();
		test_plugin_966();
		test_plugin_967();
		test_plugin_968();
		test_plugin_969();
		test_plugin_970();
		test_plugin_971();
		test_plugin_972();
		test_plugin_973();
		test_plugin_974();
		test_plugin_975();
		test_plugin_976();
		test_plugin_977();
		test_plugin_978();
		test_plugin_979();
		test_plugin_980();
		test_plugin_981();
		test_plugin_982();
		test_plugin_983();
		test_plugin_984();
		test_plugin_985();
		test_plugin_986();
		test_plugin_987();
		test_plugin_988();
		test_plugin_989();
		test_plugin_990();
		test_plugin_991();
		test_plugin_992();
		test_plugin_993();
		test_plugin_994();
		test_plugin_995();
		test_plugin_996();
		test_plugin_997();
		test_plugin_998();
		test_plugin_999();
		test_plugin_1000();
		test_plugin_1001();
		test_plugin_1002();
		test_plugin_1003();
		test_plugin_1004();
		test_plugin_1005();
		test_plugin_1006();
		test_plugin_1007();
		test_plugin_1008();
		test_plugin_1009();
		test_plugin_1010();
		test_plugin_1011();
		test_plugin_1012();
		test_plugin_1013();
		test_plugin_1014();
		test_plugin_1015();
		test_plugin_1016();
		test_plugin_1017();
		test_plugin_1018();
		test_plugin_1019();
		test_plugin_1020();
		test_plugin_1021();
		test_plugin_1022();
		test_plugin_1023();
		test_plugin_1024();
		test_plugin_1025();
		test_plugin_1026();
		test_plugin_1027();
		test_plugin_1028();
		test_plugin_1029();
		test_plugin_1030();
		test_plugin_1031();
		test_plugin_1032();
		test_plugin_1033();
		test_plugin_1034();
		test_plugin_1035();
		test_plugin_1036();
		test_plugin_1037();
		test_plugin_1038();
		test_plugin_1039();
		test_plugin_1040();
		test_plugin_1041();
		test_plugin_1042();
		test_plugin_1043();
		test_plugin_1044();
		test_plugin_1045();
		test_plugin_1046();
		test_plugin_1047();
		test_plugin_1048();
		test_plugin_1049();
		test_plugin_1050();
		test_plugin_1051();
		test_plugin_1052();
		test_plugin_1053();
		test_plugin_1054();
		test_plugin_1055();
		test_plugin_1056();
		test_plugin_1057();
		test_plugin_1058();
		test_plugin_1059();
		test_plugin_1060();
		test_plugin_1061();
		test_plugin_1062();
		test_plugin_1063();
		test_plugin_1064();
		test_plugin_1065();
		test_plugin_1066();
		test_plugin_1067();
		test_plugin_1068();
		test_plugin_1069();
		test_plugin_1070();
		test_plugin_1071();
		test_plugin_1072();
		test_plugin_1073();
		test_plugin_1074();
		test_plugin_1075();
		test_plugin_1076();
		test_plugin_1077();
		test_plugin_1078();
		test_plugin_1079();
		test_plugin_1080();
		test_plugin_1081();
		test_plugin_1082();
		test_plugin_1083();
		test_plugin_1084();
		test_plugin_1085();
		test_plugin_1086();
		test_plugin_1087();
		test_plugin_1088();
		test_plugin_1089();
		test_plugin_1090();
		test_plugin_1091();
		test_plugin_1092();
		test_plugin_1093();
		test_plugin_1094();
		test_plugin_1095();
		test_plugin_1096();
		test_plugin_1097();
		test_plugin_1098();
		test_plugin_1099();
		test_plugin_1100();
		test_plugin_1101();
		test_plugin_1102();
		test_plugin_1103();
		test_plugin_1104();
		test_plugin_1105();
		test_plugin_1106();
		test_plugin_1107();
		test_plugin_1108();
		test_plugin_1109();
		test_plugin_1110();
		test_plugin_1111();
		test_plugin_1112();
		test_plugin_1113();
		test_plugin_1114();
		test_plugin_1115();
		test_plugin_1116();
		test_plugin_1117();
		test_plugin_1118();
		test_plugin_1119();
		test_plugin_1120();
		test_plugin_1121();
		test_plugin_1122();
		test_plugin_1123();
		test_plugin_1124();
		test_plugin_1125();
		test_plugin_1126();
		test_plugin_1127();
		test_plugin_1128();
		test_plugin_1129();
		test_plugin_1130();
		test_plugin_1131();
		test_plugin_1132();
		test_plugin_1133();
		test_plugin_1134();
		test_plugin_1135();
		test_plugin_1136();
		test_plugin_1137();
		test_plugin_1138();
		test_plugin_1139();
		test_plugin_1140();
		test_plugin_1141();
		test_plugin_1142();
		test_plugin_1143();
		test_plugin_1144();
		test_plugin_1145();
		test_plugin_1146();
		test_plugin_1147();
		test_plugin_1148();
		test_plugin_1149();
		test_plugin_1150();
		test_plugin_1151();
		test_plugin_1152();
		test_plugin_1153();
		test_plugin_1154();
		test_plugin_1155();
		test_plugin_1156();
		test_plugin_1157();
		test_plugin_1158();
		test_plugin_1159();
		test_plugin_1160();
		test_plugin_1161();
		test_plugin_1162();
		test_plugin_1163();
		test_plugin_1164();
		test_plugin_1165();
		test_plugin_1166();
		test_plugin_1167();
		test_plugin_1168();
		test_plugin_1169();
		test_plugin_1170();
		test_plugin_1171();
		test_plugin_1172();
		test_plugin_1173();
		test_plugin_1174();
		test_plugin_1175();
		test_plugin_1176();
		test_plugin_1177();
		test_plugin_1178();
		test_plugin_1179();
		test_plugin_1180();
		test_plugin_1181();
		test_plugin_1182();
		test_plugin_1183();
		test_plugin_1184();
		test_plugin_1185();
		test_plugin_1186();
		test_plugin_1187();
		test_plugin_1188();
		test_plugin_1189();
		test_plugin_1190();
		test_plugin_1191();
		test_plugin_1192();
		test_plugin_1193();
		test_plugin_1194();
		test_plugin_1195();
		test_plugin_1196();
		test_plugin_1197();
		test_plugin_1198();
		test_plugin_1199();
		test_plugin_1200();
		test_plugin_1201();
		test_plugin_1202();
		test_plugin_1203();
		test_plugin_1204();
		test_plugin_1205();
		test_plugin_1206();
		test_plugin_1207();
		test_plugin_1208();
		test_plugin_1209();
		test_plugin_1210();
		test_plugin_1211();
		test_plugin_1212();
		test_plugin_1213();
		test_plugin_1214();
		test_plugin_1215();
		test_plugin_1216();
		test_plugin_1217();
		test_plugin_1218();
		test_plugin_1219();
		test_plugin_1220();
		test_plugin_1221();
		test_plugin_1222();
		test_plugin_1223();
		test_plugin_1224();
		test_plugin_1225();
		test_plugin_1226();
		test_plugin_1227();
		test_plugin_1228();
		test_plugin_1229();
		test_plugin_1230();
		test_plugin_1231();
		test_plugin_1232();
		test_plugin_1233();
		test_plugin_1234();
		test_plugin_1235();
		test_plugin_1236();
		test_plugin_1237();
		test_plugin_1238();
		test_plugin_1239();
		test_plugin_1240();
		test_plugin_1241();
		test_plugin_1242();
		test_plugin_1243();
		test_plugin_1244();
		test_plugin_1245();
		test_plugin_1246();
		test_plugin_1247();
		test_plugin_1248();
		test_plugin_1249();
		test_plugin_1250();
		test_plugin_1251();
		test_plugin_1252();
		test_plugin_1253();
		test_plugin_1254();
		test_plugin_1255();
		test_plugin_1256();
		test_plugin_1257();
		test_plugin_1258();
		test_plugin_1259();
		test_plugin_1260();
		test_plugin_1261();
		test_plugin_1262();
		test_plugin_1263();
		test_plugin_1264();
		test_plugin_1265();
		test_plugin_1266();
		test_plugin_1267();
		test_plugin_1268();
		test_plugin_1269();
		test_plugin_1270();
		test_plugin_1271();
		test_plugin_1272();
		test_plugin_1273();
		test_plugin_1274();
		test_plugin_1275();
		test_plugin_1276();
		test_plugin_1277();
		test_plugin_1278();
		test_plugin_1279();
		test_plugin_1280();
		test_plugin_1281();
		test_plugin_1282();
		test_plugin_1283();
		test_plugin_1284();
		test_plugin_1285();
		test_plugin_1286();
		test_plugin_1287();
		test_plugin_1288();
		test_plugin_1289();
		test_plugin_1290();
		test_plugin_1291();
		test_plugin_1292();
		test_plugin_1293();
		test_plugin_1294();
		test_plugin_1295();
		test_plugin_1296();
		test_plugin_1297();
		test_plugin_1298();
		test_plugin_1299();
		test_plugin_1300();
		test_plugin_1301();
		test_plugin_1302();
		test_plugin_1303();
		test_plugin_1304();
		test_plugin_1305();
		test_plugin_1306();
		test_plugin_1307();
		test_plugin_1308();
		test_plugin_1309();
		test_plugin_1310();
		test_plugin_1311();
		test_plugin_1312();
		test_plugin_1313();
		test_plugin_1314();
		test_plugin_1315();
		test_plugin_1316();
		test_plugin_1317();
		test_plugin_1318();
		test_plugin_1319();
		test_plugin_1320();
		test_plugin_1321();
		test_plugin_1322();
		test_plugin_1323();
		test_plugin_1324();
		test_plugin_1325();
		test_plugin_1326();
		test_plugin_1327();
		test_plugin_1328();
		test_plugin_1329();
		test_plugin_1330();
		test_plugin_1331();
		test_plugin_1332();
		test_plugin_1333();
		test_plugin_1334();
		test_plugin_1335();
		test_plugin_1336();
		test_plugin_1337();
		test_plugin_1338();
		test_plugin_1339();
		test_plugin_1340();
		test_plugin_1341();
		test_plugin_1342();
		test_plugin_1343();
		test_plugin_1344();
		test_plugin_1345();
		test_plugin_1346();
		test_plugin_1347();
		test_plugin_1348();
		test_plugin_1349();
		test_plugin_1350();
		test_plugin_1351();
		test_plugin_1352();
		test_plugin_1353();
		test_plugin_1354();
		test_plugin_1355();
		test_plugin_1356();
		test_plugin_1357();
		test_plugin_1358();
		test_plugin_1359();
		test_plugin_1360();
		test_plugin_1361();
		test_plugin_1362();
		test_plugin_1363();
		test_plugin_1364();
		test_plugin_1365();
		test_plugin_1366();
		test_plugin_1367();
		test_plugin_1368();
		test_plugin_1369();
		test_plugin_1370();
		test_plugin_1371();
		test_plugin_1372();
		test_plugin_1373();
		test_plugin_1374();
		test_plugin_1375();
		test_plugin_1376();
		test_plugin_1377();
		test_plugin_1378();
		test_plugin_1379();
		test_plugin_1380();
		test_plugin_1381();
		test_plugin_1382();
		test_plugin_1383();
		test_plugin_1384();
		test_plugin_1385();
		test_plugin_1386();
		test_plugin_1387();
		test_plugin_1388();
		test_plugin_1389();
		test_plugin_1390();
		test_plugin_1391();
		test_plugin_1392();
		test_plugin_1393();
		test_plugin_1394();
		test_plugin_1395();
		test_plugin_1396();
		test_plugin_1397();
		test_plugin_1398();
		test_plugin_1399();
		test_plugin_1400();
		test_plugin_1401();
		test_plugin_1402();
		test_plugin_1403();
		test_plugin_1404();
		test_plugin_1405();
		test_plugin_1406();
		test_plugin_1407();
		test_plugin_1408();
		test_plugin_1409();
		test_plugin_1410();
		test_plugin_1411();
		test_plugin_1412();
		test_plugin_1413();
		test_plugin_1414();
		test_plugin_1415();
		test_plugin_1416();
		test_plugin_1417();
		test_plugin_1418();
		test_plugin_1419();
		test_plugin_1420();
		test_plugin_1421();
		test_plugin_1422();
		test_plugin_1423();
		test_plugin_1424();
		test_plugin_1425();
		test_plugin_1426();
		test_plugin_1427();
		test_plugin_1428();
		test_plugin_1429();
		test_plugin_1430();
		test_plugin_1431();
		test_plugin_1432();
		test_plugin_1433();
		test_plugin_1434();
		test_plugin_1435();
		test_plugin_1436();
		test_plugin_1437();
		test_plugin_1438();
		test_plugin_1439();
		test_plugin_1440();
		test_plugin_1441();
		test_plugin_1442();
		test_plugin_1443();
		test_plugin_1444();
		test_plugin_1445();
		test_plugin_1446();
		test_plugin_1447();
		test_plugin_1448();
		test_plugin_1449();
		test_plugin_1450();
		test_plugin_1451();
		test_plugin_1452();
		test_plugin_1453();
		test_plugin_1454();
		test_plugin_1455();
		test_plugin_1456();
		test_plugin_1457();
		test_plugin_1458();
		test_plugin_1459();
		test_plugin_1460();
		test_plugin_1461();
		test_plugin_1462();
		test_plugin_1463();
		test_plugin_1464();
		test_plugin_1465();
		test_plugin_1466();
		test_plugin_1467();
		test_plugin_1468();
		test_plugin_1469();
		test_plugin_1470();
		test_plugin_1471();
		test_plugin_1472();
		test_plugin_1473();
		test_plugin_1474();
		test_plugin_1475();
		test_plugin_1476();
		test_plugin_1477();
		test_plugin_1478();
		test_plugin_1479();
		test_plugin_1480();
		test_plugin_1481();
		test_plugin_1482();
		test_plugin_1483();
		test_plugin_1484();
		test_plugin_1485();
		test_plugin_1486();
		test_plugin_1487();
		test_plugin_1488();
		test_plugin_1489();
		test_plugin_1490();
		test_plugin_1491();
		test_plugin_1492();
		test_plugin_1493();
		test_plugin_1494();
		test_plugin_1495();
		test_plugin_1496();
		test_plugin_1497();
		test_plugin_1498();
		test_plugin_1499();
		test_plugin_1500();
		test_plugin_1501();
		test_plugin_1502();
		test_plugin_1503();
		test_plugin_1504();
		test_plugin_1505();
		test_plugin_1506();
		test_plugin_1507();
		test_plugin_1508();
		test_plugin_1509();
		test_plugin_1510();
		test_plugin_1511();
		test_plugin_1512();
		test_plugin_1513();
		test_plugin_1514();
		test_plugin_1515();
		test_plugin_1516();
		test_plugin_1517();
		test_plugin_1518();
		test_plugin_1519();
		test_plugin_1520();
		test_plugin_1521();
		test_plugin_1522();
		test_plugin_1523();
		test_plugin_1524();
		test_plugin_1525();
		test_plugin_1526();
		test_plugin_1527();
		test_plugin_1528();
		test_plugin_1529();
		test_plugin_1530();
		test_plugin_1531();
		test_plugin_1532();
		test_plugin_1533();
		test_plugin_1534();
		test_plugin_1535();
		test_plugin_1536();
		test_plugin_1537();
		test_plugin_1538();
		test_plugin_1539();
		test_plugin_1540();
		test_plugin_1541();
		test_plugin_1542();
		test_plugin_1543();
		test_plugin_1544();
		test_plugin_1545();
		test_plugin_1546();
		test_plugin_1547();
		test_plugin_1548();
		test_plugin_1549();
		test_plugin_1550();
		test_plugin_1551();
		test_plugin_1552();
		test_plugin_1553();
		test_plugin_1554();
		test_plugin_1555();
		test_plugin_1556();
		test_plugin_1557();
		test_plugin_1558();
		test_plugin_1559();
		test_plugin_1560();
		test_plugin_1561();
		test_plugin_1562();
		test_plugin_1563();
		test_plugin_1564();
		test_plugin_1565();
		test_plugin_1566();
		test_plugin_1567();
		test_plugin_1568();
		test_plugin_1569();
		test_plugin_1570();
		test_plugin_1571();
		test_plugin_1572();
		test_plugin_1573();
		test_plugin_1574();
		test_plugin_1575();
		test_plugin_1576();
		test_plugin_1577();
		test_plugin_1578();
		test_plugin_1579();
		test_plugin_1580();
		test_plugin_1581();
		test_plugin_1582();
		test_plugin_1583();
		test_plugin_1584();
		test_plugin_1585();
		test_plugin_1586();
		test_plugin_1587();
		test_plugin_1588();
		test_plugin_1589();
		test_plugin_1590();
		test_plugin_1591();
		test_plugin_1592();
		test_plugin_1593();
		test_plugin_1594();
		test_plugin_1595();
		test_plugin_1596();
		test_plugin_1597();
		test_plugin_1598();
		test_plugin_1599();
		test_plugin_1600();
		test_plugin_1601();
		test_plugin_1602();
		test_plugin_1603();
		test_plugin_1604();
		test_plugin_1605();
		test_plugin_1606();
		test_plugin_1607();
		test_plugin_1608();
		test_plugin_1609();
		test_plugin_1610();
		test_plugin_1611();
		test_plugin_1612();
		test_plugin_1613();
		test_plugin_1614();
		test_plugin_1615();
		test_plugin_1616();
		test_plugin_1617();
		test_plugin_1618();
		test_plugin_1619();
		test_plugin_1620();
		test_plugin_1621();
		test_plugin_1622();
		test_plugin_1623();
		test_plugin_1624();
		test_plugin_1625();
		test_plugin_1626();
		test_plugin_1627();
		test_plugin_1628();
		test_plugin_1629();
		test_plugin_1630();
		test_plugin_1631();
		test_plugin_1632();
		test_plugin_1633();
		test_plugin_1634();
		test_plugin_1635();
		test_plugin_1636();
		test_plugin_1637();
		test_plugin_1638();
		test_plugin_1639();
		test_plugin_1640();
		test_plugin_1641();
		test_plugin_1642();
		test_plugin_1643();
		test_plugin_1644();
		test_plugin_1645();
		test_plugin_1646();
		test_plugin_1647();
		test_plugin_1648();
		test_plugin_1649();
		test_plugin_1650();
		test_plugin_1651();
		test_plugin_1652();
		test_plugin_1653();
		test_plugin_1654();
		test_plugin_1655();
		test_plugin_1656();
		test_plugin_1657();
		test_plugin_1658();
		test_plugin_1659();
		test_plugin_1660();
		test_plugin_1661();
		test_plugin_1662();
		test_plugin_1663();
		test_plugin_1664();
		test_plugin_1665();
		test_plugin_1666();
		test_plugin_1667();
		test_plugin_1668();
		test_plugin_1669();
		test_plugin_1670();
		test_plugin_1671();
		test_plugin_1672();
		test_plugin_1673();
		test_plugin_1674();
		test_plugin_1675();
		test_plugin_1676();
		test_plugin_1677();
		test_plugin_1678();
		test_plugin_1679();
		test_plugin_1680();
		test_plugin_1681();
		test_plugin_1682();
		test_plugin_1683();
		test_plugin_1684();
		test_plugin_1685();
		test_plugin_1686();
		test_plugin_1687();
		test_plugin_1688();
		test_plugin_1689();
		test_plugin_1690();
		test_plugin_1691();
		test_plugin_1692();
		test_plugin_1693();
		test_plugin_1694();
		test_plugin_1695();
		test_plugin_1696();
		test_plugin_1697();
		test_plugin_1698();
		test_plugin_1699();
		test_plugin_1700();
		test_plugin_1701();
		test_plugin_1702();
		test_plugin_1703();
		test_plugin_1704();
		test_plugin_1705();
		test_plugin_1706();
		test_plugin_1707();
		test_plugin_1708();
		test_plugin_1709();
		test_plugin_1710();
		test_plugin_1711();
		test_plugin_1712();
		test_plugin_1713();
		test_plugin_1714();
		test_plugin_1715();
		test_plugin_1716();
		test_plugin_1717();
		test_plugin_1718();
		test_plugin_1719();
		test_plugin_1720();
		test_plugin_1721();
		test_plugin_1722();
		test_plugin_1723();
		test_plugin_1724();
		test_plugin_1725();
		test_plugin_1726();
		test_plugin_1727();
		test_plugin_1728();
		test_plugin_1729();
		test_plugin_1730();
		test_plugin_1731();
		test_plugin_1732();
		test_plugin_1733();
		test_plugin_1734();
		test_plugin_1735();
		test_plugin_1736();
		test_plugin_1737();
		test_plugin_1738();
		test_plugin_1739();
		test_plugin_1740();
		test_plugin_1741();
		test_plugin_1742();
		test_plugin_1743();
		test_plugin_1744();
		test_plugin_1745();
		test_plugin_1746();
		test_plugin_1747();
		test_plugin_1748();
		test_plugin_1749();
		test_plugin_1750();
		test_plugin_1751();
		test_plugin_1752();
		test_plugin_1753();
		test_plugin_1754();
		test_plugin_1755();
		test_plugin_1756();
		test_plugin_1757();
		test_plugin_1758();
		test_plugin_1759();
		test_plugin_1760();
		test_plugin_1761();
		test_plugin_1762();
		test_plugin_1763();
		test_plugin_1764();
		test_plugin_1765();
		test_plugin_1766();
		test_plugin_1767();
		test_plugin_1768();
		test_plugin_1769();
		test_plugin_1770();
		test_plugin_1771();
		test_plugin_1772();
		test_plugin_1773();
		test_plugin_1774();
		test_plugin_1775();
		test_plugin_1776();
		test_plugin_1777();
		test_plugin_1778();
		test_plugin_1779();
		test_plugin_1780();
		test_plugin_1781();
		test_plugin_1782();
		test_plugin_1783();
		test_plugin_1784();
		test_plugin_1785();
		test_plugin_1786();
		test_plugin_1787();
		test_plugin_1788();
		test_plugin_1789();
		test_plugin_1790();
		test_plugin_1791();
		test_plugin_1792();
		test_plugin_1793();
		test_plugin_1794();
		test_plugin_1795();
		test_plugin_1796();
		test_plugin_1797();
		test_plugin_1798();
		test_plugin_1799();
		test_plugin_1800();
		test_plugin_1801();
		test_plugin_1802();
		test_plugin_1803();
		test_plugin_1804();
		test_plugin_1805();
		test_plugin_1806();
		test_plugin_1807();
		test_plugin_1808();
		test_plugin_1809();
		test_plugin_1810();
		test_plugin_1811();
		test_plugin_1812();
		test_plugin_1813();
		test_plugin_1814();
		test_plugin_1815();
		test_plugin_1816();
		test_plugin_1817();
		test_plugin_1818();
		test_plugin_1819();
		test_plugin_1820();
		test_plugin_1821();
		test_plugin_1822();
		test_plugin_1823();
		test_plugin_1824();
		test_plugin_1825();
		test_plugin_1826();
		test_plugin_1827();
		test_plugin_1828();
		test_plugin_1829();
		test_plugin_1830();
		test_plugin_1831();
		test_plugin_1832();
		test_plugin_1833();
		test_plugin_1834();
		test_plugin_1835();
		test_plugin_1836();
		test_plugin_1837();
		test_plugin_1838();
		test_plugin_1839();
		test_plugin_1840();
		test_plugin_1841();
		test_plugin_1842();
		test_plugin_1843();
		test_plugin_1844();
		test_plugin_1845();
		test_plugin_1846();
		test_plugin_1847();
		test_plugin_1848();
		test_plugin_1849();
		test_plugin_1850();
		test_plugin_1851();
		test_plugin_1852();
		test_plugin_1853();
		test_plugin_1854();
		test_plugin_1855();
		test_plugin_1856();
		test_plugin_1857();
		test_plugin_1858();
		test_plugin_1859();
		test_plugin_1860();
		test_plugin_1861();
		test_plugin_1862();
		test_plugin_1863();
		test_plugin_1864();
		test_plugin_1865();
		test_plugin_1866();
		test_plugin_1867();
		test_plugin_1868();
		test_plugin_1869();
		test_plugin_1870();
		test_plugin_1871();
		test_plugin_1872();
		test_plugin_1873();
		test_plugin_1874();
		test_plugin_1875();
		test_plugin_1876();
		test_plugin_1877();
		test_plugin_1878();
		test_plugin_1879();
		test_plugin_1880();
		test_plugin_1881();
		test_plugin_1882();
		test_plugin_1883();
		test_plugin_1884();
		test_plugin_1885();
		test_plugin_1886();
		test_plugin_1887();
		test_plugin_1888();
		test_plugin_1889();
		test_plugin_1890();
		test_plugin_1891();
		test_plugin_1892();
		test_plugin_1893();
		test_plugin_1894();
		test_plugin_1895();
		test_plugin_1896();
		test_plugin_1897();
		test_plugin_1898();
		test_plugin_1899();
		test_plugin_1900();
		test_plugin_1901();
		test_plugin_1902();
		test_plugin_1903();
		test_plugin_1904();
		test_plugin_1905();
		test_plugin_1906();
		test_plugin_1907();
		test_plugin_1908();
		test_plugin_1909();
		test_plugin_1910();
		test_plugin_1911();
		test_plugin_1912();
		test_plugin_1913();
		test_plugin_1914();
		test_plugin_1915();
		test_plugin_1916();
		test_plugin_1917();
		test_plugin_1918();
		test_plugin_1919();
		test_plugin_1920();
		test_plugin_1921();
		test_plugin_1922();
		test_plugin_1923();
		test_plugin_1924();
		test_plugin_1925();
		test_plugin_1926();
		test_plugin_1927();
		test_plugin_1928();
		test_plugin_1929();
		test_plugin_1930();
		test_plugin_1931();
		test_plugin_1932();
		test_plugin_1933();
		test_plugin_1934();
		test_plugin_1935();
		test_plugin_1936();
		test_plugin_1937();
		test_plugin_1938();
		test_plugin_1939();
		test_plugin_1940();
		test_plugin_1941();
		test_plugin_1942();
		test_plugin_1943();
		test_plugin_1944();
		test_plugin_1945();
		test_plugin_1946();
		test_plugin_1947();
		test_plugin_1948();
		test_plugin_1949();
		test_plugin_1950();
		test_plugin_1951();
		test_plugin_1952();
		test_plugin_1953();
		test_plugin_1954();
		test_plugin_1955();
		test_plugin_1956();
		test_plugin_1957();
		test_plugin_1958();
		test_plugin_1959();
		test_plugin_1960();
		test_plugin_1961();
		test_plugin_1962();
		test_plugin_1963();
		test_plugin_1964();
		test_plugin_1965();
		test_plugin_1966();
		test_plugin_1967();
		test_plugin_1968();
		test_plugin_1969();
		test_plugin_1970();
		test_plugin_1971();
		test_plugin_1972();
		test_plugin_1973();
		test_plugin_1974();
		test_plugin_1975();
		test_plugin_1976();
		test_plugin_1977();
		test_plugin_1978();
		test_plugin_1979();
		test_plugin_1980();
		test_plugin_1981();
		test_plugin_1982();
		test_plugin_1983();
		test_plugin_1984();
		test_plugin_1985();
		test_plugin_1986();
		test_plugin_1987();
		test_plugin_1988();
		test_plugin_1989();
		test_plugin_1990();
		test_plugin_1991();
		test_plugin_1992();
		test_plugin_1993();
		test_plugin_1994();
		test_plugin_1995();
		test_plugin_1996();
		test_plugin_1997();
		test_plugin_1998();
		test_plugin_1999();
		test_plugin_2000();
		test_plugin_2001();
		test_plugin_2002();
		test_plugin_2003();
		test_plugin_2004();
		test_plugin_2005();
		test_plugin_2006();
		test_plugin_2007();
		test_plugin_2008();
		test_plugin_2009();
		test_plugin_2010();
		test_plugin_2011();
		test_plugin_2012();
		test_plugin_2013();
		test_plugin_2014();
		test_plugin_2015();
		test_plugin_2016();
		test_plugin_2017();
		test_plugin_2018();
		test_plugin_2019();
		test_plugin_2020();
		test_plugin_2021();
		test_plugin_2022();
		test_plugin_2023();
		test_plugin_2024();
		test_plugin_2025();
		test_plugin_2026();
		test_plugin_2027();
		test_plugin_2028();
		test_plugin_2029();
		test_plugin_2030();
		test_plugin_2031();
		test_plugin_2032();
		test_plugin_2033();
		test_plugin_2034();
		test_plugin_2035();
		test_plugin_2036();
		test_plugin_2037();
		test_plugin_2038();
		test_plugin_2039();
		test_plugin_2040();
		test_plugin_2041();
		test_plugin_2042();
		test_plugin_2043();
		test_plugin_2044();
		test_plugin_2045();
		test_plugin_2046();
		test_plugin_2047();
		test_plugin_2048();
		test_plugin_2049();
		test_plugin_2050();
		test_plugin_2051();
		test_plugin_2052();
		test_plugin_2053();
		test_plugin_2054();
		test_plugin_2055();
		test_plugin_2056();
		test_plugin_2057();
		test_plugin_2058();
		test_plugin_2059();
		test_plugin_2060();
		test_plugin_2061();
		test_plugin_2062();
		test_plugin_2063();
		test_plugin_2064();
		test_plugin_2065();
		test_plugin_2066();
		test_plugin_2067();
		test_plugin_2068();
		test_plugin_2069();
		test_plugin_2070();
		test_plugin_2071();
		test_plugin_2072();
		test_plugin_2073();
		test_plugin_2074();
		test_plugin_2075();
		test_plugin_2076();
		test_plugin_2077();
		test_plugin_2078();
		test_plugin_2079();
		test_plugin_2080();
		test_plugin_2081();
		test_plugin_2082();
		test_plugin_2083();
		test_plugin_2084();
		test_plugin_2085();
		test_plugin_2086();
		test_plugin_2087();
		test_plugin_2088();
		test_plugin_2089();
		test_plugin_2090();
		test_plugin_2091();
		test_plugin_2092();
		test_plugin_2093();
		test_plugin_2094();
		test_plugin_2095();
		test_plugin_2096();
		test_plugin_2097();
		test_plugin_2098();
		test_plugin_2099();
		test_plugin_2100();
		test_plugin_2101();
		test_plugin_2102();
		test_plugin_2103();
		test_plugin_2104();
		test_plugin_2105();
		test_plugin_2106();
		test_plugin_2107();
		test_plugin_2108();
		test_plugin_2109();
		test_plugin_2110();
		test_plugin_2111();
		test_plugin_2112();
		test_plugin_2113();
		test_plugin_2114();
		test_plugin_2115();
		test_plugin_2116();
		test_plugin_2117();
		test_plugin_2118();
		test_plugin_2119();
		test_plugin_2120();
		test_plugin_2121();
		test_plugin_2122();
		test_plugin_2123();
		test_plugin_2124();
		test_plugin_2125();
		test_plugin_2126();
		test_plugin_2127();
		test_plugin_2128();
		test_plugin_2129();
		test_plugin_2130();
		test_plugin_2131();
		test_plugin_2132();
		test_plugin_2133();
		test_plugin_2134();
		test_plugin_2135();
		test_plugin_2136();
		test_plugin_2137();
		test_plugin_2138();
		test_plugin_2139();
		test_plugin_2140();
		test_plugin_2141();
		test_plugin_2142();
		test_plugin_2143();
		test_plugin_2144();
		test_plugin_2145();
		test_plugin_2146();
		test_plugin_2147();
		test_plugin_2148();
		test_plugin_2149();
		test_plugin_2150();
		test_plugin_2151();
		test_plugin_2152();
		test_plugin_2153();
		test_plugin_2154();
		test_plugin_2155();
		test_plugin_2156();
		test_plugin_2157();
		test_plugin_2158();
		test_plugin_2159();
		test_plugin_2160();
		test_plugin_2161();
		test_plugin_2162();
		test_plugin_2163();
		test_plugin_2164();
		test_plugin_2165();
		test_plugin_2166();
		test_plugin_2167();
		test_plugin_2168();
		test_plugin_2169();
		test_plugin_2170();
		test_plugin_2171();
		test_plugin_2172();
		test_plugin_2173();
		test_plugin_2174();
		test_plugin_2175();
		test_plugin_2176();
		test_plugin_2177();
		test_plugin_2178();
		test_plugin_2179();
		test_plugin_2180();
		test_plugin_2181();
		test_plugin_2182();
		test_plugin_2183();
		test_plugin_2184();
		test_plugin_2185();
		test_plugin_2186();
		test_plugin_2187();
		test_plugin_2188();
		test_plugin_2189();
		test_plugin_2190();
		test_plugin_2191();
		test_plugin_2192();
		test_plugin_2193();
		test_plugin_2194();
		test_plugin_2195();
		test_plugin_2196();
		test_plugin_2197();
		test_plugin_2198();
		test_plugin_2199();
		test_plugin_2200();
		test_plugin_2201();
		test_plugin_2202();
		test_plugin_2203();
		test_plugin_2204();
		test_plugin_2205();
		test_plugin_2206();
		test_plugin_2207();
		test_plugin_2208();
		test_plugin_2209();
		test_plugin_2210();
		test_plugin_2211();
		test_plugin_2212();
		test_plugin_2213();
		test_plugin_2214();
		test_plugin_2215();
		test_plugin_2216();
		test_plugin_2217();
		test_plugin_2218();
		test_plugin_2219();
		test_plugin_2220();
		test_plugin_2221();
		test_plugin_2222();
		test_plugin_2223();
		test_plugin_2224();
		test_plugin_2225();
		test_plugin_2226();
		test_plugin_2227();
		test_plugin_2228();
		test_plugin_2229();
		test_plugin_2230();
		test_plugin_2231();
		test_plugin_2232();
		test_plugin_2233();
		test_plugin_2234();
		test_plugin_2235();
		test_plugin_2236();
		test_plugin_2237();
		test_plugin_2238();
		test_plugin_2239();
		test_plugin_2240();
		test_plugin_2241();
		test_plugin_2242();
		test_plugin_2243();
		test_plugin_2244();
		test_plugin_2245();
		test_plugin_2246();
		test_plugin_2247();
		test_plugin_2248();
		test_plugin_2249();
		test_plugin_2250();
		test_plugin_2251();
		test_plugin_2252();
		test_plugin_2253();
		test_plugin_2254();
		test_plugin_2255();
		test_plugin_2256();
		test_plugin_2257();
		test_plugin_2258();
		test_plugin_2259();
		test_plugin_2260();
		test_plugin_2261();
		test_plugin_2262();
		test_plugin_2263();
		test_plugin_2264();
		test_plugin_2265();
		test_plugin_2266();
		test_plugin_2267();
		test_plugin_2268();
		test_plugin_2269();
		test_plugin_2270();
		test_plugin_2271();
		test_plugin_2272();
		test_plugin_2273();
		test_plugin_2274();
		test_plugin_2275();
		test_plugin_2276();
		test_plugin_2277();
		test_plugin_2278();
		test_plugin_2279();
		test_plugin_2280();
		test_plugin_2281();
		test_plugin_2282();
		test_plugin_2283();
		test_plugin_2284();
		test_plugin_2285();
		test_plugin_2286();
		test_plugin_2287();
		test_plugin_2288();
		test_plugin_2289();
		test_plugin_2290();
		test_plugin_2291();
		test_plugin_2292();
		test_plugin_2293();
		test_plugin_2294();
		test_plugin_2295();
		test_plugin_2296();
		test_plugin_2297();
		test_plugin_2298();
		test_plugin_2299();
		test_plugin_2300();
		test_plugin_2301();
		test_plugin_2302();
		test_plugin_2303();
		test_plugin_2304();
		test_plugin_2305();
		test_plugin_2306();
		test_plugin_2307();
		test_plugin_2308();
		test_plugin_2309();
		test_plugin_2310();
		test_plugin_2311();
		test_plugin_2312();
		test_plugin_2313();
		test_plugin_2314();
		test_plugin_2315();
		test_plugin_2316();
		test_plugin_2317();
		test_plugin_2318();
		test_plugin_2319();
		test_plugin_2320();
		test_plugin_2321();
		test_plugin_2322();
		test_plugin_2323();
		test_plugin_2324();
		test_plugin_2325();
		test_plugin_2326();
		test_plugin_2327();
		test_plugin_2328();
		test_plugin_2329();
		test_plugin_2330();
		test_plugin_2331();
		test_plugin_2332();
		test_plugin_2333();
		test_plugin_2334();
		test_plugin_2335();
		test_plugin_2336();
		test_plugin_2337();
		test_plugin_2338();
		test_plugin_2339();
		test_plugin_2340();
		test_plugin_2341();
		test_plugin_2342();
		test_plugin_2343();
		test_plugin_2344();
		test_plugin_2345();
		test_plugin_2346();
		test_plugin_2347();
		test_plugin_2348();
		test_plugin_2349();
		test_plugin_2350();
		test_plugin_2351();
		test_plugin_2352();
		test_plugin_2353();
		test_plugin_2354();
		test_plugin_2355();
		test_plugin_2356();
		test_plugin_2357();
		test_plugin_2358();
		test_plugin_2359();
		test_plugin_2360();
		test_plugin_2361();
		test_plugin_2362();
		test_plugin_2363();
		test_plugin_2364();
		test_plugin_2365();
		test_plugin_2366();
		test_plugin_2367();
		test_plugin_2368();
		test_plugin_2369();
		test_plugin_2370();
		test_plugin_2371();
		test_plugin_2372();
		test_plugin_2373();
		test_plugin_2374();
		test_plugin_2375();
		test_plugin_2376();
		test_plugin_2377();
		test_plugin_2378();
		test_plugin_2379();
		test_plugin_2380();
		test_plugin_2381();
		test_plugin_2382();
		test_plugin_2383();
		test_plugin_2384();
		test_plugin_2385();
		test_plugin_2386();
		test_plugin_2387();
		test_plugin_2388();
		test_plugin_2389();
		test_plugin_2390();
		test_plugin_2391();
		test_plugin_2392();
		test_plugin_2393();
		test_plugin_2394();
		test_plugin_2395();
		test_plugin_2396();
		test_plugin_2397();
		test_plugin_2398();
		test_plugin_2399();
		test_plugin_2400();
		test_plugin_2401();
		test_plugin_2402();
		test_plugin_2403();
		test_plugin_2404();
		test_plugin_2405();
		test_plugin_2406();
		test_plugin_2407();
		test_plugin_2408();
		test_plugin_2409();
		test_plugin_2410();
		test_plugin_2411();
		test_plugin_2412();
		test_plugin_2413();
		test_plugin_2414();
		test_plugin_2415();
		test_plugin_2416();
		test_plugin_2417();
		test_plugin_2418();
		test_plugin_2419();
		test_plugin_2420();
		test_plugin_2421();
		test_plugin_2422();
		test_plugin_2423();
		test_plugin_2424();
		test_plugin_2425();
		test_plugin_2426();
		test_plugin_2427();
		test_plugin_2428();
		test_plugin_2429();
		test_plugin_2430();
		test_plugin_2431();
		test_plugin_2432();
		test_plugin_2433();
		test_plugin_2434();
		test_plugin_2435();
		test_plugin_2436();
		test_plugin_2437();
		test_plugin_2438();
		test_plugin_2439();
		test_plugin_2440();
		test_plugin_2441();
		test_plugin_2442();
		test_plugin_2443();
		test_plugin_2444();
		test_plugin_2445();
		test_plugin_2446();
		test_plugin_2447();
		test_plugin_2448();
		test_plugin_2449();
		test_plugin_2450();
		test_plugin_2451();
		test_plugin_2452();
		test_plugin_2453();
		test_plugin_2454();
		test_plugin_2455();
		test_plugin_2456();
		test_plugin_2457();
		test_plugin_2458();
		test_plugin_2459();
		test_plugin_2460();
		test_plugin_2461();
		test_plugin_2462();
		test_plugin_2463();
		test_plugin_2464();
		test_plugin_2465();
		test_plugin_2466();
		test_plugin_2467();
		test_plugin_2468();
		test_plugin_2469();
		test_plugin_2470();
		test_plugin_2471();
		test_plugin_2472();
		test_plugin_2473();
		test_plugin_2474();
		test_plugin_2475();
		test_plugin_2476();
		test_plugin_2477();
		test_plugin_2478();
		test_plugin_2479();
		test_plugin_2480();
		test_plugin_2481();
		test_plugin_2482();
		test_plugin_2483();
		test_plugin_2484();
		test_plugin_2485();
		test_plugin_2486();
		test_plugin_2487();
		test_plugin_2488();
		test_plugin_2489();
		test_plugin_2490();
		test_plugin_2491();
		test_plugin_2492();
		test_plugin_2493();
		test_plugin_2494();
		test_plugin_2495();
		test_plugin_2496();
		test_plugin_2497();
		test_plugin_2498();
		test_plugin_2499();
		test_plugin_2500();
		test_plugin_2501();
		test_plugin_2502();
		test_plugin_2503();
		test_plugin_2504();
		test_plugin_2505();
		test_plugin_2506();
		test_plugin_2507();
		test_plugin_2508();
		test_plugin_2509();
		test_plugin_2510();
		test_plugin_2511();
		test_plugin_2512();
		test_plugin_2513();
		test_plugin_2514();
		test_plugin_2515();
		test_plugin_2516();
		test_plugin_2517();
		test_plugin_2518();
		test_plugin_2519();
		test_plugin_2520();
		test_plugin_2521();
		test_plugin_2522();
		test_plugin_2523();
		test_plugin_2524();
		test_plugin_2525();
		test_plugin_2526();
		test_plugin_2527();
		test_plugin_2528();
		test_plugin_2529();
		test_plugin_2530();
		test_plugin_2531();
		test_plugin_2532();
		test_plugin_2533();
		test_plugin_2534();
		test_plugin_2535();
		test_plugin_2536();
		test_plugin_2537();
		test_plugin_2538();
		test_plugin_2539();
		test_plugin_2540();
		test_plugin_2541();
		test_plugin_2542();
		test_plugin_2543();
		test_plugin_2544();
		test_plugin_2545();
		test_plugin_2546();
		test_plugin_2547();
		test_plugin_2548();
		test_plugin_2549();
		test_plugin_2550();
		test_plugin_2551();
		test_plugin_2552();
		test_plugin_2553();
		test_plugin_2554();
		test_plugin_2555();
		test_plugin_2556();
		test_plugin_2557();
		test_plugin_2558();
		test_plugin_2559();
		test_plugin_2560();
		test_plugin_2561();
		test_plugin_2562();
		test_plugin_2563();
		test_plugin_2564();
		test_plugin_2565();
		test_plugin_2566();
		test_plugin_2567();
		test_plugin_2568();
		test_plugin_2569();
		test_plugin_2570();
		test_plugin_2571();
		test_plugin_2572();
		test_plugin_2573();
		test_plugin_2574();
		test_plugin_2575();
		test_plugin_2576();
		test_plugin_2577();
		test_plugin_2578();
		test_plugin_2579();
		test_plugin_2580();
		test_plugin_2581();
		test_plugin_2582();
		test_plugin_2583();
		test_plugin_2584();
		test_plugin_2585();
		test_plugin_2586();
		test_plugin_2587();
		test_plugin_2588();
		test_plugin_2589();
		test_plugin_2590();
		test_plugin_2591();
		test_plugin_2592();
		test_plugin_2593();
		test_plugin_2594();
		test_plugin_2595();
		test_plugin_2596();
		test_plugin_2597();
		test_plugin_2598();
		test_plugin_2599();
		test_plugin_2600();
		test_plugin_2601();
		test_plugin_2602();
		test_plugin_2603();
		test_plugin_2604();
		test_plugin_2605();
		test_plugin_2606();
		test_plugin_2607();
		test_plugin_2608();
		test_plugin_2609();
		test_plugin_2610();
		test_plugin_2611();
		test_plugin_2612();
		test_plugin_2613();
		test_plugin_2614();
		test_plugin_2615();
		test_plugin_2616();
		test_plugin_2617();
		test_plugin_2618();
		test_plugin_2619();
		test_plugin_2620();
		test_plugin_2621();
		test_plugin_2622();
		test_plugin_2623();
		test_plugin_2624();
		test_plugin_2625();
		test_plugin_2626();
		test_plugin_2627();
		test_plugin_2628();
		test_plugin_2629();
		test_plugin_2630();
		test_plugin_2631();
		test_plugin_2632();
		test_plugin_2633();
		test_plugin_2634();
		test_plugin_2635();
		test_plugin_2636();
		test_plugin_2637();
		test_plugin_2638();
		test_plugin_2639();
		test_plugin_2640();
		test_plugin_2641();
		test_plugin_2642();
		test_plugin_2643();
		test_plugin_2644();
		test_plugin_2645();
		test_plugin_2646();
		test_plugin_2647();
		test_plugin_2648();
		test_plugin_2649();
		test_plugin_2650();
		test_plugin_2651();
		test_plugin_2652();
		test_plugin_2653();
		test_plugin_2654();
		test_plugin_2655();
		test_plugin_2656();
		test_plugin_2657();
		test_plugin_2658();
		test_plugin_2659();
		test_plugin_2660();
		test_plugin_2661();
		test_plugin_2662();
		test_plugin_2663();
		test_plugin_2664();
		test_plugin_2665();
		test_plugin_2666();
		test_plugin_2667();
		test_plugin_2668();
		test_plugin_2669();
		test_plugin_2670();
		test_plugin_2671();
		test_plugin_2672();
		test_plugin_2673();
		test_plugin_2674();
		test_plugin_2675();
		test_plugin_2676();
		test_plugin_2677();
		test_plugin_2678();
		test_plugin_2679();
		test_plugin_2680();
		test_plugin_2681();
		test_plugin_2682();
		test_plugin_2683();
		test_plugin_2684();
		test_plugin_2685();
		test_plugin_2686();
		test_plugin_2687();
		test_plugin_2688();
		test_plugin_2689();
		test_plugin_2690();
		test_plugin_2691();
		test_plugin_2692();
		test_plugin_2693();
		test_plugin_2694();
		test_plugin_2695();
		test_plugin_2696();
		test_plugin_2697();
		test_plugin_2698();
		test_plugin_2699();
		test_plugin_2700();
		test_plugin_2701();
		test_plugin_2702();
		test_plugin_2703();
		test_plugin_2704();
		test_plugin_2705();
		test_plugin_2706();
		test_plugin_2707();
		test_plugin_2708();
		test_plugin_2709();
		test_plugin_2710();
		test_plugin_2711();
		test_plugin_2712();
		test_plugin_2713();
		test_plugin_2714();
		test_plugin_2715();
		test_plugin_2716();
		test_plugin_2717();
		test_plugin_2718();
		test_plugin_2719();
		test_plugin_2720();
		test_plugin_2721();
		test_plugin_2722();
		test_plugin_2723();
		test_plugin_2724();
		test_plugin_2725();
		test_plugin_2726();
		test_plugin_2727();
		test_plugin_2728();
		test_plugin_2729();
		test_plugin_2730();
		test_plugin_2731();
		test_plugin_2732();
		test_plugin_2733();
		test_plugin_2734();
		test_plugin_2735();
		test_plugin_2736();
		test_plugin_2737();
		test_plugin_2738();
		test_plugin_2739();
		test_plugin_2740();
		test_plugin_2741();
		test_plugin_2742();
		test_plugin_2743();
		test_plugin_2744();
		test_plugin_2745();
		test_plugin_2746();
		test_plugin_2747();
		test_plugin_2748();
		test_plugin_2749();
		test_plugin_2750();
		test_plugin_2751();
		test_plugin_2752();
		test_plugin_2753();
		test_plugin_2754();
		test_plugin_2755();
		test_plugin_2756();
		test_plugin_2757();
		test_plugin_2758();
		test_plugin_2759();
		test_plugin_2760();
		test_plugin_2761();
		test_plugin_2762();
		test_plugin_2763();
		test_plugin_2764();
		test_plugin_2765();
		test_plugin_2766();
		test_plugin_2767();
		test_plugin_2768();
		test_plugin_2769();
		test_plugin_2770();
		test_plugin_2771();
		test_plugin_2772();
		test_plugin_2773();
		test_plugin_2774();
		test_plugin_2775();
		test_plugin_2776();
		test_plugin_2777();
		test_plugin_2778();
		test_plugin_2779();
		test_plugin_2780();
		test_plugin_2781();
		test_plugin_2782();
		test_plugin_2783();
		test_plugin_2784();
		test_plugin_2785();
		test_plugin_2786();
		test_plugin_2787();
		test_plugin_2788();
		test_plugin_2789();
		test_plugin_2790();
		test_plugin_2791();
		test_plugin_2792();
		test_plugin_2793();
		test_plugin_2794();
		test_plugin_2795();
		test_plugin_2796();
		test_plugin_2797();
		test_plugin_2798();
		test_plugin_2799();
		test_plugin_2800();
		test_plugin_2801();
		test_plugin_2802();
		test_plugin_2803();
		test_plugin_2804();
		test_plugin_2805();
		test_plugin_2806();
		test_plugin_2807();
		test_plugin_2808();
		test_plugin_2809();
		test_plugin_2810();
		test_plugin_2811();
		test_plugin_2812();
		test_plugin_2813();
		test_plugin_2814();
		test_plugin_2815();
		test_plugin_2816();
		test_plugin_2817();
		test_plugin_2818();
		test_plugin_2819();
		test_plugin_2820();
		test_plugin_2821();
		test_plugin_2822();
		test_plugin_2823();
		test_plugin_2824();
		test_plugin_2825();
		test_plugin_2826();
		test_plugin_2827();
		test_plugin_2828();
		test_plugin_2829();
		test_plugin_2830();
		test_plugin_2831();
		test_plugin_2832();
		test_plugin_2833();
		test_plugin_2834();
		test_plugin_2835();
		test_plugin_2836();
		test_plugin_2837();
		test_plugin_2838();
		test_plugin_2839();
		test_plugin_2840();
		test_plugin_2841();
		test_plugin_2842();
		test_plugin_2843();
		test_plugin_2844();
		test_plugin_2845();
		test_plugin_2846();
		test_plugin_2847();
		test_plugin_2848();
		test_plugin_2849();
		test_plugin_2850();
		test_plugin_2851();
		test_plugin_2852();
		test_plugin_2853();
		test_plugin_2854();
		test_plugin_2855();
		test_plugin_2856();
		test_plugin_2857();
		test_plugin_2858();
		test_plugin_2859();
		test_plugin_2860();
		test_plugin_2861();
		test_plugin_2862();
		test_plugin_2863();
		test_plugin_2864();
		test_plugin_2865();
		test_plugin_2866();
		test_plugin_2867();
		test_plugin_2868();
		test_plugin_2869();
		test_plugin_2870();
		test_plugin_2871();
		test_plugin_2872();
		test_plugin_2873();
		test_plugin_2874();
		test_plugin_2875();
		test_plugin_2876();
		test_plugin_2877();
		test_plugin_2878();
		test_plugin_2879();
		test_plugin_2880();
		test_plugin_2881();
		test_plugin_2882();
		test_plugin_2883();
		test_plugin_2884();
		test_plugin_2885();
		test_plugin_2886();
		test_plugin_2887();
		test_plugin_2888();
		test_plugin_2889();
		test_plugin_2890();
		test_plugin_2891();
		test_plugin_2892();
		test_plugin_2893();
		test_plugin_2894();
		test_plugin_2895();
		test_plugin_2896();
		test_plugin_2897();
		test_plugin_2898();
		test_plugin_2899();
		test_plugin_2900();
		test_plugin_2901();
		test_plugin_2902();
		test_plugin_2903();
		test_plugin_2904();
		test_plugin_2905();
		test_plugin_2906();
		test_plugin_2907();
		test_plugin_2908();
		test_plugin_2909();
		test_plugin_2910();
		test_plugin_2911();
		test_plugin_2912();
		test_plugin_2913();
		test_plugin_2914();
		test_plugin_2915();
		test_plugin_2916();
		test_plugin_2917();
		test_plugin_2918();
		test_plugin_2919();
		test_plugin_2920();
		test_plugin_2921();
		test_plugin_2922();
		test_plugin_2923();
		test_plugin_2924();
		test_plugin_2925();
		test_plugin_2926();
		test_plugin_2927();
		test_plugin_2928();
		test_plugin_2929();
		test_plugin_2930();
		test_plugin_2931();
		test_plugin_2932();
		test_plugin_2933();
		test_plugin_2934();
		test_plugin_2935();
		test_plugin_2936();
		test_plugin_2937();
		test_plugin_2938();
		test_plugin_2939();
		test_plugin_2940();
		test_plugin_2941();
		test_plugin_2942();
		test_plugin_2943();
		test_plugin_2944();
		test_plugin_2945();
		test_plugin_2946();
		test_plugin_2947();
		test_plugin_2948();
		test_plugin_2949();
		test_plugin_2950();
		test_plugin_2951();
		test_plugin_2952();
		test_plugin_2953();
		test_plugin_2954();
		test_plugin_2955();
		test_plugin_2956();
		test_plugin_2957();
		test_plugin_2958();
		test_plugin_2959();
		test_plugin_2960();
		test_plugin_2961();
		test_plugin_2962();
		test_plugin_2963();
		test_plugin_2964();
		test_plugin_2965();
		test_plugin_2966();
		test_plugin_2967();
		test_plugin_2968();
		test_plugin_2969();
		test_plugin_2970();
		test_plugin_2971();
		test_plugin_2972();
		test_plugin_2973();
		test_plugin_2974();
		test_plugin_2975();
		test_plugin_2976();
		test_plugin_2977();
		test_plugin_2978();
		test_plugin_2979();
		test_plugin_2980();
		test_plugin_2981();
		test_plugin_2982();
		test_plugin_2983();
		test_plugin_2984();
		test_plugin_2985();
		test_plugin_2986();
		test_plugin_2987();
		test_plugin_2988();
		test_plugin_2989();
		test_plugin_2990();
		test_plugin_2991();
		test_plugin_2992();
		test_plugin_2993();
		test_plugin_2994();
		test_plugin_2995();
		test_plugin_2996();
		test_plugin_2997();
		test_plugin_2998();
		test_plugin_2999();
		test_plugin_3000();
		test_plugin_3001();
		test_plugin_3002();
		test_plugin_3003();
		test_plugin_3004();
		test_plugin_3005();
		test_plugin_3006();
		test_plugin_3007();
		test_plugin_3008();
		test_plugin_3009();
		test_plugin_3010();
		test_plugin_3011();
		test_plugin_3012();
		test_plugin_3013();
		test_plugin_3014();
		test_plugin_3015();
		test_plugin_3016();
		test_plugin_3017();
		test_plugin_3018();
		test_plugin_3019();
		test_plugin_3020();
		test_plugin_3021();
		test_plugin_3022();
		test_plugin_3023();
		test_plugin_3024();
		test_plugin_3025();
		test_plugin_3026();
		test_plugin_3027();
		test_plugin_3028();
		test_plugin_3029();
		test_plugin_3030();
		test_plugin_3031();
		test_plugin_3032();
		test_plugin_3033();
		test_plugin_3034();
		test_plugin_3035();
		test_plugin_3036();
		test_plugin_3037();
		test_plugin_3038();
		test_plugin_3039();
		test_plugin_3040();
		test_plugin_3041();
		test_plugin_3042();
		test_plugin_3043();
		test_plugin_3044();
		test_plugin_3045();
		test_plugin_3046();
		test_plugin_3047();
		test_plugin_3048();
		test_plugin_3049();
		test_plugin_3050();
		test_plugin_3051();
		test_plugin_3052();
		test_plugin_3053();
		test_plugin_3054();
		test_plugin_3055();
		test_plugin_3056();
		test_plugin_3057();
		test_plugin_3058();
		test_plugin_3059();
		test_plugin_3060();
		test_plugin_3061();
		test_plugin_3062();
		test_plugin_3063();
		test_plugin_3064();
		test_plugin_3065();
		test_plugin_3066();
		test_plugin_3067();
		test_plugin_3068();
		test_plugin_3069();
		test_plugin_3070();
		test_plugin_3071();
		test_plugin_3072();
		test_plugin_3073();
		test_plugin_3074();
		test_plugin_3075();
		test_plugin_3076();
		test_plugin_3077();
		test_plugin_3078();
		test_plugin_3079();
		test_plugin_3080();
		test_plugin_3081();
		test_plugin_3082();
		test_plugin_3083();
		test_plugin_3084();
		test_plugin_3085();
		test_plugin_3086();
		test_plugin_3087();
		test_plugin_3088();
		test_plugin_3089();
		test_plugin_3090();
		test_plugin_3091();
		test_plugin_3092();
		test_plugin_3093();
		test_plugin_3094();
		test_plugin_3095();
		test_plugin_3096();
		test_plugin_3097();
		test_plugin_3098();
		test_plugin_3099();
		test_plugin_3100();
		test_plugin_3101();
		test_plugin_3102();
		test_plugin_3103();
		test_plugin_3104();
		test_plugin_3105();
		test_plugin_3106();
		test_plugin_3107();
		test_plugin_3108();
		test_plugin_3109();
		test_plugin_3110();
		test_plugin_3111();
		test_plugin_3112();
		test_plugin_3113();
		test_plugin_3114();
		test_plugin_3115();
		test_plugin_3116();
		test_plugin_3117();
		test_plugin_3118();
		test_plugin_3119();
		test_plugin_3120();
		test_plugin_3121();
		test_plugin_3122();
		test_plugin_3123();
		test_plugin_3124();
		test_plugin_3125();
		test_plugin_3126();
		test_plugin_3127();
		test_plugin_3128();
		test_plugin_3129();
		test_plugin_3130();
		test_plugin_3131();
		test_plugin_3132();
		test_plugin_3133();
		test_plugin_3134();
		test_plugin_3135();
		test_plugin_3136();
		test_plugin_3137();
		test_plugin_3138();
		test_plugin_3139();
		test_plugin_3140();
		test_plugin_3141();
		test_plugin_3142();
		test_plugin_3143();
		test_plugin_3144();
		test_plugin_3145();
		test_plugin_3146();
		test_plugin_3147();
		test_plugin_3148();
		test_plugin_3149();
		test_plugin_3150();
		test_plugin_3151();
		test_plugin_3152();
		test_plugin_3153();
		test_plugin_3154();
		test_plugin_3155();
		test_plugin_3156();
		test_plugin_3157();
		test_plugin_3158();
		test_plugin_3159();
		test_plugin_3160();
		test_plugin_3161();
		test_plugin_3162();
		test_plugin_3163();
		test_plugin_3164();
		test_plugin_3165();
		test_plugin_3166();
		test_plugin_3167();
		test_plugin_3168();
		test_plugin_3169();
		test_plugin_3170();
		test_plugin_3171();
		test_plugin_3172();
		test_plugin_3173();
		test_plugin_3174();
		test_plugin_3175();
		test_plugin_3176();
		test_plugin_3177();
		test_plugin_3178();
		test_plugin_3179();
		test_plugin_3180();
		test_plugin_3181();
		test_plugin_3182();
		test_plugin_3183();
		test_plugin_3184();
		test_plugin_3185();
		test_plugin_3186();
		test_plugin_3187();
		test_plugin_3188();
		test_plugin_3189();
		test_plugin_3190();
		test_plugin_3191();
		test_plugin_3192();
		test_plugin_3193();
		test_plugin_3194();
		test_plugin_3195();
		test_plugin_3196();
		test_plugin_3197();
		test_plugin_3198();
		test_plugin_3199();
		test_plugin_3200();
		test_plugin_3201();
		test_plugin_3202();
		test_plugin_3203();
		test_plugin_3204();
		test_plugin_3205();
		test_plugin_3206();
		test_plugin_3207();
		test_plugin_3208();
		test_plugin_3209();
		test_plugin_3210();
		test_plugin_3211();
		test_plugin_3212();
		test_plugin_3213();
		test_plugin_3214();
		test_plugin_3215();
		test_plugin_3216();
		test_plugin_3217();
		test_plugin_3218();
		test_plugin_3219();
		test_plugin_3220();
		test_plugin_3221();
		test_plugin_3222();
		test_plugin_3223();
		test_plugin_3224();
		test_plugin_3225();
		test_plugin_3226();
		test_plugin_3227();
		test_plugin_3228();
		test_plugin_3229();
		test_plugin_3230();
		test_plugin_3231();
		test_plugin_3232();
		test_plugin_3233();
		test_plugin_3234();
		test_plugin_3235();
		test_plugin_3236();
		test_plugin_3237();
		test_plugin_3238();
		test_plugin_3239();
		test_plugin_3240();
		test_plugin_3241();
		test_plugin_3242();
		test_plugin_3243();
		test_plugin_3244();
		test_plugin_3245();
		test_plugin_3246();
		test_plugin_3247();
		test_plugin_3248();
		test_plugin_3249();
		test_plugin_3250();
		test_plugin_3251();
		test_plugin_3252();
		test_plugin_3253();
		test_plugin_3254();
		test_plugin_3255();
		test_plugin_3256();
		test_plugin_3257();
		test_plugin_3258();
		test_plugin_3259();
		test_plugin_3260();
		test_plugin_3261();
		test_plugin_3262();
		test_plugin_3263();
		test_plugin_3264();
		test_plugin_3265();
		test_plugin_3266();
		test_plugin_3267();
		test_plugin_3268();
		test_plugin_3269();
		test_plugin_3270();
		test_plugin_3271();
		test_plugin_3272();
		test_plugin_3273();
		test_plugin_3274();
		test_plugin_3275();
		test_plugin_3276();
		test_plugin_3277();
		test_plugin_3278();
		test_plugin_3279();
		test_plugin_3280();
		test_plugin_3281();
		test_plugin_3282();
		test_plugin_3283();
		test_plugin_3284();
		test_plugin_3285();
		test_plugin_3286();
		test_plugin_3287();
		test_plugin_3288();
		test_plugin_3289();
		test_plugin_3290();
		test_plugin_3291();
		test_plugin_3292();
		test_plugin_3293();
		test_plugin_3294();
		test_plugin_3295();
		test_plugin_3296();
		test_plugin_3297();
		test_plugin_3298();
		test_plugin_3299();
		test_plugin_3300();
		test_plugin_3301();
		test_plugin_3302();
		test_plugin_3303();
		test_plugin_3304();
		test_plugin_3305();
		test_plugin_3306();
		test_plugin_3307();
		test_plugin_3308();
		test_plugin_3309();
		test_plugin_3310();
		test_plugin_3311();
		test_plugin_3312();
		test_plugin_3313();
		test_plugin_3314();
		test_plugin_3315();
		test_plugin_3316();
		test_plugin_3317();
		test_plugin_3318();
		test_plugin_3319();
		test_plugin_3320();
		test_plugin_3321();
		test_plugin_3322();
		test_plugin_3323();
		test_plugin_3324();
		test_plugin_3325();
		test_plugin_3326();
		test_plugin_3327();
		test_plugin_3328();
		test_plugin_3329();
		test_plugin_3330();
		test_plugin_3331();
		test_plugin_3332();
		test_plugin_3333();
		test_plugin_3334();
		test_plugin_3335();
		test_plugin_3336();
		test_plugin_3337();
		test_plugin_3338();
		test_plugin_3339();
		test_plugin_3340();
		test_plugin_3341();
		test_plugin_3342();
		test_plugin_3343();
		test_plugin_3344();
		test_plugin_3345();
		test_plugin_3346();
		test_plugin_3347();
		test_plugin_3348();
		test_plugin_3349();
		test_plugin_3350();
		test_plugin_3351();
		test_plugin_3352();
		test_plugin_3353();
		test_plugin_3354();
		test_plugin_3355();
		test_plugin_3356();
		test_plugin_3357();
		test_plugin_3358();
		test_plugin_3359();
		test_plugin_3360();
		test_plugin_3361();
		test_plugin_3362();
		test_plugin_3363();
		test_plugin_3364();
		test_plugin_3365();
		test_plugin_3366();
		test_plugin_3367();
		test_plugin_3368();
		test_plugin_3369();
		test_plugin_3370();
		test_plugin_3371();
		test_plugin_3372();
		test_plugin_3373();
		test_plugin_3374();
		test_plugin_3375();
		test_plugin_3376();
		test_plugin_3377();
		test_plugin_3378();
		test_plugin_3379();
		test_plugin_3380();
		test_plugin_3381();
		test_plugin_3382();
		test_plugin_3383();
		test_plugin_3384();
		test_plugin_3385();
		test_plugin_3386();
		test_plugin_3387();
		test_plugin_3388();
		test_plugin_3389();
		test_plugin_3390();
		test_plugin_3391();
		test_plugin_3392();
		test_plugin_3393();
		test_plugin_3394();
		test_plugin_3395();
		test_plugin_3396();
		test_plugin_3397();
		test_plugin_3398();
		test_plugin_3399();
		test_plugin_3400();
		test_plugin_3401();
		test_plugin_3402();
		test_plugin_3403();
		test_plugin_3404();
		test_plugin_3405();
		test_plugin_3406();
		test_plugin_3407();
		test_plugin_3408();
		test_plugin_3409();
		test_plugin_3410();
		test_plugin_3411();
		test_plugin_3412();
		test_plugin_3413();
		test_plugin_3414();
		test_plugin_3415();
		test_plugin_3416();
		test_plugin_3417();
		test_plugin_3418();
		test_plugin_3419();
		test_plugin_3420();
		test_plugin_3421();
		test_plugin_3422();
		test_plugin_3423();
		test_plugin_3424();
		test_plugin_3425();
		test_plugin_3426();
		test_plugin_3427();
		test_plugin_3428();
		test_plugin_3429();
		test_plugin_3430();
		test_plugin_3431();
		test_plugin_3432();
		test_plugin_3433();
		test_plugin_3434();
		test_plugin_3435();
		test_plugin_3436();
		test_plugin_3437();
		test_plugin_3438();
		test_plugin_3439();
		test_plugin_3440();
		test_plugin_3441();
		test_plugin_3442();
		test_plugin_3443();
		test_plugin_3444();
		test_plugin_3445();
		test_plugin_3446();
		test_plugin_3447();
		test_plugin_3448();
		test_plugin_3449();
		test_plugin_3450();
		test_plugin_3451();
		test_plugin_3452();
		test_plugin_3453();
		test_plugin_3454();
		test_plugin_3455();
		test_plugin_3456();
		test_plugin_3457();
		test_plugin_3458();
		test_plugin_3459();
		test_plugin_3460();
		test_plugin_3461();
		test_plugin_3462();
		test_plugin_3463();
		test_plugin_3464();
		test_plugin_3465();
		test_plugin_3466();
		test_plugin_3467();
		test_plugin_3468();
		test_plugin_3469();
		test_plugin_3470();
		test_plugin_3471();
		test_plugin_3472();
		test_plugin_3473();
		test_plugin_3474();
		test_plugin_3475();
		test_plugin_3476();
		test_plugin_3477();
		test_plugin_3478();
		test_plugin_3479();
		test_plugin_3480();
		test_plugin_3481();
		test_plugin_3482();
		test_plugin_3483();
		test_plugin_3484();
		test_plugin_3485();
		test_plugin_3486();
		test_plugin_3487();
		test_plugin_3488();
		test_plugin_3489();
		test_plugin_3490();
		test_plugin_3491();
		test_plugin_3492();
		test_plugin_3493();
		test_plugin_3494();
		test_plugin_3495();
		test_plugin_3496();
		test_plugin_3497();
		test_plugin_3498();
		test_plugin_3499();
		test_plugin_3500();
		test_plugin_3501();
		test_plugin_3502();
		test_plugin_3503();
		test_plugin_3504();
		test_plugin_3505();
		test_plugin_3506();
		test_plugin_3507();
		test_plugin_3508();
		test_plugin_3509();
		test_plugin_3510();
		test_plugin_3511();
		test_plugin_3512();
		test_plugin_3513();
		test_plugin_3514();
		test_plugin_3515();
		test_plugin_3516();
		test_plugin_3517();
		test_plugin_3518();
		test_plugin_3519();
		test_plugin_3520();
		test_plugin_3521();
		test_plugin_3522();
		test_plugin_3523();
		test_plugin_3524();
		test_plugin_3525();
		test_plugin_3526();
		test_plugin_3527();
		test_plugin_3528();
		test_plugin_3529();
		test_plugin_3530();
		test_plugin_3531();
		test_plugin_3532();
		test_plugin_3533();
		test_plugin_3534();
		test_plugin_3535();
		test_plugin_3536();
		test_plugin_3537();
		test_plugin_3538();
		test_plugin_3539();
		test_plugin_3540();
		test_plugin_3541();
		test_plugin_3542();
		test_plugin_3543();
		test_plugin_3544();
		test_plugin_3545();
		test_plugin_3546();
		test_plugin_3547();
		test_plugin_3548();
		test_plugin_3549();
		test_plugin_3550();
		test_plugin_3551();
		test_plugin_3552();
		test_plugin_3553();
		test_plugin_3554();
		test_plugin_3555();
		test_plugin_3556();
		test_plugin_3557();
		test_plugin_3558();
		test_plugin_3559();
		test_plugin_3560();
		test_plugin_3561();
		test_plugin_3562();
		test_plugin_3563();
		test_plugin_3564();
		test_plugin_3565();
		test_plugin_3566();
		test_plugin_3567();
		test_plugin_3568();
		test_plugin_3569();
		test_plugin_3570();
		test_plugin_3571();
		test_plugin_3572();
		test_plugin_3573();
		test_plugin_3574();
		test_plugin_3575();
		test_plugin_3576();
		test_plugin_3577();
		test_plugin_3578();
		test_plugin_3579();
		test_plugin_3580();
		test_plugin_3581();
		test_plugin_3582();
		test_plugin_3583();
		test_plugin_3584();
		test_plugin_3585();
		test_plugin_3586();
		test_plugin_3587();
		test_plugin_3588();
		test_plugin_3589();
		test_plugin_3590();
		test_plugin_3591();
		test_plugin_3592();
		test_plugin_3593();
		test_plugin_3594();
		test_plugin_3595();
		test_plugin_3596();
		test_plugin_3597();
		test_plugin_3598();
		test_plugin_3599();
		test_plugin_3600();
		test_plugin_3601();
		test_plugin_3602();
		test_plugin_3603();
		test_plugin_3604();
		test_plugin_3605();
		test_plugin_3606();
		test_plugin_3607();
		test_plugin_3608();
		test_plugin_3609();
		test_plugin_3610();
		test_plugin_3611();
		test_plugin_3612();
		test_plugin_3613();
		test_plugin_3614();
		test_plugin_3615();
		test_plugin_3616();
		test_plugin_3617();
		test_plugin_3618();
		test_plugin_3619();
		test_plugin_3620();
		test_plugin_3621();
		test_plugin_3622();
		test_plugin_3623();
		test_plugin_3624();
		test_plugin_3625();
		test_plugin_3626();
		test_plugin_3627();
		test_plugin_3628();
		test_plugin_3629();
		test_plugin_3630();
		test_plugin_3631();
		test_plugin_3632();
		test_plugin_3633();
		test_plugin_3634();
		test_plugin_3635();
		test_plugin_3636();
		test_plugin_3637();
		test_plugin_3638();
		test_plugin_3639();
		test_plugin_3640();
		test_plugin_3641();
		test_plugin_3642();
		test_plugin_3643();
		test_plugin_3644();
		test_plugin_3645();
		test_plugin_3646();
		test_plugin_3647();
		test_plugin_3648();
		test_plugin_3649();
		test_plugin_3650();
		test_plugin_3651();
		test_plugin_3652();
		test_plugin_3653();
		test_plugin_3654();
		test_plugin_3655();
		test_plugin_3656();
		test_plugin_3657();
		test_plugin_3658();
		test_plugin_3659();
		test_plugin_3660();
		test_plugin_3661();
		test_plugin_3662();
		test_plugin_3663();
		test_plugin_3664();
		test_plugin_3665();
		test_plugin_3666();
		test_plugin_3667();
		test_plugin_3668();
		test_plugin_3669();
		test_plugin_3670();
		test_plugin_3671();
		test_plugin_3672();
		test_plugin_3673();
		test_plugin_3674();
		test_plugin_3675();
		test_plugin_3676();
		test_plugin_3677();
		test_plugin_3678();
		test_plugin_3679();
		test_plugin_3680();
		test_plugin_3681();
		test_plugin_3682();
		test_plugin_3683();
		test_plugin_3684();
		test_plugin_3685();
		test_plugin_3686();
		test_plugin_3687();
		test_plugin_3688();
		test_plugin_3689();
		test_plugin_3690();
		test_plugin_3691();
		test_plugin_3692();
		test_plugin_3693();
		test_plugin_3694();
		test_plugin_3695();
		test_plugin_3696();
		test_plugin_3697();
		test_plugin_3698();
		test_plugin_3699();
		test_plugin_3700();
		test_plugin_3701();
		test_plugin_3702();
		test_plugin_3703();
		test_plugin_3704();
		test_plugin_3705();
		test_plugin_3706();
		test_plugin_3707();
		test_plugin_3708();
		test_plugin_3709();
		test_plugin_3710();
		test_plugin_3711();
		test_plugin_3712();
		test_plugin_3713();
		test_plugin_3714();
		test_plugin_3715();
		test_plugin_3716();
		test_plugin_3717();
		test_plugin_3718();
		test_plugin_3719();
		test_plugin_3720();
		test_plugin_3721();
		test_plugin_3722();
		test_plugin_3723();
		test_plugin_3724();
		test_plugin_3725();
		test_plugin_3726();
		test_plugin_3727();
		test_plugin_3728();
		test_plugin_3729();
		test_plugin_3730();
		test_plugin_3731();
		test_plugin_3732();
		test_plugin_3733();
		test_plugin_3734();
		test_plugin_3735();
		test_plugin_3736();
		test_plugin_3737();
		test_plugin_3738();
		test_plugin_3739();
		test_plugin_3740();
		test_plugin_3741();
		test_plugin_3742();
		test_plugin_3743();
		test_plugin_3744();
		test_plugin_3745();
		test_plugin_3746();
		test_plugin_3747();
		test_plugin_3748();
		test_plugin_3749();
		test_plugin_3750();
		test_plugin_3751();
		test_plugin_3752();
		test_plugin_3753();
		test_plugin_3754();
		test_plugin_3755();
		test_plugin_3756();
		test_plugin_3757();
		test_plugin_3758();
		test_plugin_3759();
		test_plugin_3760();
		test_plugin_3761();
		test_plugin_3762();
		test_plugin_3763();
		test_plugin_3764();
		test_plugin_3765();
		test_plugin_3766();
		test_plugin_3767();
		test_plugin_3768();
		test_plugin_3769();
		test_plugin_3770();
		test_plugin_3771();
		test_plugin_3772();
		test_plugin_3773();
		test_plugin_3774();
		test_plugin_3775();
		test_plugin_3776();
		test_plugin_3777();
		test_plugin_3778();
		test_plugin_3779();
		test_plugin_3780();
		test_plugin_3781();
		test_plugin_3782();
		test_plugin_3783();
		test_plugin_3784();
		test_plugin_3785();
		test_plugin_3786();
		test_plugin_3787();
		test_plugin_3788();
		test_plugin_3789();
		test_plugin_3790();
		test_plugin_3791();
		test_plugin_3792();
		test_plugin_3793();
		test_plugin_3794();
		test_plugin_3795();
		test_plugin_3796();
		test_plugin_3797();
		test_plugin_3798();
		test_plugin_3799();
		test_plugin_3800();
		test_plugin_3801();
		test_plugin_3802();
		test_plugin_3803();
		test_plugin_3804();
		test_plugin_3805();
		test_plugin_3806();
		test_plugin_3807();
		test_plugin_3808();
		test_plugin_3809();
		test_plugin_3810();
		test_plugin_3811();
		test_plugin_3812();
		test_plugin_3813();
		test_plugin_3814();
		test_plugin_3815();
		test_plugin_3816();
		test_plugin_3817();
		test_plugin_3818();
		test_plugin_3819();
		test_plugin_3820();
		test_plugin_3821();
		test_plugin_3822();
		test_plugin_3823();
		test_plugin_3824();
		test_plugin_3825();
		test_plugin_3826();
		test_plugin_3827();
		test_plugin_3828();
		test_plugin_3829();
		test_plugin_3830();
		test_plugin_3831();
		test_plugin_3832();
		test_plugin_3833();
		test_plugin_3834();
		test_plugin_3835();
		test_plugin_3836();
		test_plugin_3837();
		test_plugin_3838();
		test_plugin_3839();
		test_plugin_3840();
		test_plugin_3841();
		test_plugin_3842();
		test_plugin_3843();
		test_plugin_3844();
		test_plugin_3845();
		test_plugin_3846();
		test_plugin_3847();
		test_plugin_3848();
		test_plugin_3849();
		test_plugin_3850();
		test_plugin_3851();
		test_plugin_3852();
		test_plugin_3853();
		test_plugin_3854();
		test_plugin_3855();
		test_plugin_3856();
		test_plugin_3857();
		test_plugin_3858();
		test_plugin_3859();
		test_plugin_3860();
		test_plugin_3861();
		test_plugin_3862();
		test_plugin_3863();
		test_plugin_3864();
		test_plugin_3865();
		test_plugin_3866();
		test_plugin_3867();
		test_plugin_3868();
		test_plugin_3869();
		test_plugin_3870();
		test_plugin_3871();
		test_plugin_3872();
		test_plugin_3873();
		test_plugin_3874();
		test_plugin_3875();
		test_plugin_3876();
		test_plugin_3877();
		test_plugin_3878();
		test_plugin_3879();
		test_plugin_3880();
		test_plugin_3881();
		test_plugin_3882();
		test_plugin_3883();
		test_plugin_3884();
		test_plugin_3885();
		test_plugin_3886();
		test_plugin_3887();
		test_plugin_3888();
		test_plugin_3889();
		test_plugin_3890();
		test_plugin_3891();
		test_plugin_3892();
		test_plugin_3893();
		test_plugin_3894();
		test_plugin_3895();
		test_plugin_3896();
		test_plugin_3897();
		test_plugin_3898();
		test_plugin_3899();
		test_plugin_3900();
		test_plugin_3901();
		test_plugin_3902();
		test_plugin_3903();
		test_plugin_3904();
		test_plugin_3905();
		test_plugin_3906();
		test_plugin_3907();
		test_plugin_3908();
		test_plugin_3909();
		test_plugin_3910();
		test_plugin_3911();
		test_plugin_3912();
		test_plugin_3913();
		test_plugin_3914();
		test_plugin_3915();
		test_plugin_3916();
		test_plugin_3917();
		test_plugin_3918();
		test_plugin_3919();
		test_plugin_3920();
		test_plugin_3921();
		test_plugin_3922();
		test_plugin_3923();
		test_plugin_3924();
		test_plugin_3925();
		test_plugin_3926();
		test_plugin_3927();
		test_plugin_3928();
		test_plugin_3929();
		test_plugin_3930();
		test_plugin_3931();
		test_plugin_3932();
		test_plugin_3933();
		test_plugin_3934();
		test_plugin_3935();
		test_plugin_3936();
		test_plugin_3937();
		test_plugin_3938();
		test_plugin_3939();
		test_plugin_3940();
		test_plugin_3941();
		test_plugin_3942();
		test_plugin_3943();
		test_plugin_3944();
		test_plugin_3945();
		test_plugin_3946();
		test_plugin_3947();
		test_plugin_3948();
		test_plugin_3949();
		test_plugin_3950();
		test_plugin_3951();
		test_plugin_3952();
		test_plugin_3953();
		test_plugin_3954();
		test_plugin_3955();
		test_plugin_3956();
		test_plugin_3957();
		test_plugin_3958();
		test_plugin_3959();
		test_plugin_3960();
		test_plugin_3961();
		test_plugin_3962();
		test_plugin_3963();
		test_plugin_3964();
		test_plugin_3965();
		test_plugin_3966();
		test_plugin_3967();
		test_plugin_3968();
		test_plugin_3969();
		test_plugin_3970();
		test_plugin_3971();
		test_plugin_3972();
		test_plugin_3973();
		test_plugin_3974();
		test_plugin_3975();
		test_plugin_3976();
		test_plugin_3977();
		test_plugin_3978();
		test_plugin_3979();
		test_plugin_3980();
		test_plugin_3981();
		test_plugin_3982();
		test_plugin_3983();
		test_plugin_3984();
		test_plugin_3985();
		test_plugin_3986();
		test_plugin_3987();
		test_plugin_3988();
		test_plugin_3989();
		test_plugin_3990();
		test_plugin_3991();
		test_plugin_3992();
		test_plugin_3993();
		test_plugin_3994();
		test_plugin_3995();
		test_plugin_3996();
		test_plugin_3997();
		test_plugin_3998();
		test_plugin_3999();
		test_plugin_4000();
	}
}