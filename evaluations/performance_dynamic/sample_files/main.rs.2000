
unsafe fn test_plugin_1 () {
    println!("This is function 1");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2 () {
    println!("This is function 2");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_3 () {
    println!("This is function 3");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_4 () {
    println!("This is function 4");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_5 () {
    println!("This is function 5");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_6 () {
    println!("This is function 6");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_7 () {
    println!("This is function 7");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_8 () {
    println!("This is function 8");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_9 () {
    println!("This is function 9");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_10 () {
    println!("This is function 10");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_11 () {
    println!("This is function 11");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_12 () {
    println!("This is function 12");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_13 () {
    println!("This is function 13");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_14 () {
    println!("This is function 14");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_15 () {
    println!("This is function 15");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_16 () {
    println!("This is function 16");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_17 () {
    println!("This is function 17");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_18 () {
    println!("This is function 18");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_19 () {
    println!("This is function 19");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_20 () {
    println!("This is function 20");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_21 () {
    println!("This is function 21");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_22 () {
    println!("This is function 22");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_23 () {
    println!("This is function 23");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_24 () {
    println!("This is function 24");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_25 () {
    println!("This is function 25");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_26 () {
    println!("This is function 26");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_27 () {
    println!("This is function 27");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_28 () {
    println!("This is function 28");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_29 () {
    println!("This is function 29");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_30 () {
    println!("This is function 30");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_31 () {
    println!("This is function 31");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_32 () {
    println!("This is function 32");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_33 () {
    println!("This is function 33");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_34 () {
    println!("This is function 34");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_35 () {
    println!("This is function 35");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_36 () {
    println!("This is function 36");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_37 () {
    println!("This is function 37");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_38 () {
    println!("This is function 38");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_39 () {
    println!("This is function 39");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_40 () {
    println!("This is function 40");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_41 () {
    println!("This is function 41");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_42 () {
    println!("This is function 42");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_43 () {
    println!("This is function 43");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_44 () {
    println!("This is function 44");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_45 () {
    println!("This is function 45");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_46 () {
    println!("This is function 46");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_47 () {
    println!("This is function 47");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_48 () {
    println!("This is function 48");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_49 () {
    println!("This is function 49");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_50 () {
    println!("This is function 50");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_51 () {
    println!("This is function 51");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_52 () {
    println!("This is function 52");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_53 () {
    println!("This is function 53");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_54 () {
    println!("This is function 54");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_55 () {
    println!("This is function 55");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_56 () {
    println!("This is function 56");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_57 () {
    println!("This is function 57");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_58 () {
    println!("This is function 58");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_59 () {
    println!("This is function 59");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_60 () {
    println!("This is function 60");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_61 () {
    println!("This is function 61");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_62 () {
    println!("This is function 62");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_63 () {
    println!("This is function 63");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_64 () {
    println!("This is function 64");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_65 () {
    println!("This is function 65");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_66 () {
    println!("This is function 66");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_67 () {
    println!("This is function 67");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_68 () {
    println!("This is function 68");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_69 () {
    println!("This is function 69");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_70 () {
    println!("This is function 70");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_71 () {
    println!("This is function 71");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_72 () {
    println!("This is function 72");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_73 () {
    println!("This is function 73");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_74 () {
    println!("This is function 74");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_75 () {
    println!("This is function 75");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_76 () {
    println!("This is function 76");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_77 () {
    println!("This is function 77");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_78 () {
    println!("This is function 78");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_79 () {
    println!("This is function 79");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_80 () {
    println!("This is function 80");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_81 () {
    println!("This is function 81");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_82 () {
    println!("This is function 82");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_83 () {
    println!("This is function 83");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_84 () {
    println!("This is function 84");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_85 () {
    println!("This is function 85");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_86 () {
    println!("This is function 86");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_87 () {
    println!("This is function 87");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_88 () {
    println!("This is function 88");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_89 () {
    println!("This is function 89");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_90 () {
    println!("This is function 90");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_91 () {
    println!("This is function 91");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_92 () {
    println!("This is function 92");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_93 () {
    println!("This is function 93");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_94 () {
    println!("This is function 94");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_95 () {
    println!("This is function 95");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_96 () {
    println!("This is function 96");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_97 () {
    println!("This is function 97");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_98 () {
    println!("This is function 98");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_99 () {
    println!("This is function 99");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_100 () {
    println!("This is function 100");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_101 () {
    println!("This is function 101");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_102 () {
    println!("This is function 102");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_103 () {
    println!("This is function 103");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_104 () {
    println!("This is function 104");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_105 () {
    println!("This is function 105");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_106 () {
    println!("This is function 106");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_107 () {
    println!("This is function 107");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_108 () {
    println!("This is function 108");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_109 () {
    println!("This is function 109");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_110 () {
    println!("This is function 110");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_111 () {
    println!("This is function 111");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_112 () {
    println!("This is function 112");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_113 () {
    println!("This is function 113");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_114 () {
    println!("This is function 114");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_115 () {
    println!("This is function 115");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_116 () {
    println!("This is function 116");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_117 () {
    println!("This is function 117");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_118 () {
    println!("This is function 118");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_119 () {
    println!("This is function 119");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_120 () {
    println!("This is function 120");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_121 () {
    println!("This is function 121");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_122 () {
    println!("This is function 122");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_123 () {
    println!("This is function 123");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_124 () {
    println!("This is function 124");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_125 () {
    println!("This is function 125");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_126 () {
    println!("This is function 126");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_127 () {
    println!("This is function 127");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_128 () {
    println!("This is function 128");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_129 () {
    println!("This is function 129");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_130 () {
    println!("This is function 130");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_131 () {
    println!("This is function 131");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_132 () {
    println!("This is function 132");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_133 () {
    println!("This is function 133");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_134 () {
    println!("This is function 134");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_135 () {
    println!("This is function 135");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_136 () {
    println!("This is function 136");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_137 () {
    println!("This is function 137");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_138 () {
    println!("This is function 138");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_139 () {
    println!("This is function 139");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_140 () {
    println!("This is function 140");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_141 () {
    println!("This is function 141");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_142 () {
    println!("This is function 142");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_143 () {
    println!("This is function 143");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_144 () {
    println!("This is function 144");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_145 () {
    println!("This is function 145");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_146 () {
    println!("This is function 146");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_147 () {
    println!("This is function 147");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_148 () {
    println!("This is function 148");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_149 () {
    println!("This is function 149");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_150 () {
    println!("This is function 150");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_151 () {
    println!("This is function 151");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_152 () {
    println!("This is function 152");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_153 () {
    println!("This is function 153");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_154 () {
    println!("This is function 154");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_155 () {
    println!("This is function 155");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_156 () {
    println!("This is function 156");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_157 () {
    println!("This is function 157");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_158 () {
    println!("This is function 158");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_159 () {
    println!("This is function 159");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_160 () {
    println!("This is function 160");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_161 () {
    println!("This is function 161");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_162 () {
    println!("This is function 162");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_163 () {
    println!("This is function 163");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_164 () {
    println!("This is function 164");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_165 () {
    println!("This is function 165");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_166 () {
    println!("This is function 166");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_167 () {
    println!("This is function 167");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_168 () {
    println!("This is function 168");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_169 () {
    println!("This is function 169");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_170 () {
    println!("This is function 170");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_171 () {
    println!("This is function 171");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_172 () {
    println!("This is function 172");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_173 () {
    println!("This is function 173");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_174 () {
    println!("This is function 174");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_175 () {
    println!("This is function 175");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_176 () {
    println!("This is function 176");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_177 () {
    println!("This is function 177");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_178 () {
    println!("This is function 178");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_179 () {
    println!("This is function 179");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_180 () {
    println!("This is function 180");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_181 () {
    println!("This is function 181");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_182 () {
    println!("This is function 182");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_183 () {
    println!("This is function 183");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_184 () {
    println!("This is function 184");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_185 () {
    println!("This is function 185");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_186 () {
    println!("This is function 186");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_187 () {
    println!("This is function 187");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_188 () {
    println!("This is function 188");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_189 () {
    println!("This is function 189");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_190 () {
    println!("This is function 190");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_191 () {
    println!("This is function 191");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_192 () {
    println!("This is function 192");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_193 () {
    println!("This is function 193");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_194 () {
    println!("This is function 194");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_195 () {
    println!("This is function 195");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_196 () {
    println!("This is function 196");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_197 () {
    println!("This is function 197");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_198 () {
    println!("This is function 198");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_199 () {
    println!("This is function 199");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_200 () {
    println!("This is function 200");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_201 () {
    println!("This is function 201");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_202 () {
    println!("This is function 202");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_203 () {
    println!("This is function 203");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_204 () {
    println!("This is function 204");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_205 () {
    println!("This is function 205");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_206 () {
    println!("This is function 206");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_207 () {
    println!("This is function 207");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_208 () {
    println!("This is function 208");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_209 () {
    println!("This is function 209");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_210 () {
    println!("This is function 210");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_211 () {
    println!("This is function 211");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_212 () {
    println!("This is function 212");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_213 () {
    println!("This is function 213");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_214 () {
    println!("This is function 214");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_215 () {
    println!("This is function 215");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_216 () {
    println!("This is function 216");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_217 () {
    println!("This is function 217");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_218 () {
    println!("This is function 218");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_219 () {
    println!("This is function 219");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_220 () {
    println!("This is function 220");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_221 () {
    println!("This is function 221");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_222 () {
    println!("This is function 222");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_223 () {
    println!("This is function 223");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_224 () {
    println!("This is function 224");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_225 () {
    println!("This is function 225");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_226 () {
    println!("This is function 226");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_227 () {
    println!("This is function 227");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_228 () {
    println!("This is function 228");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_229 () {
    println!("This is function 229");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_230 () {
    println!("This is function 230");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_231 () {
    println!("This is function 231");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_232 () {
    println!("This is function 232");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_233 () {
    println!("This is function 233");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_234 () {
    println!("This is function 234");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_235 () {
    println!("This is function 235");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_236 () {
    println!("This is function 236");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_237 () {
    println!("This is function 237");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_238 () {
    println!("This is function 238");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_239 () {
    println!("This is function 239");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_240 () {
    println!("This is function 240");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_241 () {
    println!("This is function 241");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_242 () {
    println!("This is function 242");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_243 () {
    println!("This is function 243");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_244 () {
    println!("This is function 244");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_245 () {
    println!("This is function 245");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_246 () {
    println!("This is function 246");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_247 () {
    println!("This is function 247");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_248 () {
    println!("This is function 248");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_249 () {
    println!("This is function 249");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_250 () {
    println!("This is function 250");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_251 () {
    println!("This is function 251");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_252 () {
    println!("This is function 252");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_253 () {
    println!("This is function 253");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_254 () {
    println!("This is function 254");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_255 () {
    println!("This is function 255");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_256 () {
    println!("This is function 256");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_257 () {
    println!("This is function 257");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_258 () {
    println!("This is function 258");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_259 () {
    println!("This is function 259");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_260 () {
    println!("This is function 260");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_261 () {
    println!("This is function 261");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_262 () {
    println!("This is function 262");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_263 () {
    println!("This is function 263");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_264 () {
    println!("This is function 264");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_265 () {
    println!("This is function 265");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_266 () {
    println!("This is function 266");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_267 () {
    println!("This is function 267");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_268 () {
    println!("This is function 268");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_269 () {
    println!("This is function 269");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_270 () {
    println!("This is function 270");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_271 () {
    println!("This is function 271");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_272 () {
    println!("This is function 272");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_273 () {
    println!("This is function 273");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_274 () {
    println!("This is function 274");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_275 () {
    println!("This is function 275");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_276 () {
    println!("This is function 276");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_277 () {
    println!("This is function 277");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_278 () {
    println!("This is function 278");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_279 () {
    println!("This is function 279");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_280 () {
    println!("This is function 280");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_281 () {
    println!("This is function 281");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_282 () {
    println!("This is function 282");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_283 () {
    println!("This is function 283");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_284 () {
    println!("This is function 284");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_285 () {
    println!("This is function 285");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_286 () {
    println!("This is function 286");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_287 () {
    println!("This is function 287");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_288 () {
    println!("This is function 288");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_289 () {
    println!("This is function 289");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_290 () {
    println!("This is function 290");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_291 () {
    println!("This is function 291");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_292 () {
    println!("This is function 292");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_293 () {
    println!("This is function 293");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_294 () {
    println!("This is function 294");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_295 () {
    println!("This is function 295");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_296 () {
    println!("This is function 296");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_297 () {
    println!("This is function 297");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_298 () {
    println!("This is function 298");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_299 () {
    println!("This is function 299");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_300 () {
    println!("This is function 300");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_301 () {
    println!("This is function 301");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_302 () {
    println!("This is function 302");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_303 () {
    println!("This is function 303");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_304 () {
    println!("This is function 304");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_305 () {
    println!("This is function 305");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_306 () {
    println!("This is function 306");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_307 () {
    println!("This is function 307");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_308 () {
    println!("This is function 308");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_309 () {
    println!("This is function 309");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_310 () {
    println!("This is function 310");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_311 () {
    println!("This is function 311");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_312 () {
    println!("This is function 312");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_313 () {
    println!("This is function 313");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_314 () {
    println!("This is function 314");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_315 () {
    println!("This is function 315");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_316 () {
    println!("This is function 316");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_317 () {
    println!("This is function 317");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_318 () {
    println!("This is function 318");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_319 () {
    println!("This is function 319");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_320 () {
    println!("This is function 320");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_321 () {
    println!("This is function 321");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_322 () {
    println!("This is function 322");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_323 () {
    println!("This is function 323");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_324 () {
    println!("This is function 324");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_325 () {
    println!("This is function 325");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_326 () {
    println!("This is function 326");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_327 () {
    println!("This is function 327");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_328 () {
    println!("This is function 328");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_329 () {
    println!("This is function 329");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_330 () {
    println!("This is function 330");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_331 () {
    println!("This is function 331");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_332 () {
    println!("This is function 332");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_333 () {
    println!("This is function 333");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_334 () {
    println!("This is function 334");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_335 () {
    println!("This is function 335");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_336 () {
    println!("This is function 336");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_337 () {
    println!("This is function 337");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_338 () {
    println!("This is function 338");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_339 () {
    println!("This is function 339");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_340 () {
    println!("This is function 340");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_341 () {
    println!("This is function 341");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_342 () {
    println!("This is function 342");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_343 () {
    println!("This is function 343");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_344 () {
    println!("This is function 344");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_345 () {
    println!("This is function 345");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_346 () {
    println!("This is function 346");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_347 () {
    println!("This is function 347");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_348 () {
    println!("This is function 348");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_349 () {
    println!("This is function 349");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_350 () {
    println!("This is function 350");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_351 () {
    println!("This is function 351");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_352 () {
    println!("This is function 352");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_353 () {
    println!("This is function 353");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_354 () {
    println!("This is function 354");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_355 () {
    println!("This is function 355");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_356 () {
    println!("This is function 356");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_357 () {
    println!("This is function 357");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_358 () {
    println!("This is function 358");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_359 () {
    println!("This is function 359");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_360 () {
    println!("This is function 360");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_361 () {
    println!("This is function 361");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_362 () {
    println!("This is function 362");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_363 () {
    println!("This is function 363");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_364 () {
    println!("This is function 364");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_365 () {
    println!("This is function 365");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_366 () {
    println!("This is function 366");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_367 () {
    println!("This is function 367");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_368 () {
    println!("This is function 368");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_369 () {
    println!("This is function 369");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_370 () {
    println!("This is function 370");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_371 () {
    println!("This is function 371");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_372 () {
    println!("This is function 372");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_373 () {
    println!("This is function 373");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_374 () {
    println!("This is function 374");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_375 () {
    println!("This is function 375");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_376 () {
    println!("This is function 376");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_377 () {
    println!("This is function 377");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_378 () {
    println!("This is function 378");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_379 () {
    println!("This is function 379");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_380 () {
    println!("This is function 380");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_381 () {
    println!("This is function 381");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_382 () {
    println!("This is function 382");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_383 () {
    println!("This is function 383");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_384 () {
    println!("This is function 384");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_385 () {
    println!("This is function 385");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_386 () {
    println!("This is function 386");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_387 () {
    println!("This is function 387");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_388 () {
    println!("This is function 388");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_389 () {
    println!("This is function 389");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_390 () {
    println!("This is function 390");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_391 () {
    println!("This is function 391");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_392 () {
    println!("This is function 392");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_393 () {
    println!("This is function 393");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_394 () {
    println!("This is function 394");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_395 () {
    println!("This is function 395");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_396 () {
    println!("This is function 396");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_397 () {
    println!("This is function 397");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_398 () {
    println!("This is function 398");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_399 () {
    println!("This is function 399");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_400 () {
    println!("This is function 400");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_401 () {
    println!("This is function 401");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_402 () {
    println!("This is function 402");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_403 () {
    println!("This is function 403");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_404 () {
    println!("This is function 404");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_405 () {
    println!("This is function 405");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_406 () {
    println!("This is function 406");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_407 () {
    println!("This is function 407");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_408 () {
    println!("This is function 408");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_409 () {
    println!("This is function 409");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_410 () {
    println!("This is function 410");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_411 () {
    println!("This is function 411");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_412 () {
    println!("This is function 412");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_413 () {
    println!("This is function 413");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_414 () {
    println!("This is function 414");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_415 () {
    println!("This is function 415");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_416 () {
    println!("This is function 416");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_417 () {
    println!("This is function 417");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_418 () {
    println!("This is function 418");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_419 () {
    println!("This is function 419");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_420 () {
    println!("This is function 420");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_421 () {
    println!("This is function 421");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_422 () {
    println!("This is function 422");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_423 () {
    println!("This is function 423");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_424 () {
    println!("This is function 424");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_425 () {
    println!("This is function 425");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_426 () {
    println!("This is function 426");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_427 () {
    println!("This is function 427");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_428 () {
    println!("This is function 428");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_429 () {
    println!("This is function 429");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_430 () {
    println!("This is function 430");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_431 () {
    println!("This is function 431");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_432 () {
    println!("This is function 432");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_433 () {
    println!("This is function 433");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_434 () {
    println!("This is function 434");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_435 () {
    println!("This is function 435");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_436 () {
    println!("This is function 436");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_437 () {
    println!("This is function 437");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_438 () {
    println!("This is function 438");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_439 () {
    println!("This is function 439");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_440 () {
    println!("This is function 440");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_441 () {
    println!("This is function 441");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_442 () {
    println!("This is function 442");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_443 () {
    println!("This is function 443");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_444 () {
    println!("This is function 444");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_445 () {
    println!("This is function 445");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_446 () {
    println!("This is function 446");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_447 () {
    println!("This is function 447");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_448 () {
    println!("This is function 448");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_449 () {
    println!("This is function 449");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_450 () {
    println!("This is function 450");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_451 () {
    println!("This is function 451");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_452 () {
    println!("This is function 452");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_453 () {
    println!("This is function 453");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_454 () {
    println!("This is function 454");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_455 () {
    println!("This is function 455");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_456 () {
    println!("This is function 456");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_457 () {
    println!("This is function 457");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_458 () {
    println!("This is function 458");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_459 () {
    println!("This is function 459");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_460 () {
    println!("This is function 460");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_461 () {
    println!("This is function 461");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_462 () {
    println!("This is function 462");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_463 () {
    println!("This is function 463");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_464 () {
    println!("This is function 464");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_465 () {
    println!("This is function 465");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_466 () {
    println!("This is function 466");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_467 () {
    println!("This is function 467");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_468 () {
    println!("This is function 468");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_469 () {
    println!("This is function 469");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_470 () {
    println!("This is function 470");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_471 () {
    println!("This is function 471");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_472 () {
    println!("This is function 472");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_473 () {
    println!("This is function 473");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_474 () {
    println!("This is function 474");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_475 () {
    println!("This is function 475");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_476 () {
    println!("This is function 476");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_477 () {
    println!("This is function 477");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_478 () {
    println!("This is function 478");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_479 () {
    println!("This is function 479");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_480 () {
    println!("This is function 480");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_481 () {
    println!("This is function 481");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_482 () {
    println!("This is function 482");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_483 () {
    println!("This is function 483");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_484 () {
    println!("This is function 484");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_485 () {
    println!("This is function 485");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_486 () {
    println!("This is function 486");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_487 () {
    println!("This is function 487");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_488 () {
    println!("This is function 488");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_489 () {
    println!("This is function 489");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_490 () {
    println!("This is function 490");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_491 () {
    println!("This is function 491");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_492 () {
    println!("This is function 492");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_493 () {
    println!("This is function 493");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_494 () {
    println!("This is function 494");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_495 () {
    println!("This is function 495");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_496 () {
    println!("This is function 496");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_497 () {
    println!("This is function 497");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_498 () {
    println!("This is function 498");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_499 () {
    println!("This is function 499");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_500 () {
    println!("This is function 500");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_501 () {
    println!("This is function 501");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_502 () {
    println!("This is function 502");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_503 () {
    println!("This is function 503");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_504 () {
    println!("This is function 504");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_505 () {
    println!("This is function 505");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_506 () {
    println!("This is function 506");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_507 () {
    println!("This is function 507");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_508 () {
    println!("This is function 508");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_509 () {
    println!("This is function 509");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_510 () {
    println!("This is function 510");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_511 () {
    println!("This is function 511");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_512 () {
    println!("This is function 512");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_513 () {
    println!("This is function 513");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_514 () {
    println!("This is function 514");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_515 () {
    println!("This is function 515");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_516 () {
    println!("This is function 516");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_517 () {
    println!("This is function 517");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_518 () {
    println!("This is function 518");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_519 () {
    println!("This is function 519");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_520 () {
    println!("This is function 520");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_521 () {
    println!("This is function 521");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_522 () {
    println!("This is function 522");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_523 () {
    println!("This is function 523");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_524 () {
    println!("This is function 524");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_525 () {
    println!("This is function 525");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_526 () {
    println!("This is function 526");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_527 () {
    println!("This is function 527");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_528 () {
    println!("This is function 528");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_529 () {
    println!("This is function 529");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_530 () {
    println!("This is function 530");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_531 () {
    println!("This is function 531");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_532 () {
    println!("This is function 532");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_533 () {
    println!("This is function 533");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_534 () {
    println!("This is function 534");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_535 () {
    println!("This is function 535");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_536 () {
    println!("This is function 536");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_537 () {
    println!("This is function 537");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_538 () {
    println!("This is function 538");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_539 () {
    println!("This is function 539");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_540 () {
    println!("This is function 540");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_541 () {
    println!("This is function 541");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_542 () {
    println!("This is function 542");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_543 () {
    println!("This is function 543");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_544 () {
    println!("This is function 544");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_545 () {
    println!("This is function 545");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_546 () {
    println!("This is function 546");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_547 () {
    println!("This is function 547");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_548 () {
    println!("This is function 548");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_549 () {
    println!("This is function 549");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_550 () {
    println!("This is function 550");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_551 () {
    println!("This is function 551");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_552 () {
    println!("This is function 552");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_553 () {
    println!("This is function 553");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_554 () {
    println!("This is function 554");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_555 () {
    println!("This is function 555");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_556 () {
    println!("This is function 556");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_557 () {
    println!("This is function 557");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_558 () {
    println!("This is function 558");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_559 () {
    println!("This is function 559");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_560 () {
    println!("This is function 560");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_561 () {
    println!("This is function 561");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_562 () {
    println!("This is function 562");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_563 () {
    println!("This is function 563");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_564 () {
    println!("This is function 564");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_565 () {
    println!("This is function 565");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_566 () {
    println!("This is function 566");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_567 () {
    println!("This is function 567");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_568 () {
    println!("This is function 568");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_569 () {
    println!("This is function 569");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_570 () {
    println!("This is function 570");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_571 () {
    println!("This is function 571");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_572 () {
    println!("This is function 572");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_573 () {
    println!("This is function 573");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_574 () {
    println!("This is function 574");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_575 () {
    println!("This is function 575");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_576 () {
    println!("This is function 576");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_577 () {
    println!("This is function 577");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_578 () {
    println!("This is function 578");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_579 () {
    println!("This is function 579");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_580 () {
    println!("This is function 580");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_581 () {
    println!("This is function 581");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_582 () {
    println!("This is function 582");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_583 () {
    println!("This is function 583");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_584 () {
    println!("This is function 584");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_585 () {
    println!("This is function 585");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_586 () {
    println!("This is function 586");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_587 () {
    println!("This is function 587");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_588 () {
    println!("This is function 588");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_589 () {
    println!("This is function 589");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_590 () {
    println!("This is function 590");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_591 () {
    println!("This is function 591");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_592 () {
    println!("This is function 592");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_593 () {
    println!("This is function 593");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_594 () {
    println!("This is function 594");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_595 () {
    println!("This is function 595");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_596 () {
    println!("This is function 596");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_597 () {
    println!("This is function 597");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_598 () {
    println!("This is function 598");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_599 () {
    println!("This is function 599");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_600 () {
    println!("This is function 600");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_601 () {
    println!("This is function 601");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_602 () {
    println!("This is function 602");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_603 () {
    println!("This is function 603");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_604 () {
    println!("This is function 604");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_605 () {
    println!("This is function 605");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_606 () {
    println!("This is function 606");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_607 () {
    println!("This is function 607");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_608 () {
    println!("This is function 608");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_609 () {
    println!("This is function 609");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_610 () {
    println!("This is function 610");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_611 () {
    println!("This is function 611");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_612 () {
    println!("This is function 612");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_613 () {
    println!("This is function 613");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_614 () {
    println!("This is function 614");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_615 () {
    println!("This is function 615");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_616 () {
    println!("This is function 616");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_617 () {
    println!("This is function 617");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_618 () {
    println!("This is function 618");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_619 () {
    println!("This is function 619");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_620 () {
    println!("This is function 620");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_621 () {
    println!("This is function 621");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_622 () {
    println!("This is function 622");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_623 () {
    println!("This is function 623");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_624 () {
    println!("This is function 624");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_625 () {
    println!("This is function 625");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_626 () {
    println!("This is function 626");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_627 () {
    println!("This is function 627");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_628 () {
    println!("This is function 628");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_629 () {
    println!("This is function 629");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_630 () {
    println!("This is function 630");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_631 () {
    println!("This is function 631");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_632 () {
    println!("This is function 632");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_633 () {
    println!("This is function 633");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_634 () {
    println!("This is function 634");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_635 () {
    println!("This is function 635");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_636 () {
    println!("This is function 636");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_637 () {
    println!("This is function 637");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_638 () {
    println!("This is function 638");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_639 () {
    println!("This is function 639");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_640 () {
    println!("This is function 640");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_641 () {
    println!("This is function 641");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_642 () {
    println!("This is function 642");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_643 () {
    println!("This is function 643");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_644 () {
    println!("This is function 644");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_645 () {
    println!("This is function 645");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_646 () {
    println!("This is function 646");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_647 () {
    println!("This is function 647");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_648 () {
    println!("This is function 648");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_649 () {
    println!("This is function 649");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_650 () {
    println!("This is function 650");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_651 () {
    println!("This is function 651");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_652 () {
    println!("This is function 652");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_653 () {
    println!("This is function 653");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_654 () {
    println!("This is function 654");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_655 () {
    println!("This is function 655");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_656 () {
    println!("This is function 656");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_657 () {
    println!("This is function 657");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_658 () {
    println!("This is function 658");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_659 () {
    println!("This is function 659");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_660 () {
    println!("This is function 660");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_661 () {
    println!("This is function 661");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_662 () {
    println!("This is function 662");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_663 () {
    println!("This is function 663");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_664 () {
    println!("This is function 664");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_665 () {
    println!("This is function 665");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_666 () {
    println!("This is function 666");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_667 () {
    println!("This is function 667");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_668 () {
    println!("This is function 668");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_669 () {
    println!("This is function 669");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_670 () {
    println!("This is function 670");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_671 () {
    println!("This is function 671");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_672 () {
    println!("This is function 672");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_673 () {
    println!("This is function 673");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_674 () {
    println!("This is function 674");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_675 () {
    println!("This is function 675");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_676 () {
    println!("This is function 676");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_677 () {
    println!("This is function 677");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_678 () {
    println!("This is function 678");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_679 () {
    println!("This is function 679");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_680 () {
    println!("This is function 680");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_681 () {
    println!("This is function 681");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_682 () {
    println!("This is function 682");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_683 () {
    println!("This is function 683");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_684 () {
    println!("This is function 684");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_685 () {
    println!("This is function 685");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_686 () {
    println!("This is function 686");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_687 () {
    println!("This is function 687");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_688 () {
    println!("This is function 688");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_689 () {
    println!("This is function 689");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_690 () {
    println!("This is function 690");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_691 () {
    println!("This is function 691");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_692 () {
    println!("This is function 692");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_693 () {
    println!("This is function 693");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_694 () {
    println!("This is function 694");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_695 () {
    println!("This is function 695");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_696 () {
    println!("This is function 696");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_697 () {
    println!("This is function 697");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_698 () {
    println!("This is function 698");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_699 () {
    println!("This is function 699");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_700 () {
    println!("This is function 700");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_701 () {
    println!("This is function 701");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_702 () {
    println!("This is function 702");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_703 () {
    println!("This is function 703");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_704 () {
    println!("This is function 704");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_705 () {
    println!("This is function 705");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_706 () {
    println!("This is function 706");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_707 () {
    println!("This is function 707");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_708 () {
    println!("This is function 708");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_709 () {
    println!("This is function 709");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_710 () {
    println!("This is function 710");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_711 () {
    println!("This is function 711");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_712 () {
    println!("This is function 712");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_713 () {
    println!("This is function 713");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_714 () {
    println!("This is function 714");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_715 () {
    println!("This is function 715");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_716 () {
    println!("This is function 716");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_717 () {
    println!("This is function 717");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_718 () {
    println!("This is function 718");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_719 () {
    println!("This is function 719");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_720 () {
    println!("This is function 720");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_721 () {
    println!("This is function 721");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_722 () {
    println!("This is function 722");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_723 () {
    println!("This is function 723");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_724 () {
    println!("This is function 724");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_725 () {
    println!("This is function 725");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_726 () {
    println!("This is function 726");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_727 () {
    println!("This is function 727");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_728 () {
    println!("This is function 728");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_729 () {
    println!("This is function 729");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_730 () {
    println!("This is function 730");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_731 () {
    println!("This is function 731");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_732 () {
    println!("This is function 732");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_733 () {
    println!("This is function 733");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_734 () {
    println!("This is function 734");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_735 () {
    println!("This is function 735");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_736 () {
    println!("This is function 736");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_737 () {
    println!("This is function 737");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_738 () {
    println!("This is function 738");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_739 () {
    println!("This is function 739");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_740 () {
    println!("This is function 740");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_741 () {
    println!("This is function 741");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_742 () {
    println!("This is function 742");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_743 () {
    println!("This is function 743");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_744 () {
    println!("This is function 744");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_745 () {
    println!("This is function 745");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_746 () {
    println!("This is function 746");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_747 () {
    println!("This is function 747");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_748 () {
    println!("This is function 748");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_749 () {
    println!("This is function 749");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_750 () {
    println!("This is function 750");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_751 () {
    println!("This is function 751");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_752 () {
    println!("This is function 752");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_753 () {
    println!("This is function 753");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_754 () {
    println!("This is function 754");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_755 () {
    println!("This is function 755");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_756 () {
    println!("This is function 756");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_757 () {
    println!("This is function 757");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_758 () {
    println!("This is function 758");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_759 () {
    println!("This is function 759");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_760 () {
    println!("This is function 760");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_761 () {
    println!("This is function 761");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_762 () {
    println!("This is function 762");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_763 () {
    println!("This is function 763");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_764 () {
    println!("This is function 764");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_765 () {
    println!("This is function 765");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_766 () {
    println!("This is function 766");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_767 () {
    println!("This is function 767");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_768 () {
    println!("This is function 768");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_769 () {
    println!("This is function 769");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_770 () {
    println!("This is function 770");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_771 () {
    println!("This is function 771");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_772 () {
    println!("This is function 772");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_773 () {
    println!("This is function 773");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_774 () {
    println!("This is function 774");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_775 () {
    println!("This is function 775");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_776 () {
    println!("This is function 776");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_777 () {
    println!("This is function 777");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_778 () {
    println!("This is function 778");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_779 () {
    println!("This is function 779");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_780 () {
    println!("This is function 780");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_781 () {
    println!("This is function 781");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_782 () {
    println!("This is function 782");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_783 () {
    println!("This is function 783");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_784 () {
    println!("This is function 784");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_785 () {
    println!("This is function 785");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_786 () {
    println!("This is function 786");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_787 () {
    println!("This is function 787");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_788 () {
    println!("This is function 788");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_789 () {
    println!("This is function 789");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_790 () {
    println!("This is function 790");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_791 () {
    println!("This is function 791");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_792 () {
    println!("This is function 792");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_793 () {
    println!("This is function 793");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_794 () {
    println!("This is function 794");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_795 () {
    println!("This is function 795");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_796 () {
    println!("This is function 796");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_797 () {
    println!("This is function 797");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_798 () {
    println!("This is function 798");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_799 () {
    println!("This is function 799");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_800 () {
    println!("This is function 800");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_801 () {
    println!("This is function 801");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_802 () {
    println!("This is function 802");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_803 () {
    println!("This is function 803");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_804 () {
    println!("This is function 804");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_805 () {
    println!("This is function 805");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_806 () {
    println!("This is function 806");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_807 () {
    println!("This is function 807");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_808 () {
    println!("This is function 808");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_809 () {
    println!("This is function 809");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_810 () {
    println!("This is function 810");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_811 () {
    println!("This is function 811");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_812 () {
    println!("This is function 812");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_813 () {
    println!("This is function 813");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_814 () {
    println!("This is function 814");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_815 () {
    println!("This is function 815");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_816 () {
    println!("This is function 816");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_817 () {
    println!("This is function 817");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_818 () {
    println!("This is function 818");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_819 () {
    println!("This is function 819");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_820 () {
    println!("This is function 820");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_821 () {
    println!("This is function 821");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_822 () {
    println!("This is function 822");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_823 () {
    println!("This is function 823");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_824 () {
    println!("This is function 824");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_825 () {
    println!("This is function 825");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_826 () {
    println!("This is function 826");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_827 () {
    println!("This is function 827");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_828 () {
    println!("This is function 828");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_829 () {
    println!("This is function 829");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_830 () {
    println!("This is function 830");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_831 () {
    println!("This is function 831");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_832 () {
    println!("This is function 832");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_833 () {
    println!("This is function 833");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_834 () {
    println!("This is function 834");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_835 () {
    println!("This is function 835");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_836 () {
    println!("This is function 836");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_837 () {
    println!("This is function 837");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_838 () {
    println!("This is function 838");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_839 () {
    println!("This is function 839");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_840 () {
    println!("This is function 840");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_841 () {
    println!("This is function 841");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_842 () {
    println!("This is function 842");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_843 () {
    println!("This is function 843");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_844 () {
    println!("This is function 844");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_845 () {
    println!("This is function 845");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_846 () {
    println!("This is function 846");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_847 () {
    println!("This is function 847");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_848 () {
    println!("This is function 848");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_849 () {
    println!("This is function 849");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_850 () {
    println!("This is function 850");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_851 () {
    println!("This is function 851");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_852 () {
    println!("This is function 852");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_853 () {
    println!("This is function 853");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_854 () {
    println!("This is function 854");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_855 () {
    println!("This is function 855");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_856 () {
    println!("This is function 856");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_857 () {
    println!("This is function 857");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_858 () {
    println!("This is function 858");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_859 () {
    println!("This is function 859");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_860 () {
    println!("This is function 860");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_861 () {
    println!("This is function 861");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_862 () {
    println!("This is function 862");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_863 () {
    println!("This is function 863");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_864 () {
    println!("This is function 864");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_865 () {
    println!("This is function 865");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_866 () {
    println!("This is function 866");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_867 () {
    println!("This is function 867");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_868 () {
    println!("This is function 868");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_869 () {
    println!("This is function 869");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_870 () {
    println!("This is function 870");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_871 () {
    println!("This is function 871");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_872 () {
    println!("This is function 872");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_873 () {
    println!("This is function 873");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_874 () {
    println!("This is function 874");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_875 () {
    println!("This is function 875");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_876 () {
    println!("This is function 876");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_877 () {
    println!("This is function 877");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_878 () {
    println!("This is function 878");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_879 () {
    println!("This is function 879");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_880 () {
    println!("This is function 880");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_881 () {
    println!("This is function 881");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_882 () {
    println!("This is function 882");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_883 () {
    println!("This is function 883");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_884 () {
    println!("This is function 884");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_885 () {
    println!("This is function 885");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_886 () {
    println!("This is function 886");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_887 () {
    println!("This is function 887");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_888 () {
    println!("This is function 888");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_889 () {
    println!("This is function 889");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_890 () {
    println!("This is function 890");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_891 () {
    println!("This is function 891");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_892 () {
    println!("This is function 892");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_893 () {
    println!("This is function 893");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_894 () {
    println!("This is function 894");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_895 () {
    println!("This is function 895");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_896 () {
    println!("This is function 896");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_897 () {
    println!("This is function 897");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_898 () {
    println!("This is function 898");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_899 () {
    println!("This is function 899");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_900 () {
    println!("This is function 900");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_901 () {
    println!("This is function 901");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_902 () {
    println!("This is function 902");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_903 () {
    println!("This is function 903");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_904 () {
    println!("This is function 904");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_905 () {
    println!("This is function 905");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_906 () {
    println!("This is function 906");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_907 () {
    println!("This is function 907");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_908 () {
    println!("This is function 908");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_909 () {
    println!("This is function 909");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_910 () {
    println!("This is function 910");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_911 () {
    println!("This is function 911");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_912 () {
    println!("This is function 912");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_913 () {
    println!("This is function 913");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_914 () {
    println!("This is function 914");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_915 () {
    println!("This is function 915");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_916 () {
    println!("This is function 916");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_917 () {
    println!("This is function 917");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_918 () {
    println!("This is function 918");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_919 () {
    println!("This is function 919");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_920 () {
    println!("This is function 920");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_921 () {
    println!("This is function 921");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_922 () {
    println!("This is function 922");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_923 () {
    println!("This is function 923");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_924 () {
    println!("This is function 924");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_925 () {
    println!("This is function 925");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_926 () {
    println!("This is function 926");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_927 () {
    println!("This is function 927");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_928 () {
    println!("This is function 928");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_929 () {
    println!("This is function 929");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_930 () {
    println!("This is function 930");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_931 () {
    println!("This is function 931");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_932 () {
    println!("This is function 932");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_933 () {
    println!("This is function 933");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_934 () {
    println!("This is function 934");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_935 () {
    println!("This is function 935");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_936 () {
    println!("This is function 936");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_937 () {
    println!("This is function 937");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_938 () {
    println!("This is function 938");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_939 () {
    println!("This is function 939");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_940 () {
    println!("This is function 940");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_941 () {
    println!("This is function 941");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_942 () {
    println!("This is function 942");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_943 () {
    println!("This is function 943");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_944 () {
    println!("This is function 944");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_945 () {
    println!("This is function 945");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_946 () {
    println!("This is function 946");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_947 () {
    println!("This is function 947");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_948 () {
    println!("This is function 948");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_949 () {
    println!("This is function 949");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_950 () {
    println!("This is function 950");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_951 () {
    println!("This is function 951");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_952 () {
    println!("This is function 952");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_953 () {
    println!("This is function 953");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_954 () {
    println!("This is function 954");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_955 () {
    println!("This is function 955");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_956 () {
    println!("This is function 956");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_957 () {
    println!("This is function 957");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_958 () {
    println!("This is function 958");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_959 () {
    println!("This is function 959");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_960 () {
    println!("This is function 960");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_961 () {
    println!("This is function 961");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_962 () {
    println!("This is function 962");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_963 () {
    println!("This is function 963");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_964 () {
    println!("This is function 964");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_965 () {
    println!("This is function 965");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_966 () {
    println!("This is function 966");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_967 () {
    println!("This is function 967");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_968 () {
    println!("This is function 968");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_969 () {
    println!("This is function 969");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_970 () {
    println!("This is function 970");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_971 () {
    println!("This is function 971");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_972 () {
    println!("This is function 972");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_973 () {
    println!("This is function 973");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_974 () {
    println!("This is function 974");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_975 () {
    println!("This is function 975");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_976 () {
    println!("This is function 976");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_977 () {
    println!("This is function 977");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_978 () {
    println!("This is function 978");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_979 () {
    println!("This is function 979");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_980 () {
    println!("This is function 980");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_981 () {
    println!("This is function 981");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_982 () {
    println!("This is function 982");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_983 () {
    println!("This is function 983");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_984 () {
    println!("This is function 984");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_985 () {
    println!("This is function 985");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_986 () {
    println!("This is function 986");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_987 () {
    println!("This is function 987");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_988 () {
    println!("This is function 988");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_989 () {
    println!("This is function 989");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_990 () {
    println!("This is function 990");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_991 () {
    println!("This is function 991");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_992 () {
    println!("This is function 992");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_993 () {
    println!("This is function 993");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_994 () {
    println!("This is function 994");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_995 () {
    println!("This is function 995");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_996 () {
    println!("This is function 996");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_997 () {
    println!("This is function 997");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_998 () {
    println!("This is function 998");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_999 () {
    println!("This is function 999");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1000 () {
    println!("This is function 1000");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1001 () {
    println!("This is function 1001");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1002 () {
    println!("This is function 1002");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1003 () {
    println!("This is function 1003");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1004 () {
    println!("This is function 1004");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1005 () {
    println!("This is function 1005");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1006 () {
    println!("This is function 1006");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1007 () {
    println!("This is function 1007");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1008 () {
    println!("This is function 1008");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1009 () {
    println!("This is function 1009");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1010 () {
    println!("This is function 1010");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1011 () {
    println!("This is function 1011");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1012 () {
    println!("This is function 1012");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1013 () {
    println!("This is function 1013");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1014 () {
    println!("This is function 1014");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1015 () {
    println!("This is function 1015");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1016 () {
    println!("This is function 1016");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1017 () {
    println!("This is function 1017");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1018 () {
    println!("This is function 1018");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1019 () {
    println!("This is function 1019");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1020 () {
    println!("This is function 1020");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1021 () {
    println!("This is function 1021");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1022 () {
    println!("This is function 1022");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1023 () {
    println!("This is function 1023");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1024 () {
    println!("This is function 1024");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1025 () {
    println!("This is function 1025");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1026 () {
    println!("This is function 1026");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1027 () {
    println!("This is function 1027");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1028 () {
    println!("This is function 1028");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1029 () {
    println!("This is function 1029");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1030 () {
    println!("This is function 1030");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1031 () {
    println!("This is function 1031");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1032 () {
    println!("This is function 1032");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1033 () {
    println!("This is function 1033");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1034 () {
    println!("This is function 1034");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1035 () {
    println!("This is function 1035");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1036 () {
    println!("This is function 1036");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1037 () {
    println!("This is function 1037");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1038 () {
    println!("This is function 1038");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1039 () {
    println!("This is function 1039");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1040 () {
    println!("This is function 1040");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1041 () {
    println!("This is function 1041");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1042 () {
    println!("This is function 1042");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1043 () {
    println!("This is function 1043");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1044 () {
    println!("This is function 1044");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1045 () {
    println!("This is function 1045");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1046 () {
    println!("This is function 1046");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1047 () {
    println!("This is function 1047");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1048 () {
    println!("This is function 1048");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1049 () {
    println!("This is function 1049");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1050 () {
    println!("This is function 1050");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1051 () {
    println!("This is function 1051");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1052 () {
    println!("This is function 1052");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1053 () {
    println!("This is function 1053");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1054 () {
    println!("This is function 1054");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1055 () {
    println!("This is function 1055");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1056 () {
    println!("This is function 1056");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1057 () {
    println!("This is function 1057");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1058 () {
    println!("This is function 1058");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1059 () {
    println!("This is function 1059");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1060 () {
    println!("This is function 1060");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1061 () {
    println!("This is function 1061");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1062 () {
    println!("This is function 1062");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1063 () {
    println!("This is function 1063");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1064 () {
    println!("This is function 1064");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1065 () {
    println!("This is function 1065");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1066 () {
    println!("This is function 1066");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1067 () {
    println!("This is function 1067");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1068 () {
    println!("This is function 1068");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1069 () {
    println!("This is function 1069");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1070 () {
    println!("This is function 1070");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1071 () {
    println!("This is function 1071");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1072 () {
    println!("This is function 1072");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1073 () {
    println!("This is function 1073");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1074 () {
    println!("This is function 1074");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1075 () {
    println!("This is function 1075");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1076 () {
    println!("This is function 1076");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1077 () {
    println!("This is function 1077");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1078 () {
    println!("This is function 1078");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1079 () {
    println!("This is function 1079");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1080 () {
    println!("This is function 1080");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1081 () {
    println!("This is function 1081");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1082 () {
    println!("This is function 1082");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1083 () {
    println!("This is function 1083");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1084 () {
    println!("This is function 1084");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1085 () {
    println!("This is function 1085");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1086 () {
    println!("This is function 1086");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1087 () {
    println!("This is function 1087");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1088 () {
    println!("This is function 1088");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1089 () {
    println!("This is function 1089");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1090 () {
    println!("This is function 1090");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1091 () {
    println!("This is function 1091");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1092 () {
    println!("This is function 1092");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1093 () {
    println!("This is function 1093");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1094 () {
    println!("This is function 1094");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1095 () {
    println!("This is function 1095");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1096 () {
    println!("This is function 1096");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1097 () {
    println!("This is function 1097");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1098 () {
    println!("This is function 1098");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1099 () {
    println!("This is function 1099");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1100 () {
    println!("This is function 1100");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1101 () {
    println!("This is function 1101");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1102 () {
    println!("This is function 1102");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1103 () {
    println!("This is function 1103");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1104 () {
    println!("This is function 1104");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1105 () {
    println!("This is function 1105");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1106 () {
    println!("This is function 1106");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1107 () {
    println!("This is function 1107");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1108 () {
    println!("This is function 1108");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1109 () {
    println!("This is function 1109");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1110 () {
    println!("This is function 1110");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1111 () {
    println!("This is function 1111");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1112 () {
    println!("This is function 1112");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1113 () {
    println!("This is function 1113");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1114 () {
    println!("This is function 1114");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1115 () {
    println!("This is function 1115");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1116 () {
    println!("This is function 1116");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1117 () {
    println!("This is function 1117");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1118 () {
    println!("This is function 1118");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1119 () {
    println!("This is function 1119");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1120 () {
    println!("This is function 1120");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1121 () {
    println!("This is function 1121");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1122 () {
    println!("This is function 1122");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1123 () {
    println!("This is function 1123");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1124 () {
    println!("This is function 1124");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1125 () {
    println!("This is function 1125");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1126 () {
    println!("This is function 1126");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1127 () {
    println!("This is function 1127");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1128 () {
    println!("This is function 1128");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1129 () {
    println!("This is function 1129");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1130 () {
    println!("This is function 1130");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1131 () {
    println!("This is function 1131");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1132 () {
    println!("This is function 1132");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1133 () {
    println!("This is function 1133");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1134 () {
    println!("This is function 1134");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1135 () {
    println!("This is function 1135");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1136 () {
    println!("This is function 1136");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1137 () {
    println!("This is function 1137");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1138 () {
    println!("This is function 1138");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1139 () {
    println!("This is function 1139");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1140 () {
    println!("This is function 1140");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1141 () {
    println!("This is function 1141");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1142 () {
    println!("This is function 1142");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1143 () {
    println!("This is function 1143");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1144 () {
    println!("This is function 1144");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1145 () {
    println!("This is function 1145");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1146 () {
    println!("This is function 1146");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1147 () {
    println!("This is function 1147");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1148 () {
    println!("This is function 1148");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1149 () {
    println!("This is function 1149");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1150 () {
    println!("This is function 1150");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1151 () {
    println!("This is function 1151");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1152 () {
    println!("This is function 1152");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1153 () {
    println!("This is function 1153");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1154 () {
    println!("This is function 1154");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1155 () {
    println!("This is function 1155");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1156 () {
    println!("This is function 1156");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1157 () {
    println!("This is function 1157");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1158 () {
    println!("This is function 1158");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1159 () {
    println!("This is function 1159");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1160 () {
    println!("This is function 1160");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1161 () {
    println!("This is function 1161");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1162 () {
    println!("This is function 1162");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1163 () {
    println!("This is function 1163");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1164 () {
    println!("This is function 1164");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1165 () {
    println!("This is function 1165");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1166 () {
    println!("This is function 1166");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1167 () {
    println!("This is function 1167");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1168 () {
    println!("This is function 1168");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1169 () {
    println!("This is function 1169");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1170 () {
    println!("This is function 1170");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1171 () {
    println!("This is function 1171");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1172 () {
    println!("This is function 1172");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1173 () {
    println!("This is function 1173");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1174 () {
    println!("This is function 1174");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1175 () {
    println!("This is function 1175");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1176 () {
    println!("This is function 1176");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1177 () {
    println!("This is function 1177");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1178 () {
    println!("This is function 1178");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1179 () {
    println!("This is function 1179");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1180 () {
    println!("This is function 1180");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1181 () {
    println!("This is function 1181");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1182 () {
    println!("This is function 1182");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1183 () {
    println!("This is function 1183");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1184 () {
    println!("This is function 1184");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1185 () {
    println!("This is function 1185");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1186 () {
    println!("This is function 1186");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1187 () {
    println!("This is function 1187");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1188 () {
    println!("This is function 1188");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1189 () {
    println!("This is function 1189");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1190 () {
    println!("This is function 1190");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1191 () {
    println!("This is function 1191");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1192 () {
    println!("This is function 1192");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1193 () {
    println!("This is function 1193");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1194 () {
    println!("This is function 1194");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1195 () {
    println!("This is function 1195");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1196 () {
    println!("This is function 1196");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1197 () {
    println!("This is function 1197");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1198 () {
    println!("This is function 1198");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1199 () {
    println!("This is function 1199");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1200 () {
    println!("This is function 1200");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1201 () {
    println!("This is function 1201");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1202 () {
    println!("This is function 1202");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1203 () {
    println!("This is function 1203");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1204 () {
    println!("This is function 1204");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1205 () {
    println!("This is function 1205");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1206 () {
    println!("This is function 1206");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1207 () {
    println!("This is function 1207");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1208 () {
    println!("This is function 1208");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1209 () {
    println!("This is function 1209");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1210 () {
    println!("This is function 1210");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1211 () {
    println!("This is function 1211");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1212 () {
    println!("This is function 1212");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1213 () {
    println!("This is function 1213");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1214 () {
    println!("This is function 1214");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1215 () {
    println!("This is function 1215");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1216 () {
    println!("This is function 1216");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1217 () {
    println!("This is function 1217");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1218 () {
    println!("This is function 1218");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1219 () {
    println!("This is function 1219");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1220 () {
    println!("This is function 1220");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1221 () {
    println!("This is function 1221");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1222 () {
    println!("This is function 1222");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1223 () {
    println!("This is function 1223");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1224 () {
    println!("This is function 1224");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1225 () {
    println!("This is function 1225");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1226 () {
    println!("This is function 1226");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1227 () {
    println!("This is function 1227");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1228 () {
    println!("This is function 1228");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1229 () {
    println!("This is function 1229");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1230 () {
    println!("This is function 1230");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1231 () {
    println!("This is function 1231");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1232 () {
    println!("This is function 1232");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1233 () {
    println!("This is function 1233");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1234 () {
    println!("This is function 1234");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1235 () {
    println!("This is function 1235");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1236 () {
    println!("This is function 1236");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1237 () {
    println!("This is function 1237");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1238 () {
    println!("This is function 1238");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1239 () {
    println!("This is function 1239");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1240 () {
    println!("This is function 1240");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1241 () {
    println!("This is function 1241");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1242 () {
    println!("This is function 1242");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1243 () {
    println!("This is function 1243");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1244 () {
    println!("This is function 1244");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1245 () {
    println!("This is function 1245");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1246 () {
    println!("This is function 1246");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1247 () {
    println!("This is function 1247");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1248 () {
    println!("This is function 1248");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1249 () {
    println!("This is function 1249");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1250 () {
    println!("This is function 1250");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1251 () {
    println!("This is function 1251");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1252 () {
    println!("This is function 1252");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1253 () {
    println!("This is function 1253");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1254 () {
    println!("This is function 1254");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1255 () {
    println!("This is function 1255");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1256 () {
    println!("This is function 1256");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1257 () {
    println!("This is function 1257");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1258 () {
    println!("This is function 1258");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1259 () {
    println!("This is function 1259");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1260 () {
    println!("This is function 1260");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1261 () {
    println!("This is function 1261");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1262 () {
    println!("This is function 1262");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1263 () {
    println!("This is function 1263");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1264 () {
    println!("This is function 1264");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1265 () {
    println!("This is function 1265");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1266 () {
    println!("This is function 1266");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1267 () {
    println!("This is function 1267");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1268 () {
    println!("This is function 1268");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1269 () {
    println!("This is function 1269");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1270 () {
    println!("This is function 1270");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1271 () {
    println!("This is function 1271");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1272 () {
    println!("This is function 1272");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1273 () {
    println!("This is function 1273");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1274 () {
    println!("This is function 1274");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1275 () {
    println!("This is function 1275");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1276 () {
    println!("This is function 1276");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1277 () {
    println!("This is function 1277");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1278 () {
    println!("This is function 1278");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1279 () {
    println!("This is function 1279");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1280 () {
    println!("This is function 1280");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1281 () {
    println!("This is function 1281");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1282 () {
    println!("This is function 1282");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1283 () {
    println!("This is function 1283");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1284 () {
    println!("This is function 1284");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1285 () {
    println!("This is function 1285");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1286 () {
    println!("This is function 1286");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1287 () {
    println!("This is function 1287");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1288 () {
    println!("This is function 1288");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1289 () {
    println!("This is function 1289");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1290 () {
    println!("This is function 1290");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1291 () {
    println!("This is function 1291");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1292 () {
    println!("This is function 1292");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1293 () {
    println!("This is function 1293");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1294 () {
    println!("This is function 1294");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1295 () {
    println!("This is function 1295");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1296 () {
    println!("This is function 1296");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1297 () {
    println!("This is function 1297");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1298 () {
    println!("This is function 1298");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1299 () {
    println!("This is function 1299");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1300 () {
    println!("This is function 1300");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1301 () {
    println!("This is function 1301");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1302 () {
    println!("This is function 1302");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1303 () {
    println!("This is function 1303");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1304 () {
    println!("This is function 1304");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1305 () {
    println!("This is function 1305");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1306 () {
    println!("This is function 1306");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1307 () {
    println!("This is function 1307");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1308 () {
    println!("This is function 1308");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1309 () {
    println!("This is function 1309");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1310 () {
    println!("This is function 1310");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1311 () {
    println!("This is function 1311");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1312 () {
    println!("This is function 1312");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1313 () {
    println!("This is function 1313");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1314 () {
    println!("This is function 1314");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1315 () {
    println!("This is function 1315");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1316 () {
    println!("This is function 1316");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1317 () {
    println!("This is function 1317");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1318 () {
    println!("This is function 1318");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1319 () {
    println!("This is function 1319");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1320 () {
    println!("This is function 1320");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1321 () {
    println!("This is function 1321");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1322 () {
    println!("This is function 1322");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1323 () {
    println!("This is function 1323");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1324 () {
    println!("This is function 1324");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1325 () {
    println!("This is function 1325");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1326 () {
    println!("This is function 1326");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1327 () {
    println!("This is function 1327");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1328 () {
    println!("This is function 1328");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1329 () {
    println!("This is function 1329");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1330 () {
    println!("This is function 1330");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1331 () {
    println!("This is function 1331");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1332 () {
    println!("This is function 1332");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1333 () {
    println!("This is function 1333");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1334 () {
    println!("This is function 1334");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1335 () {
    println!("This is function 1335");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1336 () {
    println!("This is function 1336");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1337 () {
    println!("This is function 1337");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1338 () {
    println!("This is function 1338");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1339 () {
    println!("This is function 1339");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1340 () {
    println!("This is function 1340");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1341 () {
    println!("This is function 1341");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1342 () {
    println!("This is function 1342");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1343 () {
    println!("This is function 1343");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1344 () {
    println!("This is function 1344");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1345 () {
    println!("This is function 1345");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1346 () {
    println!("This is function 1346");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1347 () {
    println!("This is function 1347");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1348 () {
    println!("This is function 1348");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1349 () {
    println!("This is function 1349");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1350 () {
    println!("This is function 1350");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1351 () {
    println!("This is function 1351");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1352 () {
    println!("This is function 1352");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1353 () {
    println!("This is function 1353");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1354 () {
    println!("This is function 1354");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1355 () {
    println!("This is function 1355");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1356 () {
    println!("This is function 1356");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1357 () {
    println!("This is function 1357");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1358 () {
    println!("This is function 1358");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1359 () {
    println!("This is function 1359");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1360 () {
    println!("This is function 1360");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1361 () {
    println!("This is function 1361");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1362 () {
    println!("This is function 1362");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1363 () {
    println!("This is function 1363");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1364 () {
    println!("This is function 1364");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1365 () {
    println!("This is function 1365");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1366 () {
    println!("This is function 1366");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1367 () {
    println!("This is function 1367");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1368 () {
    println!("This is function 1368");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1369 () {
    println!("This is function 1369");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1370 () {
    println!("This is function 1370");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1371 () {
    println!("This is function 1371");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1372 () {
    println!("This is function 1372");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1373 () {
    println!("This is function 1373");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1374 () {
    println!("This is function 1374");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1375 () {
    println!("This is function 1375");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1376 () {
    println!("This is function 1376");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1377 () {
    println!("This is function 1377");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1378 () {
    println!("This is function 1378");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1379 () {
    println!("This is function 1379");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1380 () {
    println!("This is function 1380");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1381 () {
    println!("This is function 1381");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1382 () {
    println!("This is function 1382");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1383 () {
    println!("This is function 1383");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1384 () {
    println!("This is function 1384");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1385 () {
    println!("This is function 1385");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1386 () {
    println!("This is function 1386");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1387 () {
    println!("This is function 1387");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1388 () {
    println!("This is function 1388");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1389 () {
    println!("This is function 1389");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1390 () {
    println!("This is function 1390");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1391 () {
    println!("This is function 1391");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1392 () {
    println!("This is function 1392");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1393 () {
    println!("This is function 1393");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1394 () {
    println!("This is function 1394");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1395 () {
    println!("This is function 1395");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1396 () {
    println!("This is function 1396");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1397 () {
    println!("This is function 1397");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1398 () {
    println!("This is function 1398");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1399 () {
    println!("This is function 1399");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1400 () {
    println!("This is function 1400");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1401 () {
    println!("This is function 1401");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1402 () {
    println!("This is function 1402");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1403 () {
    println!("This is function 1403");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1404 () {
    println!("This is function 1404");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1405 () {
    println!("This is function 1405");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1406 () {
    println!("This is function 1406");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1407 () {
    println!("This is function 1407");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1408 () {
    println!("This is function 1408");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1409 () {
    println!("This is function 1409");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1410 () {
    println!("This is function 1410");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1411 () {
    println!("This is function 1411");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1412 () {
    println!("This is function 1412");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1413 () {
    println!("This is function 1413");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1414 () {
    println!("This is function 1414");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1415 () {
    println!("This is function 1415");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1416 () {
    println!("This is function 1416");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1417 () {
    println!("This is function 1417");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1418 () {
    println!("This is function 1418");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1419 () {
    println!("This is function 1419");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1420 () {
    println!("This is function 1420");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1421 () {
    println!("This is function 1421");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1422 () {
    println!("This is function 1422");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1423 () {
    println!("This is function 1423");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1424 () {
    println!("This is function 1424");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1425 () {
    println!("This is function 1425");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1426 () {
    println!("This is function 1426");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1427 () {
    println!("This is function 1427");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1428 () {
    println!("This is function 1428");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1429 () {
    println!("This is function 1429");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1430 () {
    println!("This is function 1430");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1431 () {
    println!("This is function 1431");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1432 () {
    println!("This is function 1432");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1433 () {
    println!("This is function 1433");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1434 () {
    println!("This is function 1434");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1435 () {
    println!("This is function 1435");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1436 () {
    println!("This is function 1436");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1437 () {
    println!("This is function 1437");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1438 () {
    println!("This is function 1438");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1439 () {
    println!("This is function 1439");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1440 () {
    println!("This is function 1440");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1441 () {
    println!("This is function 1441");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1442 () {
    println!("This is function 1442");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1443 () {
    println!("This is function 1443");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1444 () {
    println!("This is function 1444");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1445 () {
    println!("This is function 1445");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1446 () {
    println!("This is function 1446");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1447 () {
    println!("This is function 1447");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1448 () {
    println!("This is function 1448");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1449 () {
    println!("This is function 1449");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1450 () {
    println!("This is function 1450");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1451 () {
    println!("This is function 1451");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1452 () {
    println!("This is function 1452");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1453 () {
    println!("This is function 1453");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1454 () {
    println!("This is function 1454");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1455 () {
    println!("This is function 1455");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1456 () {
    println!("This is function 1456");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1457 () {
    println!("This is function 1457");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1458 () {
    println!("This is function 1458");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1459 () {
    println!("This is function 1459");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1460 () {
    println!("This is function 1460");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1461 () {
    println!("This is function 1461");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1462 () {
    println!("This is function 1462");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1463 () {
    println!("This is function 1463");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1464 () {
    println!("This is function 1464");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1465 () {
    println!("This is function 1465");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1466 () {
    println!("This is function 1466");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1467 () {
    println!("This is function 1467");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1468 () {
    println!("This is function 1468");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1469 () {
    println!("This is function 1469");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1470 () {
    println!("This is function 1470");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1471 () {
    println!("This is function 1471");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1472 () {
    println!("This is function 1472");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1473 () {
    println!("This is function 1473");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1474 () {
    println!("This is function 1474");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1475 () {
    println!("This is function 1475");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1476 () {
    println!("This is function 1476");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1477 () {
    println!("This is function 1477");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1478 () {
    println!("This is function 1478");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1479 () {
    println!("This is function 1479");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1480 () {
    println!("This is function 1480");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1481 () {
    println!("This is function 1481");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1482 () {
    println!("This is function 1482");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1483 () {
    println!("This is function 1483");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1484 () {
    println!("This is function 1484");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1485 () {
    println!("This is function 1485");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1486 () {
    println!("This is function 1486");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1487 () {
    println!("This is function 1487");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1488 () {
    println!("This is function 1488");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1489 () {
    println!("This is function 1489");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1490 () {
    println!("This is function 1490");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1491 () {
    println!("This is function 1491");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1492 () {
    println!("This is function 1492");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1493 () {
    println!("This is function 1493");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1494 () {
    println!("This is function 1494");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1495 () {
    println!("This is function 1495");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1496 () {
    println!("This is function 1496");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1497 () {
    println!("This is function 1497");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1498 () {
    println!("This is function 1498");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1499 () {
    println!("This is function 1499");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1500 () {
    println!("This is function 1500");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1501 () {
    println!("This is function 1501");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1502 () {
    println!("This is function 1502");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1503 () {
    println!("This is function 1503");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1504 () {
    println!("This is function 1504");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1505 () {
    println!("This is function 1505");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1506 () {
    println!("This is function 1506");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1507 () {
    println!("This is function 1507");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1508 () {
    println!("This is function 1508");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1509 () {
    println!("This is function 1509");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1510 () {
    println!("This is function 1510");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1511 () {
    println!("This is function 1511");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1512 () {
    println!("This is function 1512");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1513 () {
    println!("This is function 1513");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1514 () {
    println!("This is function 1514");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1515 () {
    println!("This is function 1515");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1516 () {
    println!("This is function 1516");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1517 () {
    println!("This is function 1517");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1518 () {
    println!("This is function 1518");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1519 () {
    println!("This is function 1519");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1520 () {
    println!("This is function 1520");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1521 () {
    println!("This is function 1521");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1522 () {
    println!("This is function 1522");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1523 () {
    println!("This is function 1523");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1524 () {
    println!("This is function 1524");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1525 () {
    println!("This is function 1525");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1526 () {
    println!("This is function 1526");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1527 () {
    println!("This is function 1527");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1528 () {
    println!("This is function 1528");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1529 () {
    println!("This is function 1529");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1530 () {
    println!("This is function 1530");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1531 () {
    println!("This is function 1531");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1532 () {
    println!("This is function 1532");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1533 () {
    println!("This is function 1533");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1534 () {
    println!("This is function 1534");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1535 () {
    println!("This is function 1535");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1536 () {
    println!("This is function 1536");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1537 () {
    println!("This is function 1537");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1538 () {
    println!("This is function 1538");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1539 () {
    println!("This is function 1539");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1540 () {
    println!("This is function 1540");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1541 () {
    println!("This is function 1541");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1542 () {
    println!("This is function 1542");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1543 () {
    println!("This is function 1543");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1544 () {
    println!("This is function 1544");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1545 () {
    println!("This is function 1545");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1546 () {
    println!("This is function 1546");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1547 () {
    println!("This is function 1547");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1548 () {
    println!("This is function 1548");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1549 () {
    println!("This is function 1549");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1550 () {
    println!("This is function 1550");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1551 () {
    println!("This is function 1551");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1552 () {
    println!("This is function 1552");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1553 () {
    println!("This is function 1553");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1554 () {
    println!("This is function 1554");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1555 () {
    println!("This is function 1555");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1556 () {
    println!("This is function 1556");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1557 () {
    println!("This is function 1557");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1558 () {
    println!("This is function 1558");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1559 () {
    println!("This is function 1559");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1560 () {
    println!("This is function 1560");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1561 () {
    println!("This is function 1561");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1562 () {
    println!("This is function 1562");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1563 () {
    println!("This is function 1563");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1564 () {
    println!("This is function 1564");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1565 () {
    println!("This is function 1565");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1566 () {
    println!("This is function 1566");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1567 () {
    println!("This is function 1567");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1568 () {
    println!("This is function 1568");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1569 () {
    println!("This is function 1569");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1570 () {
    println!("This is function 1570");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1571 () {
    println!("This is function 1571");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1572 () {
    println!("This is function 1572");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1573 () {
    println!("This is function 1573");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1574 () {
    println!("This is function 1574");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1575 () {
    println!("This is function 1575");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1576 () {
    println!("This is function 1576");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1577 () {
    println!("This is function 1577");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1578 () {
    println!("This is function 1578");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1579 () {
    println!("This is function 1579");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1580 () {
    println!("This is function 1580");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1581 () {
    println!("This is function 1581");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1582 () {
    println!("This is function 1582");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1583 () {
    println!("This is function 1583");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1584 () {
    println!("This is function 1584");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1585 () {
    println!("This is function 1585");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1586 () {
    println!("This is function 1586");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1587 () {
    println!("This is function 1587");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1588 () {
    println!("This is function 1588");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1589 () {
    println!("This is function 1589");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1590 () {
    println!("This is function 1590");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1591 () {
    println!("This is function 1591");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1592 () {
    println!("This is function 1592");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1593 () {
    println!("This is function 1593");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1594 () {
    println!("This is function 1594");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1595 () {
    println!("This is function 1595");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1596 () {
    println!("This is function 1596");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1597 () {
    println!("This is function 1597");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1598 () {
    println!("This is function 1598");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1599 () {
    println!("This is function 1599");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1600 () {
    println!("This is function 1600");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1601 () {
    println!("This is function 1601");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1602 () {
    println!("This is function 1602");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1603 () {
    println!("This is function 1603");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1604 () {
    println!("This is function 1604");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1605 () {
    println!("This is function 1605");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1606 () {
    println!("This is function 1606");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1607 () {
    println!("This is function 1607");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1608 () {
    println!("This is function 1608");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1609 () {
    println!("This is function 1609");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1610 () {
    println!("This is function 1610");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1611 () {
    println!("This is function 1611");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1612 () {
    println!("This is function 1612");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1613 () {
    println!("This is function 1613");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1614 () {
    println!("This is function 1614");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1615 () {
    println!("This is function 1615");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1616 () {
    println!("This is function 1616");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1617 () {
    println!("This is function 1617");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1618 () {
    println!("This is function 1618");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1619 () {
    println!("This is function 1619");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1620 () {
    println!("This is function 1620");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1621 () {
    println!("This is function 1621");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1622 () {
    println!("This is function 1622");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1623 () {
    println!("This is function 1623");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1624 () {
    println!("This is function 1624");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1625 () {
    println!("This is function 1625");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1626 () {
    println!("This is function 1626");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1627 () {
    println!("This is function 1627");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1628 () {
    println!("This is function 1628");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1629 () {
    println!("This is function 1629");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1630 () {
    println!("This is function 1630");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1631 () {
    println!("This is function 1631");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1632 () {
    println!("This is function 1632");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1633 () {
    println!("This is function 1633");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1634 () {
    println!("This is function 1634");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1635 () {
    println!("This is function 1635");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1636 () {
    println!("This is function 1636");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1637 () {
    println!("This is function 1637");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1638 () {
    println!("This is function 1638");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1639 () {
    println!("This is function 1639");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1640 () {
    println!("This is function 1640");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1641 () {
    println!("This is function 1641");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1642 () {
    println!("This is function 1642");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1643 () {
    println!("This is function 1643");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1644 () {
    println!("This is function 1644");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1645 () {
    println!("This is function 1645");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1646 () {
    println!("This is function 1646");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1647 () {
    println!("This is function 1647");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1648 () {
    println!("This is function 1648");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1649 () {
    println!("This is function 1649");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1650 () {
    println!("This is function 1650");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1651 () {
    println!("This is function 1651");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1652 () {
    println!("This is function 1652");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1653 () {
    println!("This is function 1653");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1654 () {
    println!("This is function 1654");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1655 () {
    println!("This is function 1655");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1656 () {
    println!("This is function 1656");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1657 () {
    println!("This is function 1657");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1658 () {
    println!("This is function 1658");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1659 () {
    println!("This is function 1659");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1660 () {
    println!("This is function 1660");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1661 () {
    println!("This is function 1661");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1662 () {
    println!("This is function 1662");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1663 () {
    println!("This is function 1663");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1664 () {
    println!("This is function 1664");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1665 () {
    println!("This is function 1665");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1666 () {
    println!("This is function 1666");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1667 () {
    println!("This is function 1667");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1668 () {
    println!("This is function 1668");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1669 () {
    println!("This is function 1669");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1670 () {
    println!("This is function 1670");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1671 () {
    println!("This is function 1671");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1672 () {
    println!("This is function 1672");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1673 () {
    println!("This is function 1673");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1674 () {
    println!("This is function 1674");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1675 () {
    println!("This is function 1675");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1676 () {
    println!("This is function 1676");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1677 () {
    println!("This is function 1677");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1678 () {
    println!("This is function 1678");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1679 () {
    println!("This is function 1679");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1680 () {
    println!("This is function 1680");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1681 () {
    println!("This is function 1681");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1682 () {
    println!("This is function 1682");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1683 () {
    println!("This is function 1683");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1684 () {
    println!("This is function 1684");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1685 () {
    println!("This is function 1685");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1686 () {
    println!("This is function 1686");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1687 () {
    println!("This is function 1687");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1688 () {
    println!("This is function 1688");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1689 () {
    println!("This is function 1689");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1690 () {
    println!("This is function 1690");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1691 () {
    println!("This is function 1691");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1692 () {
    println!("This is function 1692");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1693 () {
    println!("This is function 1693");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1694 () {
    println!("This is function 1694");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1695 () {
    println!("This is function 1695");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1696 () {
    println!("This is function 1696");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1697 () {
    println!("This is function 1697");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1698 () {
    println!("This is function 1698");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1699 () {
    println!("This is function 1699");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1700 () {
    println!("This is function 1700");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1701 () {
    println!("This is function 1701");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1702 () {
    println!("This is function 1702");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1703 () {
    println!("This is function 1703");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1704 () {
    println!("This is function 1704");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1705 () {
    println!("This is function 1705");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1706 () {
    println!("This is function 1706");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1707 () {
    println!("This is function 1707");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1708 () {
    println!("This is function 1708");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1709 () {
    println!("This is function 1709");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1710 () {
    println!("This is function 1710");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1711 () {
    println!("This is function 1711");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1712 () {
    println!("This is function 1712");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1713 () {
    println!("This is function 1713");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1714 () {
    println!("This is function 1714");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1715 () {
    println!("This is function 1715");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1716 () {
    println!("This is function 1716");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1717 () {
    println!("This is function 1717");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1718 () {
    println!("This is function 1718");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1719 () {
    println!("This is function 1719");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1720 () {
    println!("This is function 1720");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1721 () {
    println!("This is function 1721");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1722 () {
    println!("This is function 1722");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1723 () {
    println!("This is function 1723");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1724 () {
    println!("This is function 1724");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1725 () {
    println!("This is function 1725");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1726 () {
    println!("This is function 1726");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1727 () {
    println!("This is function 1727");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1728 () {
    println!("This is function 1728");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1729 () {
    println!("This is function 1729");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1730 () {
    println!("This is function 1730");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1731 () {
    println!("This is function 1731");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1732 () {
    println!("This is function 1732");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1733 () {
    println!("This is function 1733");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1734 () {
    println!("This is function 1734");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1735 () {
    println!("This is function 1735");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1736 () {
    println!("This is function 1736");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1737 () {
    println!("This is function 1737");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1738 () {
    println!("This is function 1738");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1739 () {
    println!("This is function 1739");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1740 () {
    println!("This is function 1740");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1741 () {
    println!("This is function 1741");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1742 () {
    println!("This is function 1742");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1743 () {
    println!("This is function 1743");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1744 () {
    println!("This is function 1744");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1745 () {
    println!("This is function 1745");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1746 () {
    println!("This is function 1746");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1747 () {
    println!("This is function 1747");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1748 () {
    println!("This is function 1748");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1749 () {
    println!("This is function 1749");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1750 () {
    println!("This is function 1750");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1751 () {
    println!("This is function 1751");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1752 () {
    println!("This is function 1752");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1753 () {
    println!("This is function 1753");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1754 () {
    println!("This is function 1754");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1755 () {
    println!("This is function 1755");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1756 () {
    println!("This is function 1756");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1757 () {
    println!("This is function 1757");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1758 () {
    println!("This is function 1758");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1759 () {
    println!("This is function 1759");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1760 () {
    println!("This is function 1760");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1761 () {
    println!("This is function 1761");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1762 () {
    println!("This is function 1762");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1763 () {
    println!("This is function 1763");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1764 () {
    println!("This is function 1764");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1765 () {
    println!("This is function 1765");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1766 () {
    println!("This is function 1766");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1767 () {
    println!("This is function 1767");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1768 () {
    println!("This is function 1768");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1769 () {
    println!("This is function 1769");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1770 () {
    println!("This is function 1770");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1771 () {
    println!("This is function 1771");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1772 () {
    println!("This is function 1772");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1773 () {
    println!("This is function 1773");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1774 () {
    println!("This is function 1774");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1775 () {
    println!("This is function 1775");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1776 () {
    println!("This is function 1776");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1777 () {
    println!("This is function 1777");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1778 () {
    println!("This is function 1778");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1779 () {
    println!("This is function 1779");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1780 () {
    println!("This is function 1780");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1781 () {
    println!("This is function 1781");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1782 () {
    println!("This is function 1782");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1783 () {
    println!("This is function 1783");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1784 () {
    println!("This is function 1784");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1785 () {
    println!("This is function 1785");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1786 () {
    println!("This is function 1786");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1787 () {
    println!("This is function 1787");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1788 () {
    println!("This is function 1788");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1789 () {
    println!("This is function 1789");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1790 () {
    println!("This is function 1790");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1791 () {
    println!("This is function 1791");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1792 () {
    println!("This is function 1792");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1793 () {
    println!("This is function 1793");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1794 () {
    println!("This is function 1794");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1795 () {
    println!("This is function 1795");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1796 () {
    println!("This is function 1796");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1797 () {
    println!("This is function 1797");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1798 () {
    println!("This is function 1798");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1799 () {
    println!("This is function 1799");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1800 () {
    println!("This is function 1800");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1801 () {
    println!("This is function 1801");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1802 () {
    println!("This is function 1802");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1803 () {
    println!("This is function 1803");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1804 () {
    println!("This is function 1804");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1805 () {
    println!("This is function 1805");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1806 () {
    println!("This is function 1806");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1807 () {
    println!("This is function 1807");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1808 () {
    println!("This is function 1808");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1809 () {
    println!("This is function 1809");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1810 () {
    println!("This is function 1810");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1811 () {
    println!("This is function 1811");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1812 () {
    println!("This is function 1812");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1813 () {
    println!("This is function 1813");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1814 () {
    println!("This is function 1814");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1815 () {
    println!("This is function 1815");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1816 () {
    println!("This is function 1816");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1817 () {
    println!("This is function 1817");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1818 () {
    println!("This is function 1818");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1819 () {
    println!("This is function 1819");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1820 () {
    println!("This is function 1820");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1821 () {
    println!("This is function 1821");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1822 () {
    println!("This is function 1822");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1823 () {
    println!("This is function 1823");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1824 () {
    println!("This is function 1824");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1825 () {
    println!("This is function 1825");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1826 () {
    println!("This is function 1826");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1827 () {
    println!("This is function 1827");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1828 () {
    println!("This is function 1828");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1829 () {
    println!("This is function 1829");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1830 () {
    println!("This is function 1830");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1831 () {
    println!("This is function 1831");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1832 () {
    println!("This is function 1832");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1833 () {
    println!("This is function 1833");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1834 () {
    println!("This is function 1834");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1835 () {
    println!("This is function 1835");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1836 () {
    println!("This is function 1836");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1837 () {
    println!("This is function 1837");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1838 () {
    println!("This is function 1838");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1839 () {
    println!("This is function 1839");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1840 () {
    println!("This is function 1840");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1841 () {
    println!("This is function 1841");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1842 () {
    println!("This is function 1842");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1843 () {
    println!("This is function 1843");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1844 () {
    println!("This is function 1844");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1845 () {
    println!("This is function 1845");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1846 () {
    println!("This is function 1846");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1847 () {
    println!("This is function 1847");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1848 () {
    println!("This is function 1848");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1849 () {
    println!("This is function 1849");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1850 () {
    println!("This is function 1850");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1851 () {
    println!("This is function 1851");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1852 () {
    println!("This is function 1852");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1853 () {
    println!("This is function 1853");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1854 () {
    println!("This is function 1854");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1855 () {
    println!("This is function 1855");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1856 () {
    println!("This is function 1856");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1857 () {
    println!("This is function 1857");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1858 () {
    println!("This is function 1858");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1859 () {
    println!("This is function 1859");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1860 () {
    println!("This is function 1860");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1861 () {
    println!("This is function 1861");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1862 () {
    println!("This is function 1862");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1863 () {
    println!("This is function 1863");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1864 () {
    println!("This is function 1864");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1865 () {
    println!("This is function 1865");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1866 () {
    println!("This is function 1866");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1867 () {
    println!("This is function 1867");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1868 () {
    println!("This is function 1868");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1869 () {
    println!("This is function 1869");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1870 () {
    println!("This is function 1870");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1871 () {
    println!("This is function 1871");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1872 () {
    println!("This is function 1872");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1873 () {
    println!("This is function 1873");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1874 () {
    println!("This is function 1874");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1875 () {
    println!("This is function 1875");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1876 () {
    println!("This is function 1876");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1877 () {
    println!("This is function 1877");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1878 () {
    println!("This is function 1878");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1879 () {
    println!("This is function 1879");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1880 () {
    println!("This is function 1880");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1881 () {
    println!("This is function 1881");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1882 () {
    println!("This is function 1882");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1883 () {
    println!("This is function 1883");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1884 () {
    println!("This is function 1884");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1885 () {
    println!("This is function 1885");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1886 () {
    println!("This is function 1886");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1887 () {
    println!("This is function 1887");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1888 () {
    println!("This is function 1888");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1889 () {
    println!("This is function 1889");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1890 () {
    println!("This is function 1890");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1891 () {
    println!("This is function 1891");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1892 () {
    println!("This is function 1892");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1893 () {
    println!("This is function 1893");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1894 () {
    println!("This is function 1894");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1895 () {
    println!("This is function 1895");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1896 () {
    println!("This is function 1896");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1897 () {
    println!("This is function 1897");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1898 () {
    println!("This is function 1898");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1899 () {
    println!("This is function 1899");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1900 () {
    println!("This is function 1900");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1901 () {
    println!("This is function 1901");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1902 () {
    println!("This is function 1902");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1903 () {
    println!("This is function 1903");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1904 () {
    println!("This is function 1904");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1905 () {
    println!("This is function 1905");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1906 () {
    println!("This is function 1906");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1907 () {
    println!("This is function 1907");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1908 () {
    println!("This is function 1908");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1909 () {
    println!("This is function 1909");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1910 () {
    println!("This is function 1910");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1911 () {
    println!("This is function 1911");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1912 () {
    println!("This is function 1912");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1913 () {
    println!("This is function 1913");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1914 () {
    println!("This is function 1914");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1915 () {
    println!("This is function 1915");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1916 () {
    println!("This is function 1916");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1917 () {
    println!("This is function 1917");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1918 () {
    println!("This is function 1918");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1919 () {
    println!("This is function 1919");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1920 () {
    println!("This is function 1920");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1921 () {
    println!("This is function 1921");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1922 () {
    println!("This is function 1922");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1923 () {
    println!("This is function 1923");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1924 () {
    println!("This is function 1924");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1925 () {
    println!("This is function 1925");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1926 () {
    println!("This is function 1926");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1927 () {
    println!("This is function 1927");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1928 () {
    println!("This is function 1928");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1929 () {
    println!("This is function 1929");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1930 () {
    println!("This is function 1930");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1931 () {
    println!("This is function 1931");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1932 () {
    println!("This is function 1932");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1933 () {
    println!("This is function 1933");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1934 () {
    println!("This is function 1934");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1935 () {
    println!("This is function 1935");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1936 () {
    println!("This is function 1936");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1937 () {
    println!("This is function 1937");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1938 () {
    println!("This is function 1938");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1939 () {
    println!("This is function 1939");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1940 () {
    println!("This is function 1940");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1941 () {
    println!("This is function 1941");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1942 () {
    println!("This is function 1942");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1943 () {
    println!("This is function 1943");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1944 () {
    println!("This is function 1944");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1945 () {
    println!("This is function 1945");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1946 () {
    println!("This is function 1946");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1947 () {
    println!("This is function 1947");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1948 () {
    println!("This is function 1948");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1949 () {
    println!("This is function 1949");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1950 () {
    println!("This is function 1950");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1951 () {
    println!("This is function 1951");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1952 () {
    println!("This is function 1952");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1953 () {
    println!("This is function 1953");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1954 () {
    println!("This is function 1954");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1955 () {
    println!("This is function 1955");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1956 () {
    println!("This is function 1956");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1957 () {
    println!("This is function 1957");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1958 () {
    println!("This is function 1958");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1959 () {
    println!("This is function 1959");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1960 () {
    println!("This is function 1960");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1961 () {
    println!("This is function 1961");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1962 () {
    println!("This is function 1962");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1963 () {
    println!("This is function 1963");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1964 () {
    println!("This is function 1964");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1965 () {
    println!("This is function 1965");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1966 () {
    println!("This is function 1966");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1967 () {
    println!("This is function 1967");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1968 () {
    println!("This is function 1968");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1969 () {
    println!("This is function 1969");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1970 () {
    println!("This is function 1970");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1971 () {
    println!("This is function 1971");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1972 () {
    println!("This is function 1972");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1973 () {
    println!("This is function 1973");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1974 () {
    println!("This is function 1974");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1975 () {
    println!("This is function 1975");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1976 () {
    println!("This is function 1976");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1977 () {
    println!("This is function 1977");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1978 () {
    println!("This is function 1978");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1979 () {
    println!("This is function 1979");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1980 () {
    println!("This is function 1980");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1981 () {
    println!("This is function 1981");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1982 () {
    println!("This is function 1982");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1983 () {
    println!("This is function 1983");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1984 () {
    println!("This is function 1984");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1985 () {
    println!("This is function 1985");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1986 () {
    println!("This is function 1986");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1987 () {
    println!("This is function 1987");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1988 () {
    println!("This is function 1988");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1989 () {
    println!("This is function 1989");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1990 () {
    println!("This is function 1990");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1991 () {
    println!("This is function 1991");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1992 () {
    println!("This is function 1992");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1993 () {
    println!("This is function 1993");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1994 () {
    println!("This is function 1994");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1995 () {
    println!("This is function 1995");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1996 () {
    println!("This is function 1996");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1997 () {
    println!("This is function 1997");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1998 () {
    println!("This is function 1998");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_1999 () {
    println!("This is function 1999");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}

unsafe fn test_plugin_2000 () {
    println!("This is function 2000");
    struct AA {x: i32};
    let x:AA =  AA{x:32,};
    let mut y:AA = AA{x:63,};

    let p = &x as *const AA;
    let t = (*p).x;

    //(*p).x = 10;
    let py = &mut y as *mut AA;
    (*py).x = t;
    y.x = 20;
    unsafe fn test_deref<'a>(i: &'a AA) -> i32{
        i.x
    }
    test_deref(&y);
}
fn main() {
	unsafe {
		test_plugin_1();
		test_plugin_2();
		test_plugin_3();
		test_plugin_4();
		test_plugin_5();
		test_plugin_6();
		test_plugin_7();
		test_plugin_8();
		test_plugin_9();
		test_plugin_10();
		test_plugin_11();
		test_plugin_12();
		test_plugin_13();
		test_plugin_14();
		test_plugin_15();
		test_plugin_16();
		test_plugin_17();
		test_plugin_18();
		test_plugin_19();
		test_plugin_20();
		test_plugin_21();
		test_plugin_22();
		test_plugin_23();
		test_plugin_24();
		test_plugin_25();
		test_plugin_26();
		test_plugin_27();
		test_plugin_28();
		test_plugin_29();
		test_plugin_30();
		test_plugin_31();
		test_plugin_32();
		test_plugin_33();
		test_plugin_34();
		test_plugin_35();
		test_plugin_36();
		test_plugin_37();
		test_plugin_38();
		test_plugin_39();
		test_plugin_40();
		test_plugin_41();
		test_plugin_42();
		test_plugin_43();
		test_plugin_44();
		test_plugin_45();
		test_plugin_46();
		test_plugin_47();
		test_plugin_48();
		test_plugin_49();
		test_plugin_50();
		test_plugin_51();
		test_plugin_52();
		test_plugin_53();
		test_plugin_54();
		test_plugin_55();
		test_plugin_56();
		test_plugin_57();
		test_plugin_58();
		test_plugin_59();
		test_plugin_60();
		test_plugin_61();
		test_plugin_62();
		test_plugin_63();
		test_plugin_64();
		test_plugin_65();
		test_plugin_66();
		test_plugin_67();
		test_plugin_68();
		test_plugin_69();
		test_plugin_70();
		test_plugin_71();
		test_plugin_72();
		test_plugin_73();
		test_plugin_74();
		test_plugin_75();
		test_plugin_76();
		test_plugin_77();
		test_plugin_78();
		test_plugin_79();
		test_plugin_80();
		test_plugin_81();
		test_plugin_82();
		test_plugin_83();
		test_plugin_84();
		test_plugin_85();
		test_plugin_86();
		test_plugin_87();
		test_plugin_88();
		test_plugin_89();
		test_plugin_90();
		test_plugin_91();
		test_plugin_92();
		test_plugin_93();
		test_plugin_94();
		test_plugin_95();
		test_plugin_96();
		test_plugin_97();
		test_plugin_98();
		test_plugin_99();
		test_plugin_100();
		test_plugin_101();
		test_plugin_102();
		test_plugin_103();
		test_plugin_104();
		test_plugin_105();
		test_plugin_106();
		test_plugin_107();
		test_plugin_108();
		test_plugin_109();
		test_plugin_110();
		test_plugin_111();
		test_plugin_112();
		test_plugin_113();
		test_plugin_114();
		test_plugin_115();
		test_plugin_116();
		test_plugin_117();
		test_plugin_118();
		test_plugin_119();
		test_plugin_120();
		test_plugin_121();
		test_plugin_122();
		test_plugin_123();
		test_plugin_124();
		test_plugin_125();
		test_plugin_126();
		test_plugin_127();
		test_plugin_128();
		test_plugin_129();
		test_plugin_130();
		test_plugin_131();
		test_plugin_132();
		test_plugin_133();
		test_plugin_134();
		test_plugin_135();
		test_plugin_136();
		test_plugin_137();
		test_plugin_138();
		test_plugin_139();
		test_plugin_140();
		test_plugin_141();
		test_plugin_142();
		test_plugin_143();
		test_plugin_144();
		test_plugin_145();
		test_plugin_146();
		test_plugin_147();
		test_plugin_148();
		test_plugin_149();
		test_plugin_150();
		test_plugin_151();
		test_plugin_152();
		test_plugin_153();
		test_plugin_154();
		test_plugin_155();
		test_plugin_156();
		test_plugin_157();
		test_plugin_158();
		test_plugin_159();
		test_plugin_160();
		test_plugin_161();
		test_plugin_162();
		test_plugin_163();
		test_plugin_164();
		test_plugin_165();
		test_plugin_166();
		test_plugin_167();
		test_plugin_168();
		test_plugin_169();
		test_plugin_170();
		test_plugin_171();
		test_plugin_172();
		test_plugin_173();
		test_plugin_174();
		test_plugin_175();
		test_plugin_176();
		test_plugin_177();
		test_plugin_178();
		test_plugin_179();
		test_plugin_180();
		test_plugin_181();
		test_plugin_182();
		test_plugin_183();
		test_plugin_184();
		test_plugin_185();
		test_plugin_186();
		test_plugin_187();
		test_plugin_188();
		test_plugin_189();
		test_plugin_190();
		test_plugin_191();
		test_plugin_192();
		test_plugin_193();
		test_plugin_194();
		test_plugin_195();
		test_plugin_196();
		test_plugin_197();
		test_plugin_198();
		test_plugin_199();
		test_plugin_200();
		test_plugin_201();
		test_plugin_202();
		test_plugin_203();
		test_plugin_204();
		test_plugin_205();
		test_plugin_206();
		test_plugin_207();
		test_plugin_208();
		test_plugin_209();
		test_plugin_210();
		test_plugin_211();
		test_plugin_212();
		test_plugin_213();
		test_plugin_214();
		test_plugin_215();
		test_plugin_216();
		test_plugin_217();
		test_plugin_218();
		test_plugin_219();
		test_plugin_220();
		test_plugin_221();
		test_plugin_222();
		test_plugin_223();
		test_plugin_224();
		test_plugin_225();
		test_plugin_226();
		test_plugin_227();
		test_plugin_228();
		test_plugin_229();
		test_plugin_230();
		test_plugin_231();
		test_plugin_232();
		test_plugin_233();
		test_plugin_234();
		test_plugin_235();
		test_plugin_236();
		test_plugin_237();
		test_plugin_238();
		test_plugin_239();
		test_plugin_240();
		test_plugin_241();
		test_plugin_242();
		test_plugin_243();
		test_plugin_244();
		test_plugin_245();
		test_plugin_246();
		test_plugin_247();
		test_plugin_248();
		test_plugin_249();
		test_plugin_250();
		test_plugin_251();
		test_plugin_252();
		test_plugin_253();
		test_plugin_254();
		test_plugin_255();
		test_plugin_256();
		test_plugin_257();
		test_plugin_258();
		test_plugin_259();
		test_plugin_260();
		test_plugin_261();
		test_plugin_262();
		test_plugin_263();
		test_plugin_264();
		test_plugin_265();
		test_plugin_266();
		test_plugin_267();
		test_plugin_268();
		test_plugin_269();
		test_plugin_270();
		test_plugin_271();
		test_plugin_272();
		test_plugin_273();
		test_plugin_274();
		test_plugin_275();
		test_plugin_276();
		test_plugin_277();
		test_plugin_278();
		test_plugin_279();
		test_plugin_280();
		test_plugin_281();
		test_plugin_282();
		test_plugin_283();
		test_plugin_284();
		test_plugin_285();
		test_plugin_286();
		test_plugin_287();
		test_plugin_288();
		test_plugin_289();
		test_plugin_290();
		test_plugin_291();
		test_plugin_292();
		test_plugin_293();
		test_plugin_294();
		test_plugin_295();
		test_plugin_296();
		test_plugin_297();
		test_plugin_298();
		test_plugin_299();
		test_plugin_300();
		test_plugin_301();
		test_plugin_302();
		test_plugin_303();
		test_plugin_304();
		test_plugin_305();
		test_plugin_306();
		test_plugin_307();
		test_plugin_308();
		test_plugin_309();
		test_plugin_310();
		test_plugin_311();
		test_plugin_312();
		test_plugin_313();
		test_plugin_314();
		test_plugin_315();
		test_plugin_316();
		test_plugin_317();
		test_plugin_318();
		test_plugin_319();
		test_plugin_320();
		test_plugin_321();
		test_plugin_322();
		test_plugin_323();
		test_plugin_324();
		test_plugin_325();
		test_plugin_326();
		test_plugin_327();
		test_plugin_328();
		test_plugin_329();
		test_plugin_330();
		test_plugin_331();
		test_plugin_332();
		test_plugin_333();
		test_plugin_334();
		test_plugin_335();
		test_plugin_336();
		test_plugin_337();
		test_plugin_338();
		test_plugin_339();
		test_plugin_340();
		test_plugin_341();
		test_plugin_342();
		test_plugin_343();
		test_plugin_344();
		test_plugin_345();
		test_plugin_346();
		test_plugin_347();
		test_plugin_348();
		test_plugin_349();
		test_plugin_350();
		test_plugin_351();
		test_plugin_352();
		test_plugin_353();
		test_plugin_354();
		test_plugin_355();
		test_plugin_356();
		test_plugin_357();
		test_plugin_358();
		test_plugin_359();
		test_plugin_360();
		test_plugin_361();
		test_plugin_362();
		test_plugin_363();
		test_plugin_364();
		test_plugin_365();
		test_plugin_366();
		test_plugin_367();
		test_plugin_368();
		test_plugin_369();
		test_plugin_370();
		test_plugin_371();
		test_plugin_372();
		test_plugin_373();
		test_plugin_374();
		test_plugin_375();
		test_plugin_376();
		test_plugin_377();
		test_plugin_378();
		test_plugin_379();
		test_plugin_380();
		test_plugin_381();
		test_plugin_382();
		test_plugin_383();
		test_plugin_384();
		test_plugin_385();
		test_plugin_386();
		test_plugin_387();
		test_plugin_388();
		test_plugin_389();
		test_plugin_390();
		test_plugin_391();
		test_plugin_392();
		test_plugin_393();
		test_plugin_394();
		test_plugin_395();
		test_plugin_396();
		test_plugin_397();
		test_plugin_398();
		test_plugin_399();
		test_plugin_400();
		test_plugin_401();
		test_plugin_402();
		test_plugin_403();
		test_plugin_404();
		test_plugin_405();
		test_plugin_406();
		test_plugin_407();
		test_plugin_408();
		test_plugin_409();
		test_plugin_410();
		test_plugin_411();
		test_plugin_412();
		test_plugin_413();
		test_plugin_414();
		test_plugin_415();
		test_plugin_416();
		test_plugin_417();
		test_plugin_418();
		test_plugin_419();
		test_plugin_420();
		test_plugin_421();
		test_plugin_422();
		test_plugin_423();
		test_plugin_424();
		test_plugin_425();
		test_plugin_426();
		test_plugin_427();
		test_plugin_428();
		test_plugin_429();
		test_plugin_430();
		test_plugin_431();
		test_plugin_432();
		test_plugin_433();
		test_plugin_434();
		test_plugin_435();
		test_plugin_436();
		test_plugin_437();
		test_plugin_438();
		test_plugin_439();
		test_plugin_440();
		test_plugin_441();
		test_plugin_442();
		test_plugin_443();
		test_plugin_444();
		test_plugin_445();
		test_plugin_446();
		test_plugin_447();
		test_plugin_448();
		test_plugin_449();
		test_plugin_450();
		test_plugin_451();
		test_plugin_452();
		test_plugin_453();
		test_plugin_454();
		test_plugin_455();
		test_plugin_456();
		test_plugin_457();
		test_plugin_458();
		test_plugin_459();
		test_plugin_460();
		test_plugin_461();
		test_plugin_462();
		test_plugin_463();
		test_plugin_464();
		test_plugin_465();
		test_plugin_466();
		test_plugin_467();
		test_plugin_468();
		test_plugin_469();
		test_plugin_470();
		test_plugin_471();
		test_plugin_472();
		test_plugin_473();
		test_plugin_474();
		test_plugin_475();
		test_plugin_476();
		test_plugin_477();
		test_plugin_478();
		test_plugin_479();
		test_plugin_480();
		test_plugin_481();
		test_plugin_482();
		test_plugin_483();
		test_plugin_484();
		test_plugin_485();
		test_plugin_486();
		test_plugin_487();
		test_plugin_488();
		test_plugin_489();
		test_plugin_490();
		test_plugin_491();
		test_plugin_492();
		test_plugin_493();
		test_plugin_494();
		test_plugin_495();
		test_plugin_496();
		test_plugin_497();
		test_plugin_498();
		test_plugin_499();
		test_plugin_500();
		test_plugin_501();
		test_plugin_502();
		test_plugin_503();
		test_plugin_504();
		test_plugin_505();
		test_plugin_506();
		test_plugin_507();
		test_plugin_508();
		test_plugin_509();
		test_plugin_510();
		test_plugin_511();
		test_plugin_512();
		test_plugin_513();
		test_plugin_514();
		test_plugin_515();
		test_plugin_516();
		test_plugin_517();
		test_plugin_518();
		test_plugin_519();
		test_plugin_520();
		test_plugin_521();
		test_plugin_522();
		test_plugin_523();
		test_plugin_524();
		test_plugin_525();
		test_plugin_526();
		test_plugin_527();
		test_plugin_528();
		test_plugin_529();
		test_plugin_530();
		test_plugin_531();
		test_plugin_532();
		test_plugin_533();
		test_plugin_534();
		test_plugin_535();
		test_plugin_536();
		test_plugin_537();
		test_plugin_538();
		test_plugin_539();
		test_plugin_540();
		test_plugin_541();
		test_plugin_542();
		test_plugin_543();
		test_plugin_544();
		test_plugin_545();
		test_plugin_546();
		test_plugin_547();
		test_plugin_548();
		test_plugin_549();
		test_plugin_550();
		test_plugin_551();
		test_plugin_552();
		test_plugin_553();
		test_plugin_554();
		test_plugin_555();
		test_plugin_556();
		test_plugin_557();
		test_plugin_558();
		test_plugin_559();
		test_plugin_560();
		test_plugin_561();
		test_plugin_562();
		test_plugin_563();
		test_plugin_564();
		test_plugin_565();
		test_plugin_566();
		test_plugin_567();
		test_plugin_568();
		test_plugin_569();
		test_plugin_570();
		test_plugin_571();
		test_plugin_572();
		test_plugin_573();
		test_plugin_574();
		test_plugin_575();
		test_plugin_576();
		test_plugin_577();
		test_plugin_578();
		test_plugin_579();
		test_plugin_580();
		test_plugin_581();
		test_plugin_582();
		test_plugin_583();
		test_plugin_584();
		test_plugin_585();
		test_plugin_586();
		test_plugin_587();
		test_plugin_588();
		test_plugin_589();
		test_plugin_590();
		test_plugin_591();
		test_plugin_592();
		test_plugin_593();
		test_plugin_594();
		test_plugin_595();
		test_plugin_596();
		test_plugin_597();
		test_plugin_598();
		test_plugin_599();
		test_plugin_600();
		test_plugin_601();
		test_plugin_602();
		test_plugin_603();
		test_plugin_604();
		test_plugin_605();
		test_plugin_606();
		test_plugin_607();
		test_plugin_608();
		test_plugin_609();
		test_plugin_610();
		test_plugin_611();
		test_plugin_612();
		test_plugin_613();
		test_plugin_614();
		test_plugin_615();
		test_plugin_616();
		test_plugin_617();
		test_plugin_618();
		test_plugin_619();
		test_plugin_620();
		test_plugin_621();
		test_plugin_622();
		test_plugin_623();
		test_plugin_624();
		test_plugin_625();
		test_plugin_626();
		test_plugin_627();
		test_plugin_628();
		test_plugin_629();
		test_plugin_630();
		test_plugin_631();
		test_plugin_632();
		test_plugin_633();
		test_plugin_634();
		test_plugin_635();
		test_plugin_636();
		test_plugin_637();
		test_plugin_638();
		test_plugin_639();
		test_plugin_640();
		test_plugin_641();
		test_plugin_642();
		test_plugin_643();
		test_plugin_644();
		test_plugin_645();
		test_plugin_646();
		test_plugin_647();
		test_plugin_648();
		test_plugin_649();
		test_plugin_650();
		test_plugin_651();
		test_plugin_652();
		test_plugin_653();
		test_plugin_654();
		test_plugin_655();
		test_plugin_656();
		test_plugin_657();
		test_plugin_658();
		test_plugin_659();
		test_plugin_660();
		test_plugin_661();
		test_plugin_662();
		test_plugin_663();
		test_plugin_664();
		test_plugin_665();
		test_plugin_666();
		test_plugin_667();
		test_plugin_668();
		test_plugin_669();
		test_plugin_670();
		test_plugin_671();
		test_plugin_672();
		test_plugin_673();
		test_plugin_674();
		test_plugin_675();
		test_plugin_676();
		test_plugin_677();
		test_plugin_678();
		test_plugin_679();
		test_plugin_680();
		test_plugin_681();
		test_plugin_682();
		test_plugin_683();
		test_plugin_684();
		test_plugin_685();
		test_plugin_686();
		test_plugin_687();
		test_plugin_688();
		test_plugin_689();
		test_plugin_690();
		test_plugin_691();
		test_plugin_692();
		test_plugin_693();
		test_plugin_694();
		test_plugin_695();
		test_plugin_696();
		test_plugin_697();
		test_plugin_698();
		test_plugin_699();
		test_plugin_700();
		test_plugin_701();
		test_plugin_702();
		test_plugin_703();
		test_plugin_704();
		test_plugin_705();
		test_plugin_706();
		test_plugin_707();
		test_plugin_708();
		test_plugin_709();
		test_plugin_710();
		test_plugin_711();
		test_plugin_712();
		test_plugin_713();
		test_plugin_714();
		test_plugin_715();
		test_plugin_716();
		test_plugin_717();
		test_plugin_718();
		test_plugin_719();
		test_plugin_720();
		test_plugin_721();
		test_plugin_722();
		test_plugin_723();
		test_plugin_724();
		test_plugin_725();
		test_plugin_726();
		test_plugin_727();
		test_plugin_728();
		test_plugin_729();
		test_plugin_730();
		test_plugin_731();
		test_plugin_732();
		test_plugin_733();
		test_plugin_734();
		test_plugin_735();
		test_plugin_736();
		test_plugin_737();
		test_plugin_738();
		test_plugin_739();
		test_plugin_740();
		test_plugin_741();
		test_plugin_742();
		test_plugin_743();
		test_plugin_744();
		test_plugin_745();
		test_plugin_746();
		test_plugin_747();
		test_plugin_748();
		test_plugin_749();
		test_plugin_750();
		test_plugin_751();
		test_plugin_752();
		test_plugin_753();
		test_plugin_754();
		test_plugin_755();
		test_plugin_756();
		test_plugin_757();
		test_plugin_758();
		test_plugin_759();
		test_plugin_760();
		test_plugin_761();
		test_plugin_762();
		test_plugin_763();
		test_plugin_764();
		test_plugin_765();
		test_plugin_766();
		test_plugin_767();
		test_plugin_768();
		test_plugin_769();
		test_plugin_770();
		test_plugin_771();
		test_plugin_772();
		test_plugin_773();
		test_plugin_774();
		test_plugin_775();
		test_plugin_776();
		test_plugin_777();
		test_plugin_778();
		test_plugin_779();
		test_plugin_780();
		test_plugin_781();
		test_plugin_782();
		test_plugin_783();
		test_plugin_784();
		test_plugin_785();
		test_plugin_786();
		test_plugin_787();
		test_plugin_788();
		test_plugin_789();
		test_plugin_790();
		test_plugin_791();
		test_plugin_792();
		test_plugin_793();
		test_plugin_794();
		test_plugin_795();
		test_plugin_796();
		test_plugin_797();
		test_plugin_798();
		test_plugin_799();
		test_plugin_800();
		test_plugin_801();
		test_plugin_802();
		test_plugin_803();
		test_plugin_804();
		test_plugin_805();
		test_plugin_806();
		test_plugin_807();
		test_plugin_808();
		test_plugin_809();
		test_plugin_810();
		test_plugin_811();
		test_plugin_812();
		test_plugin_813();
		test_plugin_814();
		test_plugin_815();
		test_plugin_816();
		test_plugin_817();
		test_plugin_818();
		test_plugin_819();
		test_plugin_820();
		test_plugin_821();
		test_plugin_822();
		test_plugin_823();
		test_plugin_824();
		test_plugin_825();
		test_plugin_826();
		test_plugin_827();
		test_plugin_828();
		test_plugin_829();
		test_plugin_830();
		test_plugin_831();
		test_plugin_832();
		test_plugin_833();
		test_plugin_834();
		test_plugin_835();
		test_plugin_836();
		test_plugin_837();
		test_plugin_838();
		test_plugin_839();
		test_plugin_840();
		test_plugin_841();
		test_plugin_842();
		test_plugin_843();
		test_plugin_844();
		test_plugin_845();
		test_plugin_846();
		test_plugin_847();
		test_plugin_848();
		test_plugin_849();
		test_plugin_850();
		test_plugin_851();
		test_plugin_852();
		test_plugin_853();
		test_plugin_854();
		test_plugin_855();
		test_plugin_856();
		test_plugin_857();
		test_plugin_858();
		test_plugin_859();
		test_plugin_860();
		test_plugin_861();
		test_plugin_862();
		test_plugin_863();
		test_plugin_864();
		test_plugin_865();
		test_plugin_866();
		test_plugin_867();
		test_plugin_868();
		test_plugin_869();
		test_plugin_870();
		test_plugin_871();
		test_plugin_872();
		test_plugin_873();
		test_plugin_874();
		test_plugin_875();
		test_plugin_876();
		test_plugin_877();
		test_plugin_878();
		test_plugin_879();
		test_plugin_880();
		test_plugin_881();
		test_plugin_882();
		test_plugin_883();
		test_plugin_884();
		test_plugin_885();
		test_plugin_886();
		test_plugin_887();
		test_plugin_888();
		test_plugin_889();
		test_plugin_890();
		test_plugin_891();
		test_plugin_892();
		test_plugin_893();
		test_plugin_894();
		test_plugin_895();
		test_plugin_896();
		test_plugin_897();
		test_plugin_898();
		test_plugin_899();
		test_plugin_900();
		test_plugin_901();
		test_plugin_902();
		test_plugin_903();
		test_plugin_904();
		test_plugin_905();
		test_plugin_906();
		test_plugin_907();
		test_plugin_908();
		test_plugin_909();
		test_plugin_910();
		test_plugin_911();
		test_plugin_912();
		test_plugin_913();
		test_plugin_914();
		test_plugin_915();
		test_plugin_916();
		test_plugin_917();
		test_plugin_918();
		test_plugin_919();
		test_plugin_920();
		test_plugin_921();
		test_plugin_922();
		test_plugin_923();
		test_plugin_924();
		test_plugin_925();
		test_plugin_926();
		test_plugin_927();
		test_plugin_928();
		test_plugin_929();
		test_plugin_930();
		test_plugin_931();
		test_plugin_932();
		test_plugin_933();
		test_plugin_934();
		test_plugin_935();
		test_plugin_936();
		test_plugin_937();
		test_plugin_938();
		test_plugin_939();
		test_plugin_940();
		test_plugin_941();
		test_plugin_942();
		test_plugin_943();
		test_plugin_944();
		test_plugin_945();
		test_plugin_946();
		test_plugin_947();
		test_plugin_948();
		test_plugin_949();
		test_plugin_950();
		test_plugin_951();
		test_plugin_952();
		test_plugin_953();
		test_plugin_954();
		test_plugin_955();
		test_plugin_956();
		test_plugin_957();
		test_plugin_958();
		test_plugin_959();
		test_plugin_960();
		test_plugin_961();
		test_plugin_962();
		test_plugin_963();
		test_plugin_964();
		test_plugin_965();
		test_plugin_966();
		test_plugin_967();
		test_plugin_968();
		test_plugin_969();
		test_plugin_970();
		test_plugin_971();
		test_plugin_972();
		test_plugin_973();
		test_plugin_974();
		test_plugin_975();
		test_plugin_976();
		test_plugin_977();
		test_plugin_978();
		test_plugin_979();
		test_plugin_980();
		test_plugin_981();
		test_plugin_982();
		test_plugin_983();
		test_plugin_984();
		test_plugin_985();
		test_plugin_986();
		test_plugin_987();
		test_plugin_988();
		test_plugin_989();
		test_plugin_990();
		test_plugin_991();
		test_plugin_992();
		test_plugin_993();
		test_plugin_994();
		test_plugin_995();
		test_plugin_996();
		test_plugin_997();
		test_plugin_998();
		test_plugin_999();
		test_plugin_1000();
		test_plugin_1001();
		test_plugin_1002();
		test_plugin_1003();
		test_plugin_1004();
		test_plugin_1005();
		test_plugin_1006();
		test_plugin_1007();
		test_plugin_1008();
		test_plugin_1009();
		test_plugin_1010();
		test_plugin_1011();
		test_plugin_1012();
		test_plugin_1013();
		test_plugin_1014();
		test_plugin_1015();
		test_plugin_1016();
		test_plugin_1017();
		test_plugin_1018();
		test_plugin_1019();
		test_plugin_1020();
		test_plugin_1021();
		test_plugin_1022();
		test_plugin_1023();
		test_plugin_1024();
		test_plugin_1025();
		test_plugin_1026();
		test_plugin_1027();
		test_plugin_1028();
		test_plugin_1029();
		test_plugin_1030();
		test_plugin_1031();
		test_plugin_1032();
		test_plugin_1033();
		test_plugin_1034();
		test_plugin_1035();
		test_plugin_1036();
		test_plugin_1037();
		test_plugin_1038();
		test_plugin_1039();
		test_plugin_1040();
		test_plugin_1041();
		test_plugin_1042();
		test_plugin_1043();
		test_plugin_1044();
		test_plugin_1045();
		test_plugin_1046();
		test_plugin_1047();
		test_plugin_1048();
		test_plugin_1049();
		test_plugin_1050();
		test_plugin_1051();
		test_plugin_1052();
		test_plugin_1053();
		test_plugin_1054();
		test_plugin_1055();
		test_plugin_1056();
		test_plugin_1057();
		test_plugin_1058();
		test_plugin_1059();
		test_plugin_1060();
		test_plugin_1061();
		test_plugin_1062();
		test_plugin_1063();
		test_plugin_1064();
		test_plugin_1065();
		test_plugin_1066();
		test_plugin_1067();
		test_plugin_1068();
		test_plugin_1069();
		test_plugin_1070();
		test_plugin_1071();
		test_plugin_1072();
		test_plugin_1073();
		test_plugin_1074();
		test_plugin_1075();
		test_plugin_1076();
		test_plugin_1077();
		test_plugin_1078();
		test_plugin_1079();
		test_plugin_1080();
		test_plugin_1081();
		test_plugin_1082();
		test_plugin_1083();
		test_plugin_1084();
		test_plugin_1085();
		test_plugin_1086();
		test_plugin_1087();
		test_plugin_1088();
		test_plugin_1089();
		test_plugin_1090();
		test_plugin_1091();
		test_plugin_1092();
		test_plugin_1093();
		test_plugin_1094();
		test_plugin_1095();
		test_plugin_1096();
		test_plugin_1097();
		test_plugin_1098();
		test_plugin_1099();
		test_plugin_1100();
		test_plugin_1101();
		test_plugin_1102();
		test_plugin_1103();
		test_plugin_1104();
		test_plugin_1105();
		test_plugin_1106();
		test_plugin_1107();
		test_plugin_1108();
		test_plugin_1109();
		test_plugin_1110();
		test_plugin_1111();
		test_plugin_1112();
		test_plugin_1113();
		test_plugin_1114();
		test_plugin_1115();
		test_plugin_1116();
		test_plugin_1117();
		test_plugin_1118();
		test_plugin_1119();
		test_plugin_1120();
		test_plugin_1121();
		test_plugin_1122();
		test_plugin_1123();
		test_plugin_1124();
		test_plugin_1125();
		test_plugin_1126();
		test_plugin_1127();
		test_plugin_1128();
		test_plugin_1129();
		test_plugin_1130();
		test_plugin_1131();
		test_plugin_1132();
		test_plugin_1133();
		test_plugin_1134();
		test_plugin_1135();
		test_plugin_1136();
		test_plugin_1137();
		test_plugin_1138();
		test_plugin_1139();
		test_plugin_1140();
		test_plugin_1141();
		test_plugin_1142();
		test_plugin_1143();
		test_plugin_1144();
		test_plugin_1145();
		test_plugin_1146();
		test_plugin_1147();
		test_plugin_1148();
		test_plugin_1149();
		test_plugin_1150();
		test_plugin_1151();
		test_plugin_1152();
		test_plugin_1153();
		test_plugin_1154();
		test_plugin_1155();
		test_plugin_1156();
		test_plugin_1157();
		test_plugin_1158();
		test_plugin_1159();
		test_plugin_1160();
		test_plugin_1161();
		test_plugin_1162();
		test_plugin_1163();
		test_plugin_1164();
		test_plugin_1165();
		test_plugin_1166();
		test_plugin_1167();
		test_plugin_1168();
		test_plugin_1169();
		test_plugin_1170();
		test_plugin_1171();
		test_plugin_1172();
		test_plugin_1173();
		test_plugin_1174();
		test_plugin_1175();
		test_plugin_1176();
		test_plugin_1177();
		test_plugin_1178();
		test_plugin_1179();
		test_plugin_1180();
		test_plugin_1181();
		test_plugin_1182();
		test_plugin_1183();
		test_plugin_1184();
		test_plugin_1185();
		test_plugin_1186();
		test_plugin_1187();
		test_plugin_1188();
		test_plugin_1189();
		test_plugin_1190();
		test_plugin_1191();
		test_plugin_1192();
		test_plugin_1193();
		test_plugin_1194();
		test_plugin_1195();
		test_plugin_1196();
		test_plugin_1197();
		test_plugin_1198();
		test_plugin_1199();
		test_plugin_1200();
		test_plugin_1201();
		test_plugin_1202();
		test_plugin_1203();
		test_plugin_1204();
		test_plugin_1205();
		test_plugin_1206();
		test_plugin_1207();
		test_plugin_1208();
		test_plugin_1209();
		test_plugin_1210();
		test_plugin_1211();
		test_plugin_1212();
		test_plugin_1213();
		test_plugin_1214();
		test_plugin_1215();
		test_plugin_1216();
		test_plugin_1217();
		test_plugin_1218();
		test_plugin_1219();
		test_plugin_1220();
		test_plugin_1221();
		test_plugin_1222();
		test_plugin_1223();
		test_plugin_1224();
		test_plugin_1225();
		test_plugin_1226();
		test_plugin_1227();
		test_plugin_1228();
		test_plugin_1229();
		test_plugin_1230();
		test_plugin_1231();
		test_plugin_1232();
		test_plugin_1233();
		test_plugin_1234();
		test_plugin_1235();
		test_plugin_1236();
		test_plugin_1237();
		test_plugin_1238();
		test_plugin_1239();
		test_plugin_1240();
		test_plugin_1241();
		test_plugin_1242();
		test_plugin_1243();
		test_plugin_1244();
		test_plugin_1245();
		test_plugin_1246();
		test_plugin_1247();
		test_plugin_1248();
		test_plugin_1249();
		test_plugin_1250();
		test_plugin_1251();
		test_plugin_1252();
		test_plugin_1253();
		test_plugin_1254();
		test_plugin_1255();
		test_plugin_1256();
		test_plugin_1257();
		test_plugin_1258();
		test_plugin_1259();
		test_plugin_1260();
		test_plugin_1261();
		test_plugin_1262();
		test_plugin_1263();
		test_plugin_1264();
		test_plugin_1265();
		test_plugin_1266();
		test_plugin_1267();
		test_plugin_1268();
		test_plugin_1269();
		test_plugin_1270();
		test_plugin_1271();
		test_plugin_1272();
		test_plugin_1273();
		test_plugin_1274();
		test_plugin_1275();
		test_plugin_1276();
		test_plugin_1277();
		test_plugin_1278();
		test_plugin_1279();
		test_plugin_1280();
		test_plugin_1281();
		test_plugin_1282();
		test_plugin_1283();
		test_plugin_1284();
		test_plugin_1285();
		test_plugin_1286();
		test_plugin_1287();
		test_plugin_1288();
		test_plugin_1289();
		test_plugin_1290();
		test_plugin_1291();
		test_plugin_1292();
		test_plugin_1293();
		test_plugin_1294();
		test_plugin_1295();
		test_plugin_1296();
		test_plugin_1297();
		test_plugin_1298();
		test_plugin_1299();
		test_plugin_1300();
		test_plugin_1301();
		test_plugin_1302();
		test_plugin_1303();
		test_plugin_1304();
		test_plugin_1305();
		test_plugin_1306();
		test_plugin_1307();
		test_plugin_1308();
		test_plugin_1309();
		test_plugin_1310();
		test_plugin_1311();
		test_plugin_1312();
		test_plugin_1313();
		test_plugin_1314();
		test_plugin_1315();
		test_plugin_1316();
		test_plugin_1317();
		test_plugin_1318();
		test_plugin_1319();
		test_plugin_1320();
		test_plugin_1321();
		test_plugin_1322();
		test_plugin_1323();
		test_plugin_1324();
		test_plugin_1325();
		test_plugin_1326();
		test_plugin_1327();
		test_plugin_1328();
		test_plugin_1329();
		test_plugin_1330();
		test_plugin_1331();
		test_plugin_1332();
		test_plugin_1333();
		test_plugin_1334();
		test_plugin_1335();
		test_plugin_1336();
		test_plugin_1337();
		test_plugin_1338();
		test_plugin_1339();
		test_plugin_1340();
		test_plugin_1341();
		test_plugin_1342();
		test_plugin_1343();
		test_plugin_1344();
		test_plugin_1345();
		test_plugin_1346();
		test_plugin_1347();
		test_plugin_1348();
		test_plugin_1349();
		test_plugin_1350();
		test_plugin_1351();
		test_plugin_1352();
		test_plugin_1353();
		test_plugin_1354();
		test_plugin_1355();
		test_plugin_1356();
		test_plugin_1357();
		test_plugin_1358();
		test_plugin_1359();
		test_plugin_1360();
		test_plugin_1361();
		test_plugin_1362();
		test_plugin_1363();
		test_plugin_1364();
		test_plugin_1365();
		test_plugin_1366();
		test_plugin_1367();
		test_plugin_1368();
		test_plugin_1369();
		test_plugin_1370();
		test_plugin_1371();
		test_plugin_1372();
		test_plugin_1373();
		test_plugin_1374();
		test_plugin_1375();
		test_plugin_1376();
		test_plugin_1377();
		test_plugin_1378();
		test_plugin_1379();
		test_plugin_1380();
		test_plugin_1381();
		test_plugin_1382();
		test_plugin_1383();
		test_plugin_1384();
		test_plugin_1385();
		test_plugin_1386();
		test_plugin_1387();
		test_plugin_1388();
		test_plugin_1389();
		test_plugin_1390();
		test_plugin_1391();
		test_plugin_1392();
		test_plugin_1393();
		test_plugin_1394();
		test_plugin_1395();
		test_plugin_1396();
		test_plugin_1397();
		test_plugin_1398();
		test_plugin_1399();
		test_plugin_1400();
		test_plugin_1401();
		test_plugin_1402();
		test_plugin_1403();
		test_plugin_1404();
		test_plugin_1405();
		test_plugin_1406();
		test_plugin_1407();
		test_plugin_1408();
		test_plugin_1409();
		test_plugin_1410();
		test_plugin_1411();
		test_plugin_1412();
		test_plugin_1413();
		test_plugin_1414();
		test_plugin_1415();
		test_plugin_1416();
		test_plugin_1417();
		test_plugin_1418();
		test_plugin_1419();
		test_plugin_1420();
		test_plugin_1421();
		test_plugin_1422();
		test_plugin_1423();
		test_plugin_1424();
		test_plugin_1425();
		test_plugin_1426();
		test_plugin_1427();
		test_plugin_1428();
		test_plugin_1429();
		test_plugin_1430();
		test_plugin_1431();
		test_plugin_1432();
		test_plugin_1433();
		test_plugin_1434();
		test_plugin_1435();
		test_plugin_1436();
		test_plugin_1437();
		test_plugin_1438();
		test_plugin_1439();
		test_plugin_1440();
		test_plugin_1441();
		test_plugin_1442();
		test_plugin_1443();
		test_plugin_1444();
		test_plugin_1445();
		test_plugin_1446();
		test_plugin_1447();
		test_plugin_1448();
		test_plugin_1449();
		test_plugin_1450();
		test_plugin_1451();
		test_plugin_1452();
		test_plugin_1453();
		test_plugin_1454();
		test_plugin_1455();
		test_plugin_1456();
		test_plugin_1457();
		test_plugin_1458();
		test_plugin_1459();
		test_plugin_1460();
		test_plugin_1461();
		test_plugin_1462();
		test_plugin_1463();
		test_plugin_1464();
		test_plugin_1465();
		test_plugin_1466();
		test_plugin_1467();
		test_plugin_1468();
		test_plugin_1469();
		test_plugin_1470();
		test_plugin_1471();
		test_plugin_1472();
		test_plugin_1473();
		test_plugin_1474();
		test_plugin_1475();
		test_plugin_1476();
		test_plugin_1477();
		test_plugin_1478();
		test_plugin_1479();
		test_plugin_1480();
		test_plugin_1481();
		test_plugin_1482();
		test_plugin_1483();
		test_plugin_1484();
		test_plugin_1485();
		test_plugin_1486();
		test_plugin_1487();
		test_plugin_1488();
		test_plugin_1489();
		test_plugin_1490();
		test_plugin_1491();
		test_plugin_1492();
		test_plugin_1493();
		test_plugin_1494();
		test_plugin_1495();
		test_plugin_1496();
		test_plugin_1497();
		test_plugin_1498();
		test_plugin_1499();
		test_plugin_1500();
		test_plugin_1501();
		test_plugin_1502();
		test_plugin_1503();
		test_plugin_1504();
		test_plugin_1505();
		test_plugin_1506();
		test_plugin_1507();
		test_plugin_1508();
		test_plugin_1509();
		test_plugin_1510();
		test_plugin_1511();
		test_plugin_1512();
		test_plugin_1513();
		test_plugin_1514();
		test_plugin_1515();
		test_plugin_1516();
		test_plugin_1517();
		test_plugin_1518();
		test_plugin_1519();
		test_plugin_1520();
		test_plugin_1521();
		test_plugin_1522();
		test_plugin_1523();
		test_plugin_1524();
		test_plugin_1525();
		test_plugin_1526();
		test_plugin_1527();
		test_plugin_1528();
		test_plugin_1529();
		test_plugin_1530();
		test_plugin_1531();
		test_plugin_1532();
		test_plugin_1533();
		test_plugin_1534();
		test_plugin_1535();
		test_plugin_1536();
		test_plugin_1537();
		test_plugin_1538();
		test_plugin_1539();
		test_plugin_1540();
		test_plugin_1541();
		test_plugin_1542();
		test_plugin_1543();
		test_plugin_1544();
		test_plugin_1545();
		test_plugin_1546();
		test_plugin_1547();
		test_plugin_1548();
		test_plugin_1549();
		test_plugin_1550();
		test_plugin_1551();
		test_plugin_1552();
		test_plugin_1553();
		test_plugin_1554();
		test_plugin_1555();
		test_plugin_1556();
		test_plugin_1557();
		test_plugin_1558();
		test_plugin_1559();
		test_plugin_1560();
		test_plugin_1561();
		test_plugin_1562();
		test_plugin_1563();
		test_plugin_1564();
		test_plugin_1565();
		test_plugin_1566();
		test_plugin_1567();
		test_plugin_1568();
		test_plugin_1569();
		test_plugin_1570();
		test_plugin_1571();
		test_plugin_1572();
		test_plugin_1573();
		test_plugin_1574();
		test_plugin_1575();
		test_plugin_1576();
		test_plugin_1577();
		test_plugin_1578();
		test_plugin_1579();
		test_plugin_1580();
		test_plugin_1581();
		test_plugin_1582();
		test_plugin_1583();
		test_plugin_1584();
		test_plugin_1585();
		test_plugin_1586();
		test_plugin_1587();
		test_plugin_1588();
		test_plugin_1589();
		test_plugin_1590();
		test_plugin_1591();
		test_plugin_1592();
		test_plugin_1593();
		test_plugin_1594();
		test_plugin_1595();
		test_plugin_1596();
		test_plugin_1597();
		test_plugin_1598();
		test_plugin_1599();
		test_plugin_1600();
		test_plugin_1601();
		test_plugin_1602();
		test_plugin_1603();
		test_plugin_1604();
		test_plugin_1605();
		test_plugin_1606();
		test_plugin_1607();
		test_plugin_1608();
		test_plugin_1609();
		test_plugin_1610();
		test_plugin_1611();
		test_plugin_1612();
		test_plugin_1613();
		test_plugin_1614();
		test_plugin_1615();
		test_plugin_1616();
		test_plugin_1617();
		test_plugin_1618();
		test_plugin_1619();
		test_plugin_1620();
		test_plugin_1621();
		test_plugin_1622();
		test_plugin_1623();
		test_plugin_1624();
		test_plugin_1625();
		test_plugin_1626();
		test_plugin_1627();
		test_plugin_1628();
		test_plugin_1629();
		test_plugin_1630();
		test_plugin_1631();
		test_plugin_1632();
		test_plugin_1633();
		test_plugin_1634();
		test_plugin_1635();
		test_plugin_1636();
		test_plugin_1637();
		test_plugin_1638();
		test_plugin_1639();
		test_plugin_1640();
		test_plugin_1641();
		test_plugin_1642();
		test_plugin_1643();
		test_plugin_1644();
		test_plugin_1645();
		test_plugin_1646();
		test_plugin_1647();
		test_plugin_1648();
		test_plugin_1649();
		test_plugin_1650();
		test_plugin_1651();
		test_plugin_1652();
		test_plugin_1653();
		test_plugin_1654();
		test_plugin_1655();
		test_plugin_1656();
		test_plugin_1657();
		test_plugin_1658();
		test_plugin_1659();
		test_plugin_1660();
		test_plugin_1661();
		test_plugin_1662();
		test_plugin_1663();
		test_plugin_1664();
		test_plugin_1665();
		test_plugin_1666();
		test_plugin_1667();
		test_plugin_1668();
		test_plugin_1669();
		test_plugin_1670();
		test_plugin_1671();
		test_plugin_1672();
		test_plugin_1673();
		test_plugin_1674();
		test_plugin_1675();
		test_plugin_1676();
		test_plugin_1677();
		test_plugin_1678();
		test_plugin_1679();
		test_plugin_1680();
		test_plugin_1681();
		test_plugin_1682();
		test_plugin_1683();
		test_plugin_1684();
		test_plugin_1685();
		test_plugin_1686();
		test_plugin_1687();
		test_plugin_1688();
		test_plugin_1689();
		test_plugin_1690();
		test_plugin_1691();
		test_plugin_1692();
		test_plugin_1693();
		test_plugin_1694();
		test_plugin_1695();
		test_plugin_1696();
		test_plugin_1697();
		test_plugin_1698();
		test_plugin_1699();
		test_plugin_1700();
		test_plugin_1701();
		test_plugin_1702();
		test_plugin_1703();
		test_plugin_1704();
		test_plugin_1705();
		test_plugin_1706();
		test_plugin_1707();
		test_plugin_1708();
		test_plugin_1709();
		test_plugin_1710();
		test_plugin_1711();
		test_plugin_1712();
		test_plugin_1713();
		test_plugin_1714();
		test_plugin_1715();
		test_plugin_1716();
		test_plugin_1717();
		test_plugin_1718();
		test_plugin_1719();
		test_plugin_1720();
		test_plugin_1721();
		test_plugin_1722();
		test_plugin_1723();
		test_plugin_1724();
		test_plugin_1725();
		test_plugin_1726();
		test_plugin_1727();
		test_plugin_1728();
		test_plugin_1729();
		test_plugin_1730();
		test_plugin_1731();
		test_plugin_1732();
		test_plugin_1733();
		test_plugin_1734();
		test_plugin_1735();
		test_plugin_1736();
		test_plugin_1737();
		test_plugin_1738();
		test_plugin_1739();
		test_plugin_1740();
		test_plugin_1741();
		test_plugin_1742();
		test_plugin_1743();
		test_plugin_1744();
		test_plugin_1745();
		test_plugin_1746();
		test_plugin_1747();
		test_plugin_1748();
		test_plugin_1749();
		test_plugin_1750();
		test_plugin_1751();
		test_plugin_1752();
		test_plugin_1753();
		test_plugin_1754();
		test_plugin_1755();
		test_plugin_1756();
		test_plugin_1757();
		test_plugin_1758();
		test_plugin_1759();
		test_plugin_1760();
		test_plugin_1761();
		test_plugin_1762();
		test_plugin_1763();
		test_plugin_1764();
		test_plugin_1765();
		test_plugin_1766();
		test_plugin_1767();
		test_plugin_1768();
		test_plugin_1769();
		test_plugin_1770();
		test_plugin_1771();
		test_plugin_1772();
		test_plugin_1773();
		test_plugin_1774();
		test_plugin_1775();
		test_plugin_1776();
		test_plugin_1777();
		test_plugin_1778();
		test_plugin_1779();
		test_plugin_1780();
		test_plugin_1781();
		test_plugin_1782();
		test_plugin_1783();
		test_plugin_1784();
		test_plugin_1785();
		test_plugin_1786();
		test_plugin_1787();
		test_plugin_1788();
		test_plugin_1789();
		test_plugin_1790();
		test_plugin_1791();
		test_plugin_1792();
		test_plugin_1793();
		test_plugin_1794();
		test_plugin_1795();
		test_plugin_1796();
		test_plugin_1797();
		test_plugin_1798();
		test_plugin_1799();
		test_plugin_1800();
		test_plugin_1801();
		test_plugin_1802();
		test_plugin_1803();
		test_plugin_1804();
		test_plugin_1805();
		test_plugin_1806();
		test_plugin_1807();
		test_plugin_1808();
		test_plugin_1809();
		test_plugin_1810();
		test_plugin_1811();
		test_plugin_1812();
		test_plugin_1813();
		test_plugin_1814();
		test_plugin_1815();
		test_plugin_1816();
		test_plugin_1817();
		test_plugin_1818();
		test_plugin_1819();
		test_plugin_1820();
		test_plugin_1821();
		test_plugin_1822();
		test_plugin_1823();
		test_plugin_1824();
		test_plugin_1825();
		test_plugin_1826();
		test_plugin_1827();
		test_plugin_1828();
		test_plugin_1829();
		test_plugin_1830();
		test_plugin_1831();
		test_plugin_1832();
		test_plugin_1833();
		test_plugin_1834();
		test_plugin_1835();
		test_plugin_1836();
		test_plugin_1837();
		test_plugin_1838();
		test_plugin_1839();
		test_plugin_1840();
		test_plugin_1841();
		test_plugin_1842();
		test_plugin_1843();
		test_plugin_1844();
		test_plugin_1845();
		test_plugin_1846();
		test_plugin_1847();
		test_plugin_1848();
		test_plugin_1849();
		test_plugin_1850();
		test_plugin_1851();
		test_plugin_1852();
		test_plugin_1853();
		test_plugin_1854();
		test_plugin_1855();
		test_plugin_1856();
		test_plugin_1857();
		test_plugin_1858();
		test_plugin_1859();
		test_plugin_1860();
		test_plugin_1861();
		test_plugin_1862();
		test_plugin_1863();
		test_plugin_1864();
		test_plugin_1865();
		test_plugin_1866();
		test_plugin_1867();
		test_plugin_1868();
		test_plugin_1869();
		test_plugin_1870();
		test_plugin_1871();
		test_plugin_1872();
		test_plugin_1873();
		test_plugin_1874();
		test_plugin_1875();
		test_plugin_1876();
		test_plugin_1877();
		test_plugin_1878();
		test_plugin_1879();
		test_plugin_1880();
		test_plugin_1881();
		test_plugin_1882();
		test_plugin_1883();
		test_plugin_1884();
		test_plugin_1885();
		test_plugin_1886();
		test_plugin_1887();
		test_plugin_1888();
		test_plugin_1889();
		test_plugin_1890();
		test_plugin_1891();
		test_plugin_1892();
		test_plugin_1893();
		test_plugin_1894();
		test_plugin_1895();
		test_plugin_1896();
		test_plugin_1897();
		test_plugin_1898();
		test_plugin_1899();
		test_plugin_1900();
		test_plugin_1901();
		test_plugin_1902();
		test_plugin_1903();
		test_plugin_1904();
		test_plugin_1905();
		test_plugin_1906();
		test_plugin_1907();
		test_plugin_1908();
		test_plugin_1909();
		test_plugin_1910();
		test_plugin_1911();
		test_plugin_1912();
		test_plugin_1913();
		test_plugin_1914();
		test_plugin_1915();
		test_plugin_1916();
		test_plugin_1917();
		test_plugin_1918();
		test_plugin_1919();
		test_plugin_1920();
		test_plugin_1921();
		test_plugin_1922();
		test_plugin_1923();
		test_plugin_1924();
		test_plugin_1925();
		test_plugin_1926();
		test_plugin_1927();
		test_plugin_1928();
		test_plugin_1929();
		test_plugin_1930();
		test_plugin_1931();
		test_plugin_1932();
		test_plugin_1933();
		test_plugin_1934();
		test_plugin_1935();
		test_plugin_1936();
		test_plugin_1937();
		test_plugin_1938();
		test_plugin_1939();
		test_plugin_1940();
		test_plugin_1941();
		test_plugin_1942();
		test_plugin_1943();
		test_plugin_1944();
		test_plugin_1945();
		test_plugin_1946();
		test_plugin_1947();
		test_plugin_1948();
		test_plugin_1949();
		test_plugin_1950();
		test_plugin_1951();
		test_plugin_1952();
		test_plugin_1953();
		test_plugin_1954();
		test_plugin_1955();
		test_plugin_1956();
		test_plugin_1957();
		test_plugin_1958();
		test_plugin_1959();
		test_plugin_1960();
		test_plugin_1961();
		test_plugin_1962();
		test_plugin_1963();
		test_plugin_1964();
		test_plugin_1965();
		test_plugin_1966();
		test_plugin_1967();
		test_plugin_1968();
		test_plugin_1969();
		test_plugin_1970();
		test_plugin_1971();
		test_plugin_1972();
		test_plugin_1973();
		test_plugin_1974();
		test_plugin_1975();
		test_plugin_1976();
		test_plugin_1977();
		test_plugin_1978();
		test_plugin_1979();
		test_plugin_1980();
		test_plugin_1981();
		test_plugin_1982();
		test_plugin_1983();
		test_plugin_1984();
		test_plugin_1985();
		test_plugin_1986();
		test_plugin_1987();
		test_plugin_1988();
		test_plugin_1989();
		test_plugin_1990();
		test_plugin_1991();
		test_plugin_1992();
		test_plugin_1993();
		test_plugin_1994();
		test_plugin_1995();
		test_plugin_1996();
		test_plugin_1997();
		test_plugin_1998();
		test_plugin_1999();
		test_plugin_2000();
	}
}